<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="PlatformData">
	<resultMap id="BaseResultMap" type="com.ink.balance.core.po.PlatformData">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="amt" property="amt" jdbcType="DECIMAL" />
		<result column="arrived_amt" property="arrivedAmt" jdbcType="DECIMAL" />
		<result column="channel_no" property="channelNo" jdbcType="VARCHAR" />
		<result column="channel_merchant_no" property="channelMerchantNo"
			jdbcType="VARCHAR" />
		<result column="platform_order_no" property="platformOrderNo"
			jdbcType="VARCHAR" />
		<result column="trans_no" property="transNo" jdbcType="VARCHAR" />
		<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
		<result column="arrived_time" property="arrivedTime" jdbcType="TIMESTAMP" />
		<result column="pay_status" property="payStatus" jdbcType="INTEGER" />
		<result column="pay_method" property="payMethod" jdbcType="VARCHAR" />
		<result column="check_status" property="checkStatus" jdbcType="INTEGER" />
		<result column="reside_flag" property="resideFlag" jdbcType="INTEGER" />
		<result column="reside_to_date" property="resideToDate"
			jdbcType="DATE" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="batch_id" property="batchId" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 对账汇总Map -->
	<resultMap id="checkChannelResultMap" type="com.ink.balance.core.po.CheckChannel">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="check_date" property="checkDate" jdbcType="TIMESTAMP" />
		<result column="trade_date" property="tradeDate" jdbcType="TIMESTAMP" />
		<result column="channel_no" property="channelNo" jdbcType="VARCHAR" />
		<result column="channel_merchant_no" property="channelMerchantNo"
			jdbcType="VARCHAR" />
		<result column="channel_amount" property="channelAmount"
			jdbcType="DECIMAL" />
		<result column="channel_count" property="channelCount"
			jdbcType="INTEGER" />
		<result column="platform_amount" property="platformAmount"
			jdbcType="DECIMAL" />
		<result column="platform_count" property="platformCount"
			jdbcType="INTEGER" />
		<result column="platform_side_count" property="platformSideCount"
			jdbcType="INTEGER" />
		<result column="channel_side_count" property="channelSideCount"
			jdbcType="INTEGER" />
		<result column="check_status" property="checkStatus" jdbcType="VARCHAR" />
		<result column="difference_count" property="differenceCount"
			jdbcType="INTEGER" />
		<result column="channel_check_file" property="channelCheckFile"
			jdbcType="VARCHAR" />
		<result column="file_source" property="fileSource" jdbcType="VARCHAR" />
		<result column="adjust_status" property="adjustStatus"
			jdbcType="INTEGER" />
		<result column="unhandle_count" property="unhandleCount"
			jdbcType="INTEGER" />
		<result column="handle_notes" property="handleNotes" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="operator_id" property="operatorId" jdbcType="BIGINT" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="batch_id" property="batchId" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, amt, arrived_amt, channel_no,channel_merchant_no,
		platform_order_no,
		trans_no, pay_time,
		arrived_time,
		pay_status,
		pay_method, check_status,
		reside_flag, reside_to_date, create_date,
		update_date,
		del_flag,
		version, remark,batch_id
	</sql>

	<sql id="columns">
		id, amt, arrived_amt, channel_no,channel_merchant_no,
		platform_order_no,
		trans_no, pay_time,
		arrived_time,
		pay_status,
		pay_method, check_status,
		reside_flag, reside_to_date, create_date,
		update_date,
		del_flag,
		version, remark,batch_id
	</sql>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from platform_data
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from platform_data
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		platform_data
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.ink.balance.core.po.PlatformData">
		insert into platform_data (id,
		amt, arrived_amt,
		channel_no,channel_merchant_no, platform_order_no,
		trans_no,
		pay_time,
		arrived_time, pay_status,
		pay_method, check_status,
		reside_flag,
		reside_to_date, create_date, update_date,
		del_flag,
		version, remark,batch_id
		)
		values (#{id,jdbcType=BIGINT},
		#{amt,jdbcType=DECIMAL},
		#{arrivedAmt,jdbcType=DECIMAL},
		#{channelNo,jdbcType=VARCHAR},
		#{channelMerchantNo,jdbcType=VARCHAR},
		#{platformOrderNo,jdbcType=VARCHAR}, #{transNo,jdbcType=VARCHAR},
		#{payTime,jdbcType=TIMESTAMP}, #{arrivedTime,jdbcType=TIMESTAMP},
		#{payStatus,jdbcType=INTEGER},
		#{payMethod,jdbcType=VARCHAR},
		#{checkStatus,jdbcType=INTEGER}, #{resideFlag,jdbcType=INTEGER},
		#{resideToDate,jdbcType=DATE}, #{createDate,jdbcType=TIMESTAMP},
		#{updateDate,jdbcType=TIMESTAMP},
		#{delFlag,jdbcType=INTEGER},
		#{version,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
		#{batchId,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.ink.balance.core.po.PlatformData">
		insert into platform_data
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="amt != null">
				amt,
			</if>
			<if test="arrivedAmt != null">
				arrived_amt,
			</if>
			<if test="channelNo != null">
				channel_no,
			</if>
			<if test="channelMerchantNo != null">
				channel_merchant_no,
			</if>
			<if test="platformOrderNo != null">
				platform_order_no,
			</if>
			<if test="transNo != null">
				trans_no,
			</if>
			<if test="payTime != null">
				pay_time,
			</if>
			<if test="arrivedTime != null">
				arrived_time,
			</if>
			<if test="payStatus != null">
				pay_status,
			</if>
			<if test="payMethod != null">
				pay_method,
			</if>
			<if test="checkStatus != null">
				check_status,
			</if>
			<if test="resideFlag != null">
				reside_flag,
			</if>
			<if test="resideToDate != null">
				reside_to_date,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="batchId != null">
				batch_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="amt != null">
				#{amt,jdbcType=DECIMAL},
			</if>
			<if test="arrivedAmt != null">
				#{arrivedAmt,jdbcType=DECIMAL},
			</if>
			<if test="channelNo != null">
				#{channelNo,jdbcType=VARCHAR},
			</if>
			<if test="channelMerchantNo != null">
				#{channelMerchantNo,jdbcType=VARCHAR},
			</if>
			<if test="platformOrderNo != null">
				#{platformOrderNo,jdbcType=VARCHAR},
			</if>
			<if test="transNo != null">
				#{transNo,jdbcType=VARCHAR},
			</if>
			<if test="payTime != null">
				#{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="arrivedTime != null">
				#{arrivedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payStatus != null">
				#{payStatus,jdbcType=INTEGER},
			</if>
			<if test="payMethod != null">
				#{payMethod,jdbcType=VARCHAR},
			</if>
			<if test="checkStatus != null">
				#{checkStatus,jdbcType=INTEGER},
			</if>
			<if test="resideFlag != null">
				#{resideFlag,jdbcType=INTEGER},
			</if>
			<if test="resideToDate != null">
				#{resideToDate,jdbcType=DATE},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="delFlag != null">
				#{delFlag,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="batchId != null">
				#{batchId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ink.balance.core.po.PlatformData">
		update platform_data
		<set>
			<if test="amt != null">
				amt = #{amt,jdbcType=DECIMAL},
			</if>
			<if test="arrivedAmt != null">
				arrived_amt = #{arrivedAmt,jdbcType=DECIMAL},
			</if>
			<if test="channelNo != null">
				channel_no = #{channelNo,jdbcType=VARCHAR},
			</if>
			<if test="channelMerchantNo != null">
				channel_merchant_no = #{channelMerchantNo,jdbcType=VARCHAR},
			</if>
			<if test="platformOrderNo != null">
				platform_order_no = #{platformOrderNo,jdbcType=VARCHAR},
			</if>
			<if test="transNo != null">
				trans_no = #{transNo,jdbcType=VARCHAR},
			</if>
			<if test="payTime != null">
				pay_time = #{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="arrivedTime != null">
				arrived_time = #{arrivedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payStatus != null">
				pay_status = #{payStatus,jdbcType=INTEGER},
			</if>
			<if test="payMethod != null">
				pay_method = #{payMethod,jdbcType=VARCHAR},
			</if>
			<if test="checkStatus != null">
				check_status = #{checkStatus,jdbcType=INTEGER},
			</if>
			<if test="resideFlag != null">
				reside_flag = #{resideFlag,jdbcType=INTEGER},
			</if>
			<if test="resideToDate != null">
				reside_to_date = #{resideToDate,jdbcType=DATE},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="batchId != null">
				batch_id = #{batchId,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ink.balance.core.po.PlatformData">
		update
		platform_data
		set amt = #{amt,jdbcType=DECIMAL},
		arrived_amt =
		#{arrivedAmt,jdbcType=DECIMAL},
		channel_no =
		#{channelNo,jdbcType=VARCHAR},
		channel_merchant_no =
		#{channelMerchantNo,jdbcType=VARCHAR},
		platform_order_no =
		#{platformOrderNo,jdbcType=VARCHAR},
		trans_no =
		#{transNo,jdbcType=VARCHAR},
		pay_time = #{payTime,jdbcType=TIMESTAMP},
		arrived_time = #{arrivedTime,jdbcType=TIMESTAMP},
		pay_status =
		#{payStatus,jdbcType=INTEGER},
		pay_method =
		#{payMethod,jdbcType=VARCHAR},
		check_status =
		#{checkStatus,jdbcType=INTEGER},
		reside_flag =
		#{resideFlag,jdbcType=INTEGER},
		reside_to_date =
		#{resideToDate,jdbcType=DATE},
		create_date =
		#{createDate,jdbcType=TIMESTAMP},
		update_date =
		#{updateDate,jdbcType=TIMESTAMP},
		del_flag =
		#{delFlag,jdbcType=INTEGER},
		version = #{version,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR},
		batch_id =
		#{batchId,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 获取平台数据 -->
	<select id="getPlatformDataList" parameterType="com.ink.balance.core.query.PlatformDataQuery"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from platform_data
		<where>
			1=1
			<if test="platformOrderNo !=null and  platformOrderNo !=''">
				and platform_order_no =
				#{platformOrderNo,jdbcType=VARCHAR}
			</if>
			<if test="channelNo !=null and  channelNo!=''">
				and channel_no = #{channelNo,jdbcType=VARCHAR}
			</if>
			<if test="channelMerchantNo != null and  channelMerchantNo !='' ">
				and channel_merchant_no = #{channelMerchantNo,jdbcType=VARCHAR}
			</if>
			<if test="arrivedTime !=null and  arrivedTime!=''">
				and DATE_FORMAT(arrived_time,'%Y-%m-%d') =
				DATE_FORMAT(#{arrivedTime},'%Y-%m-%d')
			</if>
		</where>
	</select>
	<!-- 根据平台订单号修改平台数据 amt = #{amt,jdbcType=DECIMAL},pay_time = #{payTime,jdbcType=TIMESTAMP}, -->
	<update id="updatePlatformByPlatformOrderNo" parameterType="com.ink.balance.core.query.PlatformDataQuery">
		update
		platform_data
		<set>
			<if test="arrivedAmt != null">
				arrived_amt = #{arrivedAmt,jdbcType=DECIMAL},
			</if>
			<if test="amt != null">
				amt = #{amt,jdbcType=DECIMAL},
			</if>
			<if test="transNo != null">
				trans_no = #{transNo,jdbcType=VARCHAR},
			</if>
			<if test="channelNo != null">
				channel_no = #{channelNo,jdbcType=VARCHAR},
			</if>
			<if test="payMethod != null">
				pay_method = #{payMethod,jdbcType=VARCHAR},
			</if>
			<if test="channelMerchantNo != null">
				channel_merchant_no = #{channelMerchantNo,jdbcType=VARCHAR},
			</if>
			<if test="payStatus != null">
				pay_status = #{payStatus,jdbcType=INTEGER},
			</if>
			<if test="checkStatus != null">
				check_status= #{checkStatus,jdbcType=INTEGER},
			</if>
			<if test="arrivedTime != null">
				arrived_time = #{arrivedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payTime != null">
				pay_time = #{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="resideFlag != null">
				reside_flag = #{resideFlag,jdbcType=INTEGER},
			</if>
			<if test="resideToDate != null">
				reside_to_date = #{resideToDate,jdbcType=DATE},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where platform_order_no = #{platformOrderNo,jdbcType=VARCHAR}
	</update>
	<!-- 获取平台对账数据 -->
	<select id="getPlatformBalanceList" parameterType="com.ink.balance.core.query.PlatformDataQuery"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from platform_data
		<where>
			( 1=1 and check_status = #{checkStatus,jdbcType=INTEGER}
			<if test="platformOrderNo !=null and  platformOrderNo!=''">
				and platform_order_no =
				#{platformOrderNo,jdbcType=VARCHAR}
			</if>
			<if test="channelNo !=null and  channelNo!=''">
				and channel_no = #{channelNo,jdbcType=VARCHAR}
			</if>
			<if test="channelMerchantNo != null and  channelMerchantNo!=''">
				and channel_merchant_no = #{channelMerchantNo,jdbcType=VARCHAR}
			</if>
			<if test="arrivedTime !=null and  arrivedTime!=''">
				and DATE_FORMAT(arrived_time,'%Y-%m-%d') =
				DATE_FORMAT(#{arrivedTime},'%Y-%m-%d')
			</if>
			<if test="payStatus != null and  payStatus!=''">
				and pay_status = #{payStatus,jdbcType=INTEGER}
			</if>
			)
			<if
				test="resideFlag !=null and  resideFlag!='' and channelNo !=null and  channelNo!='' and channelMerchantNo != null and  channelMerchantNo!=''">
				or ( reside_flag = #{resideFlag,jdbcType=INTEGER} and channel_no =
				#{channelNo,jdbcType=VARCHAR} and channel_merchant_no =
				#{channelMerchantNo,jdbcType=VARCHAR})
			</if>
		</where>
	</select>
	<!-- 获取平台对账总笔数和总金额 -->
	<select id="getPlatformSumAmtAndCount" parameterType="com.ink.balance.core.query.ChannelDataQuery"
		resultMap="checkChannelResultMap">
		select
		SUM(arrived_amt) as platform_amount ,COUNT(id) as platform_count
		from platform_data
		<where>
			( 1=1 and check_status = #{checkStatus,jdbcType=INTEGER}
			<if test="channelNo !=null and  channelNo!=''">
				and channel_no = #{channelNo,jdbcType=VARCHAR}
			</if>
			<if test="arrivedTime !=null and  arrivedTime!=''">
				and DATE_FORMAT(arrived_time,'%Y-%m-%d') =
				DATE_FORMAT(#{arrivedTime},'%Y-%m-%d')
			</if>
			<if test="channelMerchantNo != null and  channelMerchantNo!=''">
				and channel_merchant_no = #{channelMerchantNo,jdbcType=VARCHAR}
			</if>
			<if test="payStatus != null and  payStatus!=''">
				and pay_status = #{payStatus,jdbcType=INTEGER}
			</if>
			)
			<if
				test="resideFlag !=null and  resideFlag!='' and channelNo !=null and  channelNo!='' and channelMerchantNo != null and  channelMerchantNo!=''">
				or ( reside_flag = #{resideFlag,jdbcType=INTEGER} and channel_no =
				#{channelNo,jdbcType=VARCHAR} and channel_merchant_no =
				#{channelMerchantNo,jdbcType=VARCHAR})
			</if>
		</where>
	</select>

	<!-- 分页 查询 -->
	<sql id="findWhere">
		<where>
			1=1
			<if test="channelNo !=null and  channelNo!=''">
				and channel_no = #{channelNo,jdbcType=VARCHAR}
			</if>
			<if test="payStatus != null and  payStatus!=''">
				and pay_status = #{payStatus,jdbcType=INTEGER}
			</if>
			<if test="resideFlag != -1">
				AND reside_flag = #{resideFlag}
			</if>
			<if test="checkStatus != -1">
				AND check_status = #{checkStatus}
			</if>
			<if test="null!=tradeBeginTime and ''!=tradeBeginTime">
				AND arrived_time >= #{tradeBeginTime}
			</if>
			<if test="null!=tradeEndTime and ''!=tradeEndTime">
				AND arrived_time &lt; #{tradeEndTime}
			</if>
			<if test="platformOrderNo != null and  platformOrderNo!=''">
				AND platform_order_no like CONCAT('%',
				#{platformOrderNo,jdbcType=VARCHAR}, '%')
			</if>
			<if test="transNo != null and  transNo!=''">
				AND trans_no like CONCAT('%', #{transNo,jdbcType=VARCHAR}, '%')
			</if>
			<if test="channelMerchantNo != null and  channelMerchantNo!=''">
				AND channel_merchant_no like CONCAT('%',
				#{channelMerchantNo,jdbcType=VARCHAR}, '%')
			</if>
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(1) FROM platform_data
		<include refid="findWhere" />
	</select>

	<select id="findPage" resultMap="BaseResultMap">
		SELECT
		<include refid="columns" />
		FROM platform_data
		<include refid="findWhere" />
		ORDER BY update_date
		<if test="null!=offset and null!=limit">
			limit #{offset} , #{limit}
		</if>
	</select>
	<select id="find" resultMap="BaseResultMap">
		SELECT
		<include refid="columns" />
		FROM platform_data
		<include refid="findWhere" />
		ORDER BY update_date
	</select>
	<!--MQ的插入队列saveOrUpdate -->
	<insert id="firstQueuesaveOrUpdate" parameterType="com.ink.balance.core.po.PlatformData">
		insert into
		platform_data (
		amt,platform_order_no,
		pay_time,pay_status,create_date,update_date)
		values
		(#{amt,jdbcType=DECIMAL},
		#{platformOrderNo,jdbcType=VARCHAR},
		#{payTime,jdbcType=TIMESTAMP},
		#{payStatus,jdbcType=INTEGER},#{createDate,jdbcType=TIMESTAMP},
		#{updateDate,jdbcType=TIMESTAMP}
		) ON DUPLICATE KEY update amt =
		#{amt,jdbcType=DECIMAL},pay_time =
		#{payTime,jdbcType=TIMESTAMP},update_date =
		#{updateDate,jdbcType=TIMESTAMP}
	</insert>

	<!--MQ的更新队列saveOrUpdate -->
	<insert id="secondQueuesaveOrUpdate" parameterType="com.ink.balance.core.po.PlatformData">
		insert into platform_data (arrived_amt,
		channel_no,channel_merchant_no,
		platform_order_no, trans_no,
		arrived_time,
		pay_status,pay_method,create_date,update_date
		)
		values (
		#{arrivedAmt,jdbcType=DECIMAL},
		#{channelNo,jdbcType=VARCHAR},
		#{channelMerchantNo,jdbcType=VARCHAR},
		#{platformOrderNo,jdbcType=VARCHAR}, #{transNo,jdbcType=VARCHAR},
		#{arrivedTime,jdbcType=TIMESTAMP},
		#{payStatus,jdbcType=INTEGER},
		#{payMethod,jdbcType=VARCHAR},#{createDate,jdbcType=TIMESTAMP},
		#{updateDate,jdbcType=TIMESTAMP}
		) ON DUPLICATE KEY update arrived_amt
		= #{arrivedAmt,jdbcType=DECIMAL},channel_no =
		#{channelNo,jdbcType=VARCHAR},channel_merchant_no =
		#{channelMerchantNo,jdbcType=VARCHAR},
		trans_no =
		#{transNo,jdbcType=VARCHAR},
		arrived_time =
		#{arrivedTime,jdbcType=TIMESTAMP},
		pay_status =
		#{payStatus,jdbcType=INTEGER},
		pay_method =
		#{payMethod,jdbcType=VARCHAR},update_date =
		#{updateDate,jdbcType=TIMESTAMP}
	</insert>


</mapper>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch	http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName" default-init-method="init">
	<!-- 民生用 -->
	<bean id="channelDataBatchJob" class="com.ink.balance.core.batch.job.ChannelDataBatchJob">
		<property name="jobName" value="channelDataItemJob" />
		<property name="jobLocator" ref="jobRegistry" />
		<property name="jobLauncher" ref="jobLauncher" />
	</bean>
	<!-- Actual Job -->
	<batch:job id="channelDataItemJob" restartable="true">
		<batch:step id="interestItemJobStep">
			<batch:tasklet allow-start-if-complete="false"
				start-limit="1" transaction-manager="transactionManager">
				<batch:chunk reader="interestItemJobReader" writer="interestItemJobWriter"
					processor="interestItemJobProcessor" commit-interval="600"
					skip-limit="10">
					<batch:skippable-exception-classes>
						<batch:include class="java.lang.Exception" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- ItemReader reads a complete line one by one from input file classpath: 
		value="#{jobParameters['resource']}" -->
	<bean id="interestItemJobReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="encoding" value="UTF-8" />
		<property name="lineMapper" ref="interestItemJobLineMapper" />
		<property name="resource" ref="res" />
		<property name="strict" value="false" />
	</bean>

	<bean id="res" class="com.ink.balance.core.batch.job.FileSystemResource">
		<constructor-arg type="java.lang.String" value="${spring_batch_resource}" />
	</bean>
	<!--<bean id="res" class="org.springframework.core.io.UrlResource"> <constructor-arg 
		type="java.lang.String" value="${spring_batch_resource}"/> </bean> -->

	<bean id="interestItemJobLineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer" ref="interestItemLineTokenizer" />
		<property name="fieldSetMapper" ref="interestItemFieldSetMapper" />
	</bean>

	<bean id="interestItemFieldSetMapper"
		class="com.ink.balance.core.batch.mapper.InterestItemJobMapper" />


	<bean id="interestItemLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" />

	<!-- ItemWriter writes a line into output flat file -->
	<bean id="interestItemJobWriter"
		class="com.ink.balance.core.batch.writer.MyBatisTBatchItemWriter"
		scope="step">
		<!-- <property name="statementId" value="com.ink.balance.core.dao.IChannelDataDao.batchInsert"/> -->
		<property name="statementId" value="ChannelData.insertSelective" />
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
		<property name="sqlSessionTemplate" ref="sqlSession" />

	</bean>

	<!-- Optional ItemProcessor to perform business logic/filtering on the input 
		records -->
	<bean id="interestItemJobProcessor"
		class="com.ink.balance.core.batch.processor.ChannelItemJobProcessor" />

	<!-- 宝付用 代收 -->
	<bean id="BooFooDataBatchJob" class="com.ink.balance.core.batch.job.BooFooDataBatchJob">
		<property name="jobLocator" ref="jobRegistry" />
		<property name="jobLauncher" ref="jobLauncher" />
	</bean>
	<!-- 宝付的job -->
	<batch:job id="boofooDataItemJob" restartable="true">
		<batch:step id="interestBooItemJobStep">
			<batch:tasklet allow-start-if-complete="false"
				start-limit="1" transaction-manager="transactionManager">
				<batch:chunk reader="interestBobItemJobReader" writer="interestItemJobWriter"
					processor="booFooItemJobProcessor" commit-interval="600"
					skip-limit="10">
					<batch:skippable-exception-classes>
						<batch:include class="java.lang.Exception" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<bean id="interestBobItemJobReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="encoding" value="UTF-8" />
		<property name="lineMapper" ref="interestBooItemJobLineMapper" />
		<property name="resource" ref="res" />
		<property name="strict" value="false" />
	</bean>
	<bean id="interestBooItemJobLineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer" ref="interestBooItemLineTokenizer" />
		<property name="fieldSetMapper" ref="interestBooItemFieldSetMapper" />
	</bean>
	<bean id="interestBooItemLineTokenizer"
		class="com.ink.balance.core.batch.mapper.DelimitedLineTokenizer">
		<property name="delimiter" value="|" />
	</bean>
	<bean id="interestBooItemFieldSetMapper"
		class="com.ink.balance.core.batch.mapper.InterestBooItemJobMapper" />
	<bean id="booFooItemJobProcessor"
		class="com.ink.balance.core.batch.processor.BooFooItemJobProcessor" />


	<!-- 宝付用 代付 -->
	<!-- 宝付的job -->
	<batch:job id="boofooDzDataItemJob" restartable="true">
		<batch:step id="interestBooDzItemJobStep">
			<batch:tasklet allow-start-if-complete="false"
				start-limit="1" transaction-manager="transactionManager">
				<batch:chunk reader="interestBooDzItemJobReader" writer="interestItemJobWriter"
					processor="booFooItemJobProcessor" commit-interval="600"
					skip-limit="10">
					<batch:skippable-exception-classes>
						<batch:include class="java.lang.Exception" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<bean id="interestBooDzItemJobReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="encoding" value="UTF-8" />
		<property name="lineMapper" ref="interestBooDzItemJobLineMapper" />
		<property name="resource" ref="res" />
		<property name="strict" value="false" />
	</bean>
	<bean id="interestBooDzItemJobLineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer" ref="interestBooItemLineTokenizer" />
		<property name="fieldSetMapper" ref="interestBooDzItemFieldSetMapper" />
	</bean>
	<bean id="interestBooDzItemFieldSetMapper" class="com.ink.balance.core.batch.mapper.BooDzItemJobMapper" />
</beans>			
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AccMchProof" >
  <resultMap id="BaseResultMap" type="com.ink.user.core.po.AccMchProof" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="mch_id" property="mchId" jdbcType="BIGINT" />
    <result column="sac_type" property="sacType" jdbcType="VARCHAR" />
    <result column="amt" property="amt" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="txn_code" property="txnCode" jdbcType="VARCHAR" />
    <result column="sac_id" property="sacId" jdbcType="BIGINT" />
    <result column="pac_id" property="pacId" jdbcType="BIGINT" />
    <result column="dir" property="dir" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mch_id, sac_type, amt, create_time, last_update_time, txn_code, sac_id, pac_id, 
    dir
  </sql>
  
  <!-- 基础方法Start -->
 <insert id="insert"  useGeneratedKeys="true" keyProperty="id"  >
    <![CDATA[
        INSERT INTO acc_mch_proof (
	        id  ,
	        mch_id  ,
	        sac_type  ,
	        amt  ,
	        create_time  ,
	        last_update_time  ,
	        txn_code  ,
	        sac_id  ,
	        pac_id  ,
	        dir  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{mchId, jdbcType=BIGINT} ,
        	#{sacType, jdbcType=VARCHAR} ,
        	#{amt, jdbcType=DECIMAL} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{lastUpdateTime, jdbcType=TIMESTAMP} ,
        	#{txnCode, jdbcType=VARCHAR} ,
        	#{sacId, jdbcType=BIGINT} ,
        	#{pacId, jdbcType=BIGINT} ,
        	#{dir, jdbcType=VARCHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO acc_mch_proof ( <include refid="Base_Column_List"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.mchId, jdbcType=BIGINT} ,
        	#{item.sacType, jdbcType=VARCHAR} ,
        	#{item.amt, jdbcType=DECIMAL} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.lastUpdateTime, jdbcType=TIMESTAMP} ,
        	#{item.txnCode, jdbcType=VARCHAR} ,
        	#{item.sacId, jdbcType=BIGINT} ,
        	#{item.pacId, jdbcType=BIGINT} ,
        	#{item.dir, jdbcType=VARCHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE acc_mch_proof SET
	        mch_id = #{mchId, jdbcType=BIGINT} ,
	        sac_type = #{sacType, jdbcType=VARCHAR} ,
	        amt = #{amt, jdbcType=DECIMAL} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        last_update_time = #{lastUpdateTime, jdbcType=TIMESTAMP} ,
	        txn_code = #{txnCode, jdbcType=VARCHAR} ,
	        sac_id = #{sacId, jdbcType=BIGINT} ,
	        pac_id = #{pacId, jdbcType=BIGINT} ,
	        dir = #{dir, jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM acc_mch_proof WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="BaseResultMap">
	    SELECT <include refid="Base_Column_List"/>
	    <![CDATA[
	        FROM acc_mch_proof 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=sacType and ''!=sacType ">
	   			 		AND sac_type = #{sacType}
	   			   	</if>
			       	<if test="null!=txnCode and ''!=txnCode ">
	   			 		AND txn_code = #{txnCode}
	   			   	</if>
			       	<if test="null!=dir and ''!=dir ">
	   			 		AND dir = #{dir}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=sacType and ''!=sacType">
				    <!-- 	AND sac_type LIKE '%'||#{sacType}||'%' oracle -->
			   			AND sac_type LIKE concat('%',#{sacType},'%')
			   			
			   		</if>
				    <if test="null!=txnCode and ''!=txnCode">
				    <!-- 	AND txn_code LIKE '%'||#{txnCode}||'%' oracle -->
			   			AND txn_code LIKE concat('%',#{txnCode},'%')
			   			
			   		</if>
				    <if test="null!=dir and ''!=dir">
				    <!-- 	AND dir LIKE '%'||#{dir}||'%' oracle -->
			   			AND dir LIKE concat('%',#{dir},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=mchId and ''!=mchId">
			    AND mch_id = #{mchId}
			</if>
		   	<if test="null!=amt and ''!=amt">
			    AND amt = #{amt}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND create_time &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=lastUpdateTimeBegin and ''!=lastUpdateTimeBegin">
		   		AND last_update_time >= #{lastUpdateTimeBegin}
		   	</if>
		   	<if test="null!=lastUpdateTimeEnd and ''!=lastUpdateTimeEnd">
		   		AND last_update_time &lt; #{lastUpdateTimeEnd}
		   	</if>
		   	<if test="null!=sacId and ''!=sacId">
			    AND sac_id = #{sacId}
			</if>
		   	<if test="null!=pacId and ''!=pacId">
			    AND pac_id = #{pacId}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM acc_mch_proof <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="BaseResultMap">
    	SELECT <include refid="Base_Column_List"/> FROM acc_mch_proof 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	<select id="find" resultMap="BaseResultMap">
	    SELECT <include refid="Base_Column_List"/> FROM acc_mch_proof 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
    <!-- 基础方法End -->
    
  <insert id="insertSelective" parameterType="com.ink.user.core.po.AccMchProof" >
    insert into acc_mch_proof
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mchId != null" >
        mch_id,
      </if>
      <if test="sacType != null" >
        sac_type,
      </if>
      <if test="amt != null" >
        amt,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="txnCode != null" >
        txn_code,
      </if>
      <if test="sacId != null" >
        sac_id,
      </if>
      <if test="pacId != null" >
        pac_id,
      </if>
      <if test="dir != null" >
        dir,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mchId != null" >
        #{mchId,jdbcType=BIGINT},
      </if>
      <if test="sacType != null" >
        #{sacType,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        #{amt,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="txnCode != null" >
        #{txnCode,jdbcType=VARCHAR},
      </if>
      <if test="sacId != null" >
        #{sacId,jdbcType=BIGINT},
      </if>
      <if test="pacId != null" >
        #{pacId,jdbcType=BIGINT},
      </if>
      <if test="dir != null" >
        #{dir,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ink.user.core.po.AccMchProof" >
    update acc_mch_proof
    <set >
      <if test="mchId != null" >
        mch_id = #{mchId,jdbcType=BIGINT},
      </if>
      <if test="sacType != null" >
        sac_type = #{sacType,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        amt = #{amt,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="txnCode != null" >
        txn_code = #{txnCode,jdbcType=VARCHAR},
      </if>
      <if test="sacId != null" >
        sac_id = #{sacId,jdbcType=BIGINT},
      </if>
      <if test="pacId != null" >
        pac_id = #{pacId,jdbcType=BIGINT},
      </if>
      <if test="dir != null" >
        dir = #{dir,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findAccMchProofs" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from acc_mch_proof
    where 1=1
    <if test="mchId != null">
		and mch_id = #{mchId,jdbcType=BIGINT}
	</if>
	<if test="sacType != null">
		and sac_type = #{sacType,jdbcType=VARCHAR}
	</if>
	<if test="amt != null">
		and amt = #{amt,jdbcType=DECIMAL}
	</if>
	<if test="createTime != null">
		and create_time = #{createTime,jdbcType=TIMESTAMP}
	</if>
	<if test="lastUpdateTime != null">
		and last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
	</if>
	<if test="txnCode != null">
		and txn_code = #{txnCode,jdbcType=VARCHAR}
	</if>
	<if test="sacId != null">
		and sac_id = #{sacId,jdbcType=BIGINT}
	</if>
	<if test="pacId != null">
		and pac_id = #{pacId,jdbcType=BIGINT}
	</if>
	<if test="dir != null">
		and dir = #{dir,jdbcType=VARCHAR}
	</if>
  </select>
  
  <select id="getAmtByMechIdAndSacType" resultType="DECIMAL">
	select (select sum(amt) from acc_mch_proof where mch_id =
	#{mchId,jdbcType=BIGINT} and sac_type = #{sacType,jdbcType=VARCHAR} and
	dir = 'D')
	- (select sum(amt) from acc_mch_proof where mch_id =
	#{mchId,jdbcType=BIGINT} and sac_type = #{sacType,jdbcType=VARCHAR} and
	dir = 'C')
  </select>
  
  <select id="getAmtByMechIdAndSacTypeAndTime" resultType="DECIMAL">
	select (select IFNULL(sum(amt),0) from acc_mch_proof where mch_id =
	#{mchId,jdbcType=BIGINT} and sac_type = #{sacType,jdbcType=VARCHAR} and
	dir = 'C' and unix_timestamp(#{startDate,jdbcType=TIMESTAMP}) <![CDATA[ < ]]> unix_timestamp(last_update_time)
	and unix_timestamp(#{endDate,jdbcType=TIMESTAMP}) > unix_timestamp(last_update_time))
	- (select IFNULL(sum(amt),0) from acc_mch_proof where mch_id =
	#{mchId,jdbcType=BIGINT} and sac_type = #{sacType,jdbcType=VARCHAR} and
	dir = 'D' and unix_timestamp(#{startDate,jdbcType=TIMESTAMP}) <![CDATA[ < ]]> unix_timestamp(last_update_time)
	and unix_timestamp(#{endDate,jdbcType=TIMESTAMP}) > unix_timestamp(last_update_time))
  </select>
</mapper>
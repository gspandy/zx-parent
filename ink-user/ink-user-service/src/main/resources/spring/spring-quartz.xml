<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	 <!-- 更新控制表 start 
	<bean id="accControlJob" class="com.ink.user.service.timing.AccControlJob" />
	 JobDetail的配置
	<bean id="accControlJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="accControlJob" />
		<property name="targetMethod" value="work" />
		<property name="concurrent" value="false" />
		 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程
	</bean>
	 Trigger的配置
	<bean id="accControlJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="accControlJobDetail" />
		<property name="cronExpression" value="0 0 0 * * ?" />
		 每隔30秒钟触发一次 
	</bean>
	 end -->
	<!--
	渠道金额的变动 start
	<bean id="accIacUpdateJob" class="com.ink.pats.atp.service.timing.AccIacUpdateJob" />
	JobDetail的配置
	<bean id="accIacUpdateJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="accIacUpdateJob" />
		<property name="targetMethod" value="work" />
		<property name="concurrent" value="false" />
		是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程
	</bean>
	Trigger的配置
	<bean id="accIacUpdateJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="accIacUpdateJobDetail" />
		<property name="cronExpression" value="0 0/5 * * * ?" />
			每隔30秒钟触发一次
	</bean>
	end
	
	商户金额的变动 start
	<bean id="accAccUpdateJob" class="com.ink.pats.atp.service.timing.AccAccUpdateJob" />
	JobDetail的配置
	<bean id="accAccUpdateJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="accAccUpdateJob" />
		<property name="targetMethod" value="work" />
		<property name="concurrent" value="false" />
		是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程
	</bean>
	Trigger的配置
	<bean id="accAccUpdateJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="accAccUpdateJobDetail" />
		<property name="cronExpression" value="0 0/5 * * * ?" />
			每隔30秒钟触发一次
	</bean>
	end
 -->
	<!--<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				 更新控制表
				<ref bean="accControlJobTrigger" />
				 渠道金额变动
				<ref bean="accIacUpdateJobTrigger"/>
				商户金额变动
				<ref bean="accAccUpdateJobTrigger"/> 
			</list>
		</property>
	</bean>
	-->

</beans>
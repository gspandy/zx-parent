<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.yinker.com/schema/ykrabbit" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:beans="http://www.springframework.org/schema/beans" targetNamespace="http://www.yinker.com/schema/ykrabbit"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans" />
	<xsd:import namespace="http://www.springframework.org/schema/tool" />

	<xsd:element name="listener-container">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
	Each listener child element will be hosted by a container whose configuration
	is determined by this parent element. This variant builds RabbitMQ
	listener containers, operating against a specified ConnectionFactory.
			]]></xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports type="com.ink.base.log.rabbit.listener.YinkerMessageListeberContainer" />
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="listener" type="listenerType" minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Optional bean id for the container.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="connection-factory" type="xsd:string" default="rabbitConnectionFactory">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	A reference to the org.springframework.amqp.rabbit.connection.ConnectionFactory.
	Default referenced bean name is "rabbitConnectionFactory".
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.amqp.rabbit.connection.ConnectionFactory" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="task-executor" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	A reference to a Spring TaskExecutor (or standard JDK 1.5 Executor) for executing
	listener invokers. Default is a SimpleAsyncTaskExecutor, using internally managed threads.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="java.util.concurrent.Executor" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="message-converter" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	A reference to the MessageConverter strategy for converting AMQP Messages to
	listener method arguments for any referenced 'listener' that is a POJO.
	Default is a SimpleMessageConverter.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.amqp.support.converter.MessageConverter" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="error-handler" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	A reference to an ErrorHandler strategy for handling any uncaught Exceptions
	that may occur during the execution of the MessageListener.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.util.ErrorHandler" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="acknowledge" default="auto">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	The acknowledge mode: "auto", "manual", or "none".
					]]></xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:NMTOKEN">
						<xsd:enumeration value="auto" />
						<xsd:enumeration value="manual" />
						<xsd:enumeration value="none" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="transaction-manager" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	A reference to an external PlatformTransactionManager.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.transaction.PlatformTransactionManager" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="concurrency" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	The number of concurrent consumers to start for each listener.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="prefetch" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Tells the broker how many messages to send to each consumer in a single request. Often this can be set quite high
	to improve throughput. It should be greater than or equal to the transaction size.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="transaction-size" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Tells the container how many messages to process in a single transaction (if the channel is transactional). For
	best results it should be less than or equal to the prefetch count.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="phase" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	The lifecycle phase within which this container should start and stop. The lower
	the value the earlier this container will start and the later it will stop. The
	default is Integer.MAX_VALUE meaning the container will start as late as possible
	and stop as soon as possible.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="auto-startup" type="xsd:string" default="true">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Flag to indicate that the container should start up automatically when the enclosing context is refreshed.  Default true.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="advice-chain" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Reference to a chain of AOP advice to be applied to the listener.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="listenerType">
		<xsd:attribute name="id" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
	The unique identifier for this listener.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="queue-names" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
	The queue names for this listener as a comma-separated list. Either this or queues is required.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="queues" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
	The queues (bean references) for this listener as a comma-separated list. Either this or queue-names is required.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ref" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
	The bean name of the listener object, implementing
	the MessageListener/ChannelAwareMessageListener interface
	or defining the specified listener method. Required.
				]]></xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref" />
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="method" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
	The name of the listener method to invoke. If not specified,
	the target bean is supposed to implement the MessageListener
	or ChannelAwareMessageListener interface.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="response-exchange" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
	The name of the default response Exchange to send response messages to.
	This will be applied in case of a request message that does not carry
	a "replyTo" property. Note: This only applies to a listener method with
	a return value, for which each result object will be converted into a
	response message.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="response-routing-key" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
	The routing key to send along with a response message.
	This will be applied in case of a request message that does not carry
	a "replyTo" property. Note: This only applies to a listener method with
	a return value, for which each result object will be converted into a
	response message.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:element name="template">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
	Creates a rabbit template (org.springframework.amqp.rabbit.core.RabbitTemplate) 
	for convenient access to the broker.
					]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Unique name for this rabbit template used as a bean definition identifier.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="routing-key" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Default routing key for sending messages.  Default is empty.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="exchange" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Default exchange for sending messages.  Default is empty (the default exchange).
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="queue" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Default queue for receiving messages. Default is empty (non-existent queue).
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="reply-timeout" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Timeout for send and receive in milliseconds.  Default is 5000 (5 seconds).
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="channel-transacted" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Flag to indicate that the channel should be used transactionally.  Default is false.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="encoding" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Encoding to use for packing and unpacking MessagePoperties of type String.  Default is UTF-8.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="message-converter" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	MessageConverter to convert between raw bytes and Java objects in the *convert* methods.  Defaults to a simple implementation that handles Strings, byte arrays and Serializable.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.amqp.support.converter.MessageConverter" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="connection-factory" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Reference to rabbit connection factory.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.amqp.rabbit.connection.ConnectionFactory" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

</xsd:schema>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMessageLog">

    <resultMap id="UserMessageLog" type="com.ink.user.ext.core.po.UserMessageLog">
        <result property="id" column="id"/>
        <result property="fileId" column="file_id"/>
        <result property="userId" column="user_id"/>
        <result property="mchId" column="mch_id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="status" column="status"/>
        <result property="eventInfo" column="event_info"/>
        <result property="msgChannel" column="msg_channel"/>
        <result property="msgTemplate" column="msg_template"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,file_id ,user_id ,mch_id ,name ,phone ,status ,event_info ,msg_channel ,msg_template ,create_time ,update_time ,del_flag 
	    ]]>
	</sql>
	
    <insert id="insert"  useGeneratedKeys="true" keyProperty="id"  >
    <![CDATA[
        INSERT INTO user_message_log (
	        id  ,
	        file_id  ,
	        user_id  ,
	        mch_id  ,
	        name  ,
	        phone  ,
	        status  ,
	        event_info  ,
	        msg_channel  ,
	        msg_template  ,
	        create_time  ,
	        update_time  ,
	        del_flag  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{fileId, jdbcType=BIGINT} ,
        	#{userId, jdbcType=BIGINT} ,
        	#{mchId, jdbcType=BIGINT} ,
        	#{name, jdbcType=VARCHAR} ,
        	#{phone, jdbcType=VARCHAR} ,
        	#{status, jdbcType=BIT} ,
        	#{eventInfo, jdbcType=VARCHAR} ,
        	#{msgChannel, jdbcType=VARCHAR} ,
        	#{msgTemplate, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{updateTime, jdbcType=TIMESTAMP} ,
        	#{delFlag, jdbcType=BIT} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO user_message_log ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.fileId, jdbcType=BIGINT} ,
        	#{item.userId, jdbcType=BIGINT} ,
        	#{item.mchId, jdbcType=BIGINT} ,
        	#{item.name, jdbcType=VARCHAR} ,
        	#{item.phone, jdbcType=VARCHAR} ,
        	#{item.status, jdbcType=BIT} ,
        	#{item.eventInfo, jdbcType=VARCHAR} ,
        	#{item.msgChannel, jdbcType=VARCHAR} ,
        	#{item.msgTemplate, jdbcType=VARCHAR} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.updateTime, jdbcType=TIMESTAMP} ,
        	#{item.delFlag, jdbcType=BIT} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE user_message_log SET
	        file_id = #{fileId, jdbcType=BIGINT} ,
	        user_id = #{userId, jdbcType=BIGINT} ,
	        mch_id = #{mchId, jdbcType=BIGINT} ,
	        name = #{name, jdbcType=VARCHAR} ,
	        phone = #{phone, jdbcType=VARCHAR} ,
	        status = #{status, jdbcType=BIT} ,
	        event_info = #{eventInfo, jdbcType=VARCHAR} ,
	        msg_channel = #{msgChannel, jdbcType=VARCHAR} ,
	        msg_template = #{msgTemplate, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        update_time = #{updateTime, jdbcType=TIMESTAMP} ,
	        del_flag = #{delFlag, jdbcType=BIT} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM user_message_log WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="UserMessageLog">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM user_message_log 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
	    			<if test="null!=fileId and ''!=fileId">
					    AND file_id = #{fileId}
					</if>
					<if test="null!=userId and ''!=userId">
					    AND user_id = #{userId}
					</if>
					<if test="null!=mchId and ''!=mchId">
					    AND mch_id = #{mchId}
					</if>
			       	<if test="null!=name and ''!=name ">
	   			 		AND name = #{name}
	   			   	</if>
			       	<if test="null!=phone and ''!=phone ">
	   			 		AND phone = #{phone}
	   			   	</if>
			       	<if test="null!=eventInfo and ''!=eventInfo ">
	   			 		AND event_info = #{eventInfo}
	   			   	</if>
			       	<if test="null!=msgChannel and ''!=msgChannel ">
	   			 		AND msg_channel = #{msgChannel}
	   			   	</if>
			       	<if test="null!=msgTemplate and ''!=msgTemplate ">
	   			 		AND msg_template = #{msgTemplate}
	   			   	</if>
	       		</when>
	       		<otherwise>
	       			<if test="null!=fileId and ''!=fileId">
					    AND file_id LIKE concat('%',#{fileId},'%')
					</if>
					<if test="null!=userId and ''!=userId">
					    AND user_id LIKE concat('%',#{userId},'%')
					</if>
					<if test="null!=mchId and ''!=mchId">
					    AND mch_id LIKE concat('%',#{mchId},'%')
					</if>
				    <if test="null!=name and ''!=name">
				    <!-- 	AND name LIKE '%'||#{name}||'%' oracle -->
			   			AND name LIKE concat('%',#{name},'%')
			   			
			   		</if>
				    <if test="null!=phone and ''!=phone">
				    <!-- 	AND phone LIKE '%'||#{phone}||'%' oracle -->
			   			AND phone LIKE concat('%',#{phone},'%')
			   			
			   		</if>
				    <if test="null!=eventInfo and ''!=eventInfo">
				    <!-- 	AND event_info LIKE '%'||#{eventInfo}||'%' oracle -->
			   			AND event_info LIKE concat('%',#{eventInfo},'%')
			   			
			   		</if>
				    <if test="null!=msgChannel and ''!=msgChannel">
				    <!-- 	AND msg_channel LIKE '%'||#{msgChannel}||'%' oracle -->
			   			AND msg_channel LIKE concat('%',#{msgChannel},'%')
			   			
			   		</if>
				    <if test="null!=msgTemplate and ''!=msgTemplate">
				    <!-- 	AND msg_template LIKE '%'||#{msgTemplate}||'%' oracle -->
			   			AND msg_template LIKE concat('%',#{msgTemplate},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=status" >
			    AND status = #{status}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND create_time &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=updateTimeBegin and ''!=updateTimeBegin">
		   		AND update_time >= #{updateTimeBegin}
		   	</if>
		   	<if test="null!=updateTimeEnd and ''!=updateTimeEnd">
		   		AND update_time &lt; #{updateTimeEnd}
		   	</if>
		   	<if test="null!=delFlag and ''!=delFlag">
			    AND del_flag = #{delFlag}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM user_message_log <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="UserMessageLog">
    	SELECT <include refid="columns"/> FROM user_message_log 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="UserMessageLog">
	    SELECT <include refid="columns"/> FROM user_message_log 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <update id="updateStatusByFileIdAndPhone" >
    <![CDATA[
        UPDATE user_message_log SET
	        status = #{status, jdbcType=BIT}
        WHERE 
	        file_id = #{fileId} AND  phone = #{phone} 
    ]]>
    </update>
	
</mapper>
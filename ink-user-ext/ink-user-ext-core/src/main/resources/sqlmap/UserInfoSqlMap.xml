<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserInfo">

    <resultMap id="UserInfo" type="com.ink.user.ext.core.po.UserInfo">
        <result property="id" column="id"/>
        <result property="custId" column="cust_id"/>
        <result property="mchId" column="mch_id"/>
        <result property="name" column="name"/>
        <result property="nickName" column="nick_name"/>
        <result property="phone" column="phone"/>
        <result property="idType" column="id_type"/>
        <result property="idNo" column="id_no"/>
        <result property="address" column="address"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="zipcode" column="zipcode"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,cust_id ,mch_id ,name ,nick_name ,phone ,id_type ,id_no ,address ,sex ,email ,zipcode ,status ,create_time ,update_time ,del_flag 
	    ]]>
	</sql>
	
    <insert id="insert"  useGeneratedKeys="true" keyProperty="id"  >
    <![CDATA[
        INSERT INTO user_info (
	        id  ,
	        cust_id  ,
	        mch_id  ,
	        name  ,
	        nick_name  ,
	        phone  ,
	        id_type  ,
	        id_no  ,
	        address  ,
	        sex  ,
	        email  ,
	        zipcode  ,
	        status  ,
	        create_time  ,
	        update_time  ,
	        del_flag  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{custId, jdbcType=BIGINT} ,
        	#{mchId, jdbcType=BIGINT} ,
        	#{name, jdbcType=VARCHAR} ,
        	#{nickName, jdbcType=VARCHAR} ,
        	#{phone, jdbcType=VARCHAR} ,
        	#{idType, jdbcType=CHAR} ,
        	#{idNo, jdbcType=VARCHAR} ,
        	#{address, jdbcType=VARCHAR} ,
        	#{sex, jdbcType=CHAR} ,
        	#{email, jdbcType=VARCHAR} ,
        	#{zipcode, jdbcType=VARCHAR} ,
        	#{status, jdbcType=BIT} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{updateTime, jdbcType=TIMESTAMP} ,
        	#{delFlag, jdbcType=BIT} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO user_info ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.custId, jdbcType=BIGINT} ,
        	#{item.mchId, jdbcType=BIGINT} ,
        	#{item.name, jdbcType=VARCHAR} ,
        	#{item.nickName, jdbcType=VARCHAR} ,
        	#{item.phone, jdbcType=VARCHAR} ,
        	#{item.idType, jdbcType=CHAR} ,
        	#{item.idNo, jdbcType=VARCHAR} ,
        	#{item.address, jdbcType=VARCHAR} ,
        	#{item.sex, jdbcType=CHAR} ,
        	#{item.email, jdbcType=VARCHAR} ,
        	#{item.zipcode, jdbcType=VARCHAR} ,
        	#{item.status, jdbcType=BIT} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.updateTime, jdbcType=TIMESTAMP} ,
        	#{item.delFlag, jdbcType=BIT} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE user_info SET
	        cust_id = #{custId, jdbcType=BIGINT} ,
	        mch_id = #{mchId, jdbcType=BIGINT} ,
	        name = #{name, jdbcType=VARCHAR} ,
	        nick_name = #{nickName, jdbcType=VARCHAR} ,
	        phone = #{phone, jdbcType=VARCHAR} ,
	        id_type = #{idType, jdbcType=CHAR} ,
	        id_no = #{idNo, jdbcType=VARCHAR} ,
	        address = #{address, jdbcType=VARCHAR} ,
	        sex = #{sex, jdbcType=CHAR} ,
	        email = #{email, jdbcType=VARCHAR} ,
	        zipcode = #{zipcode, jdbcType=VARCHAR} ,
	        status = #{status, jdbcType=BIT} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        update_time = #{updateTime, jdbcType=TIMESTAMP} ,
	        del_flag = #{delFlag, jdbcType=BIT} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM user_info WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="UserInfo">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM user_info 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=name and ''!=name ">
	   			 		AND name = #{name}
	   			   	</if>
			       	<if test="null!=nickName and ''!=nickName ">
	   			 		AND nick_name = #{nickName}
	   			   	</if>
			       	<if test="null!=phone and ''!=phone ">
	   			 		AND phone = #{phone}
	   			   	</if>
			       	<if test="null!=idType and ''!=idType ">
	   			 		AND id_type = #{idType}
	   			   	</if>
			       	<if test="null!=idNo and ''!=idNo ">
	   			 		AND id_no = #{idNo}
	   			   	</if>
			       	<if test="null!=address and ''!=address ">
	   			 		AND address = #{address}
	   			   	</if>
			       	<if test="null!=sex and ''!=sex ">
	   			 		AND sex = #{sex}
	   			   	</if>
			       	<if test="null!=email and ''!=email ">
	   			 		AND email = #{email}
	   			   	</if>
			       	<if test="null!=zipcode and ''!=zipcode ">
	   			 		AND zipcode = #{zipcode}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=name and ''!=name">
				    <!-- 	AND name LIKE '%'||#{name}||'%' oracle -->
			   			AND name LIKE concat('%',#{name},'%')
			   			
			   		</if>
				    <if test="null!=nickName and ''!=nickName">
				    <!-- 	AND nick_name LIKE '%'||#{nickName}||'%' oracle -->
			   			AND nick_name LIKE concat('%',#{nickName},'%')
			   			
			   		</if>
				    <if test="null!=phone and ''!=phone">
				    <!-- 	AND phone LIKE '%'||#{phone}||'%' oracle -->
			   			AND phone LIKE concat('%',#{phone},'%')
			   			
			   		</if>
				    <if test="null!=idType and ''!=idType">
				    <!-- 	AND id_type LIKE '%'||#{idType}||'%' oracle -->
			   			AND id_type LIKE concat('%',#{idType},'%')
			   			
			   		</if>
				    <if test="null!=idNo and ''!=idNo">
				    <!-- 	AND id_no LIKE '%'||#{idNo}||'%' oracle -->
			   			AND id_no LIKE concat('%',#{idNo},'%')
			   			
			   		</if>
				    <if test="null!=address and ''!=address">
				    <!-- 	AND address LIKE '%'||#{address}||'%' oracle -->
			   			AND address LIKE concat('%',#{address},'%')
			   			
			   		</if>
				    <if test="null!=sex and ''!=sex">
				    <!-- 	AND sex LIKE '%'||#{sex}||'%' oracle -->
			   			AND sex LIKE concat('%',#{sex},'%')
			   			
			   		</if>
				    <if test="null!=email and ''!=email">
				    <!-- 	AND email LIKE '%'||#{email}||'%' oracle -->
			   			AND email LIKE concat('%',#{email},'%')
			   			
			   		</if>
				    <if test="null!=zipcode and ''!=zipcode">
				    <!-- 	AND zipcode LIKE '%'||#{zipcode}||'%' oracle -->
			   			AND zipcode LIKE concat('%',#{zipcode},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=custId and ''!=custId">
			    AND cust_id = #{custId}
			</if>
		   	<if test="null!=mchId and ''!=mchId">
			    AND mch_id = #{mchId}
			</if>
		   	<if test="null!=status and ''!=status">
			    AND status = #{status}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND create_time &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=updateTimeBegin and ''!=updateTimeBegin">
		   		AND update_time >= #{updateTimeBegin}
		   	</if>
		   	<if test="null!=updateTimeEnd and ''!=updateTimeEnd">
		   		AND update_time &lt; #{updateTimeEnd}
		   	</if>
		   	<if test="null!=delFlag and ''!=delFlag">
			    AND del_flag = #{delFlag}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM user_info <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="UserInfo">
    	SELECT <include refid="columns"/> FROM user_info 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="UserInfo">
	    SELECT <include refid="columns"/> FROM user_info 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="getUserInfoByCustIdMchId" resultMap="UserInfo">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM user_info 
	        WHERE 	
		        cust_id = #{custId} AND mch_id = #{mchId} 
	    ]]>
    </select>
</mapper>
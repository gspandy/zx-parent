<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MonitorServiceRecord">

	<resultMap id="MonitorServiceRecord" type="com.ink.monitor.core.po.MonitorServiceRecord">
		<result property="id" column="id"/>
		<result property="serviceId" column="serviceId"/>
		<result property="sysCode" column="sysCode"/>
		<result property="sourceUrl" column="sourceUrl"/>
		<result property="visitStatus" column="visitStatus"/>
		<result property="errorDesc" column="errorDesc"/>
		<result property="firstErrorTime" column="firstErrorTime"/>
		<result property="errorCount" column="errorCount"/>
		<result property="status" column="status"/>
		<result property="safeTime" column="safeTime"/>
		<result property="operateTime" column="operateTime"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
        id ,serviceId ,sysCode ,sourceUrl ,visitStatus ,errorDesc ,firstErrorTime ,errorCount ,status ,safeTime ,operateTime 
	    ]]>
	</sql>

	<insert id="insert" >
		<![CDATA[
        INSERT INTO monitor_service_record (
	        id  ,
	        serviceId  ,
	        sysCode  ,
	        sourceUrl  ,
	        visitStatus  ,
	        errorDesc  ,
	        firstErrorTime  ,
	        errorCount  ,
	        status  ,
	        safeTime  ,
	        operateTime  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{serviceId, jdbcType=INTEGER} ,
        	#{sysCode, jdbcType=VARCHAR} ,
        	#{sourceUrl, jdbcType=VARCHAR} ,
        	#{visitStatus, jdbcType=VARCHAR} ,
        	#{errorDesc, jdbcType=VARCHAR} ,
        	now() ,
        	#{errorCount, jdbcType=INTEGER} ,
        	#{status, jdbcType=CHAR} ,
        	#{safeTime, jdbcType=TIMESTAMP} ,
        	now()
        )
    ]]>
	</insert>
	<insert id="insertBatch"   parameterType="java.util.List">
		INSERT INTO monitor_service_record ( <include refid="columns"/>) values
		<foreach collection="list" item="item" separator="," >
			(
			#{item.id, jdbcType=INTEGER} ,
			#{item.serviceId, jdbcType=INTEGER} ,
			#{item.sysCode, jdbcType=VARCHAR} ,
			#{item.sourceUrl, jdbcType=VARCHAR} ,
			#{item.visitStatus, jdbcType=VARCHAR} ,
			#{item.errorDesc, jdbcType=VARCHAR} ,
			now() ,
			#{item.errorCount, jdbcType=INTEGER} ,
			#{item.status, jdbcType=CHAR} ,
			#{item.safeTime, jdbcType=TIMESTAMP} ,
			now()
			)
		</foreach>
	</insert>

	<update id="update" >

        UPDATE monitor_service_record
        	<set>
				<if test="serviceId != 0">
					serviceId = #{serviceId, jdbcType=INTEGER} ,
				</if>
				<if test="sysCode != null">
					sysCode = #{sysCode, jdbcType=VARCHAR} ,
				</if>
				<if test="sourceUrl != null">
					sourceUrl = #{sourceUrl, jdbcType=VARCHAR} ,
				</if>
				<if test="visitStatus != null">
					visitStatus = #{visitStatus, jdbcType=VARCHAR} ,
				</if>
				<if test="errorDesc != null">
					errorDesc = #{errorDesc, jdbcType=VARCHAR} ,
				</if>
				<if test="firstErrorTime != null">
					firstErrorTime = #{firstErrorTime, jdbcType=TIMESTAMP} ,
				</if>
				<if test="errorCount != 0">
					errorCount = #{errorCount, jdbcType=INTEGER} ,
				</if>
				<if test="status != null">
					status = #{status, jdbcType=CHAR} ,
				</if>
				<if test="safeTime != null">
					safeTime = #{safeTime, jdbcType=TIMESTAMP} ,
				</if>
					operateTime = now()
			</set>
        WHERE
	        id = #{id} 
	</update>

	<delete id="delete">
		<![CDATA[
        DELETE FROM monitor_service_record WHERE
        id = #{id} 
    ]]>
	</delete>

	<select id="getById" resultMap="MonitorServiceRecord">
		SELECT <include refid="columns"/>
		<![CDATA[
	        FROM monitor_service_record 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

	<sql id="findWhere">
		<where>
			<choose>
				<when test="queryType==0">
					<if test="null!=sysCode and ''!=sysCode ">
						AND sysCode = #{sysCode}
					</if>
					<if test="null!=sourceUrl and ''!=sourceUrl ">
						AND sourceUrl = #{sourceUrl}
					</if>
					<if test="null!=visitStatus and ''!=visitStatus ">
						AND visitStatus = #{visitStatus}
					</if>
					<if test="null!=errorDesc and ''!=errorDesc ">
						AND errorDesc = #{errorDesc}
					</if>
					<if test="null!=status and ''!=status ">
						AND status = #{status}
					</if>
				</when>
				<otherwise>
					<if test="null!=sysCode and ''!=sysCode">
						<!-- 	AND sysCode LIKE '%'||#{sysCode}||'%' oracle -->
						AND sysCode LIKE concat('%',#{sysCode},'%')

					</if>
					<if test="null!=sourceUrl and ''!=sourceUrl">
						<!-- 	AND sourceUrl LIKE '%'||#{sourceUrl}||'%' oracle -->
						AND sourceUrl LIKE concat('%',#{sourceUrl},'%')

					</if>
					<if test="null!=visitStatus and ''!=visitStatus">
						<!-- 	AND visitStatus LIKE '%'||#{visitStatus}||'%' oracle -->
						AND visitStatus LIKE concat('%',#{visitStatus},'%')

					</if>
					<if test="null!=errorDesc and ''!=errorDesc">
						<!-- 	AND errorDesc LIKE '%'||#{errorDesc}||'%' oracle -->
						AND errorDesc LIKE concat('%',#{errorDesc},'%')

					</if>
					<if test="null!=status and ''!=status">
						<!-- 	AND status LIKE '%'||#{status}||'%' oracle -->
						AND status LIKE concat('%',#{status},'%')

					</if>
				</otherwise>
			</choose>
			<if test="null!=id and ''!=id">
				AND id = #{id}
			</if>
			<if test="null!=serviceId and ''!=serviceId">
				AND serviceId = #{serviceId}
			</if>
			<if test="null!=firstErrorTimeBegin and ''!=firstErrorTimeBegin">
				AND firstErrorTime >= #{firstErrorTimeBegin}
			</if>
			<if test="null!=firstErrorTimeEnd and ''!=firstErrorTimeEnd">
				AND firstErrorTime &lt; #{firstErrorTimeEnd}
			</if>
			<if test="null!=errorCount and ''!=errorCount">
				AND errorCount = #{errorCount}
			</if>
			<if test="null!=safeTimeBegin and ''!=safeTimeBegin">
				AND safeTime >= #{safeTimeBegin}
			</if>
			<if test="null!=safeTimeEnd and ''!=safeTimeEnd">
				AND safeTime &lt; #{safeTimeEnd}
			</if>
			<if test="null!=operateTimeBegin and ''!=operateTimeBegin">
				AND operateTime >= #{operateTimeBegin}
			</if>
			<if test="null!=operateTimeEnd and ''!=operateTimeEnd">
				AND operateTime &lt; #{operateTimeEnd}
			</if>
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(*) FROM monitor_service_record <include refid="findWhere"/>
	</select>

	<!--
        分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
        因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
	<select id="findPage" resultMap="MonitorServiceRecord">
		SELECT <include refid="columns"/> FROM monitor_service_record
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>


	<select id="find" resultMap="MonitorServiceRecord">
		SELECT <include refid="columns"/> FROM monitor_service_record
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findLastErrorServiceRecord" resultMap="MonitorServiceRecord">
		SELECT <include refid="columns"/>
		FROM (
			SELECT <include refid="columns"/> FROM monitor_service_record
			<include refid="findWhere"/>
			<if test="null!=sortColumns">
				ORDER BY ${sortColumns}
			</if>
		) record LIMIT 1
	</select>
	<!-- 根据平台编号查询监控数据 -->
	<select id="getMonitorService" resultMap="MonitorServiceRecord">
		SELECT
		ss. NAME,
		msr.sysCode,
		sum(msr.errorCount) as errorCount,	
		msr.serviceId,
		ms.sourceName as errorDesc,
		msr.status
	FROM
		monitor_service_record msr,
		systerm_source ss,
		monitor_service ms
	WHERE
		msr.sysCode = ss. CODE
	AND msr.serviceId = ms.id 
	AND msr.sysCode = ${_parameter}
	 AND DATE_FORMAT(msr.operateTime,'%Y-%m-%d')= current_date 
			GROUP BY
	msr.serviceId,
	msr. STATUS;
	
	</select>
	
	<select id="getErrCount" resultMap="MonitorServiceRecord">
		SELECT
		msr.sysCode,
		sum(errorCount) AS errorCount,
		ss.name as errorDesc,
		msr.status
	FROM
		monitor_service_record msr,
		systerm_source ss
	WHERE
		msr.sysCode =#{_parameter}
	and ss.code =msr.sysCode
	AND DATE_FORMAT(msr.operateTime,'%Y-%m-%d')= current_date	
	</select>
	<select id="getErrCountByStatus" resultMap="MonitorServiceRecord">
		SELECT
		msr.sysCode,
		sum(errorCount) AS errorCount,
		ss.name as errorDesc,
		msr.status
	FROM
		monitor_service_record msr,
		systerm_source ss
	WHERE
		msr.sysCode =#{_parameter}
	and ss.code =msr.sysCode
	AND DATE_FORMAT(msr.operateTime,'%Y-%m-%d')= current_date	
	group by msr.status
	</select>
	
</mapper>
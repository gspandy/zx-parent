<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MonitorUserRule">

    <resultMap id="MonitorUserRule" type="com.ink.monitor.core.po.MonitorUserRule">
        <result property="id" column="id"/>
        <result property="userId" column="userId"/>
        <result property="sysCode" column="sysCode"/>
        <result property="moduleCode" column="moduleCode"/>
        <result property="infoCode" column="infoCode"/>
        <result property="createTime" column="createTime"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,userId ,sysCode ,moduleCode ,infoCode ,createTime 
	    ]]>
	</sql>
	
    <insert id="insert" >
    <![CDATA[
        INSERT INTO monitor_user_rule (
	        id  ,
	        userId  ,
	        sysCode  ,
	        moduleCode  ,
	        infoCode  ,
	        createTime  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{userId, jdbcType=INTEGER} ,
        	#{sysCode, jdbcType=VARCHAR} ,
        	#{moduleCode, jdbcType=VARCHAR} ,
        	#{infoCode, jdbcType=VARCHAR} ,
        	now()
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO monitor_user_rule ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=INTEGER} ,
        	#{item.userId, jdbcType=INTEGER} ,
        	#{item.sysCode, jdbcType=VARCHAR} ,
        	#{item.moduleCode, jdbcType=VARCHAR} ,
        	#{item.infoCode, jdbcType=VARCHAR} ,
        	now()
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE monitor_user_rule SET
	        userId = #{userId, jdbcType=INTEGER} ,
	        sysCode = #{sysCode, jdbcType=VARCHAR} ,
	        moduleCode = #{moduleCode, jdbcType=VARCHAR} ,
	        infoCode = #{infoCode, jdbcType=VARCHAR}
        WHERE 
	        id = #{id} 
    ]]>
    </update>

	<update id="updateMonitorInfo" >
		update monitor_user_rule t,systerm_info t1 set t.sysCode=t1.systermCode,t.moduleCode=t1.moduleCode
			where t.infoCode=t1.code and t.userId=#{userId}
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM monitor_user_rule WHERE
        id = #{id} 
    ]]>
    </delete>

	<delete id="deleteMonitorUserRule">
		DELETE FROM monitor_user_rule
		<where>
			<if test="null!=sysCode and ''!=sysCode ">
				AND sysCode = #{sysCode}
			</if>
			<if test="null!=moduleCode and ''!=moduleCode ">
				AND moduleCode = #{moduleCode}
			</if>
			<choose>
				<when test="null!=infoCode and ''!=infoCode">
					AND infoCode = #{infoCode}
				</when>
				<otherwise>
					AND infoCode is null
				</otherwise>
			</choose>
			<if test="null!=userId and ''!=userId">
				AND userId = #{userId}
			</if>
		</where>
	</delete>

	<delete id="deleteMonitorUserRuleByUserId">
		DELETE FROM monitor_user_rule
				WHERE userId = #{userId}
	</delete>

    <select id="getById" resultMap="MonitorUserRule">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM monitor_user_rule 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=sysCode and ''!=sysCode ">
	   			 		AND sysCode = #{sysCode}
	   			   	</if>
			       	<if test="null!=moduleCode and ''!=moduleCode ">
	   			 		AND moduleCode = #{moduleCode}
	   			   	</if>
			       	<if test="null!=infoCode and ''!=infoCode ">
	   			 		AND infoCode = #{infoCode}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=sysCode and ''!=sysCode">
				    <!-- 	AND sysCode LIKE '%'||#{sysCode}||'%' oracle -->
			   			AND sysCode LIKE concat('%',#{sysCode},'%')
			   			
			   		</if>
				    <if test="null!=moduleCode and ''!=moduleCode">
				    <!-- 	AND moduleCode LIKE '%'||#{moduleCode}||'%' oracle -->
			   			AND moduleCode LIKE concat('%',#{moduleCode},'%')
			   			
			   		</if>
				    <if test="null!=infoCode and ''!=infoCode">
				    <!-- 	AND infoCode LIKE '%'||#{infoCode}||'%' oracle -->
			   			AND infoCode LIKE concat('%',#{infoCode},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=userId and ''!=userId">
			    AND userId = #{userId}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND createTime >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND createTime &lt; #{createTimeEnd}
		   	</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM monitor_user_rule <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="MonitorUserRule">
    	SELECT <include refid="columns"/> FROM monitor_user_rule 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="MonitorUserRule">
	    SELECT <include refid="columns"/> FROM monitor_user_rule 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<select id="findMonitorInfoTree" resultType="hashmap" >
			select DISTINCT tt.* from (
				SELECT t.code AS id,t.code code, '0' AS pid, t.name AS name, '0' AS checkType, (
					SELECT COUNT(1)
					FROM monitor_user_rule t3
					WHERE t3.sysCode = t.code
						AND t3.userId = #{userId}
					) AS checked
				, -1 AS sonCount
				FROM systerm_source t
				WHERE t.status = 0
				UNION ALL
				SELECT CONCAT_WS(',', t1.systermCode, t1.code) AS id,t1.code code, t1.systermCode, t1.name AS name, '1' AS checkType, (
						SELECT COUNT(1)
						FROM monitor_user_rule t3
						WHERE t3.moduleCode = t1.code
							AND t3.userId = #{userId}
						) AS checked
					, (
						SELECT COUNT(1)
						FROM systerm_info t4
						WHERE t1.code = t4.moduleCode
							AND t4.status = 0
						) AS sonCount
				FROM systerm_module t1
				WHERE t1.status = 0
				UNION ALL
				SELECT CONCAT_WS(',', t2.systermCode, t2.moduleCode, t2.code) AS id,t2.code code, t2.moduleCode, t2.name AS name, '2' AS checkType, 1 AS checked
					, -1 AS sonCount
				FROM systerm_info t2, monitor_user_rule t3
				WHERE t2.status = 0
					AND t2.code = t3.infoCode and t3.userId=#{userId}
				UNION ALL
				SELECT CONCAT_WS(',', t2.systermCode, t2.moduleCode, t2.code) AS id,t2.code code, t2.moduleCode, t2.name AS name, '2' AS checkType, 1 AS checked
					, -1 AS sonCount
				FROM systerm_info t2, monitor_user_rule t3
				WHERE t2.moduleCode = t3.moduleCode
					AND t2.status = 0
					AND (ISNULL(t3.infoCode)
						OR TRIM(t3.infoCode) = '')
					AND t3.userId = #{userId}
				UNION ALL
				SELECT CONCAT_WS(',', t2.systermCode, t2.moduleCode, t2.code) AS id,t2.code code, t2.moduleCode, t2.name AS name, '2' AS checkType, 0 AS checked
					, -1 AS sonCount
				FROM systerm_info t2
				WHERE t2.status = 0
				and not exists (select 1 from monitor_user_rule t3 where t3.infocode = t2.code and t3.userid=#{userId})
				and not exists (select 1 from monitor_user_rule t3 where t3.moduleCode = t2.moduleCode and (ISNULL(t3.infoCode)
						OR TRIM(t3.infoCode) = '')  and t3.userid=#{userId})) tt,
					(select m1.infoCode,m1.moduleCode,m1.sysCode from monitor_info_rule m1 where m1.status='0'
					union all
					select null as infoCode,m2.moduleCode,m2.sysCode from monitor_module_rule m2 where m2.status='0' )tt1
			where tt.code = tt1.infoCode or tt.code = tt1.moduleCode or tt.code = tt1.sysCode

	</select>
	
</mapper>
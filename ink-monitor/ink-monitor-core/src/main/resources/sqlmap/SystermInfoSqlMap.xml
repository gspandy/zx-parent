<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SystermInfo">

    <resultMap id="SystermInfo" type="com.ink.monitor.core.po.SystermInfo">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="status" column="status"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
        <result property="opUser" column="opUser"/>
        <result property="opDesc" column="opDesc"/>
        <result property="systermCode" column="systermCode"/>
        <result property="moduleCode" column="moduleCode"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,name ,code ,status ,createTime ,updateTime ,opUser ,opDesc ,systermCode ,moduleCode 
	    ]]>
	</sql>
	
    <insert id="insert" >
    <![CDATA[
        INSERT INTO systerm_info (
	        id  ,
	        name  ,
	        code  ,
	        status  ,
	        createTime  ,
	        updateTime  ,
	        opUser  ,
	        opDesc  ,
	        systermCode  ,
	        moduleCode  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{name, jdbcType=VARCHAR} ,
        	#{code, jdbcType=VARCHAR} ,
        	#{status, jdbcType=CHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{updateTime, jdbcType=TIMESTAMP} ,
        	#{opUser, jdbcType=VARCHAR} ,
        	#{opDesc, jdbcType=VARCHAR} ,
        	#{systermCode, jdbcType=VARCHAR} ,
        	#{moduleCode, jdbcType=VARCHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO systerm_info ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=INTEGER} ,
        	#{item.name, jdbcType=VARCHAR} ,
        	#{item.code, jdbcType=VARCHAR} ,
        	#{item.status, jdbcType=CHAR} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.updateTime, jdbcType=TIMESTAMP} ,
        	#{item.opUser, jdbcType=VARCHAR} ,
        	#{item.opDesc, jdbcType=VARCHAR} ,
        	#{item.systermCode, jdbcType=VARCHAR} ,
        	#{item.moduleCode, jdbcType=VARCHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE systerm_info SET
	        name = #{name, jdbcType=VARCHAR} ,
	        code = #{code, jdbcType=VARCHAR} ,
	        status = #{status, jdbcType=CHAR} ,
	        createTime = #{createTime, jdbcType=TIMESTAMP} ,
	        updateTime = #{updateTime, jdbcType=TIMESTAMP} ,
	        opUser = #{opUser, jdbcType=VARCHAR} ,
	        opDesc = #{opDesc, jdbcType=VARCHAR} ,
	        systermCode = #{systermCode, jdbcType=VARCHAR} ,
	        moduleCode = #{moduleCode, jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

	<update id="updateStatus">
		UPDATE systerm_info SET
		status = #{status, jdbcType=CHAR} ,
		updateTime = now()
		<where>
			<if test="null!=systermCode and ''!=systermCode ">
				AND systermCode = #{systermCode}
			</if>
			<if test="null!=moduleCode and ''!=moduleCode ">
				AND moduleCode = #{moduleCode}
			</if>
		</where>
	</update>

	<update id="updateInfoStatus">
		UPDATE systerm_info SET
		status = #{status, jdbcType=CHAR} ,
		updateTime = now()
		where  id = #{id}
	</update>

    <delete id="delete">
    <![CDATA[
        UPDATE systerm_info SET status = '1',updateTime = now() WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="SystermInfo">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM systerm_info 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=name and ''!=name ">
	   			 		AND name = #{name}
	   			   	</if>
			       	<if test="null!=code and ''!=code ">
	   			 		AND code = #{code}
	   			   	</if>
			       	<if test="null!=status and ''!=status ">
	   			 		AND status = #{status}
	   			   	</if>
			       	<if test="null!=opUser and ''!=opUser ">
	   			 		AND opUser = #{opUser}
	   			   	</if>
			       	<if test="null!=opDesc and ''!=opDesc ">
	   			 		AND opDesc = #{opDesc}
	   			   	</if>
			       	<if test="null!=systermCode and ''!=systermCode ">
	   			 		AND systermCode = #{systermCode}
	   			   	</if>
			       	<if test="null!=moduleCode and ''!=moduleCode ">
	   			 		AND moduleCode = #{moduleCode}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=name and ''!=name">
				    <!-- 	AND name LIKE '%'||#{name}||'%' oracle -->
			   			AND name LIKE concat('%',#{name},'%')
			   			
			   		</if>
				    <if test="null!=code and ''!=code">
				    <!-- 	AND code LIKE '%'||#{code}||'%' oracle -->
			   			AND code LIKE concat('%',#{code},'%')
			   			
			   		</if>
				    <if test="null!=status and ''!=status">
				    <!-- 	AND status LIKE '%'||#{status}||'%' oracle -->
			   			AND status LIKE concat('%',#{status},'%')
			   			
			   		</if>
				    <if test="null!=opUser and ''!=opUser">
				    <!-- 	AND opUser LIKE '%'||#{opUser}||'%' oracle -->
			   			AND opUser LIKE concat('%',#{opUser},'%')
			   			
			   		</if>
				    <if test="null!=opDesc and ''!=opDesc">
				    <!-- 	AND opDesc LIKE '%'||#{opDesc}||'%' oracle -->
			   			AND opDesc LIKE concat('%',#{opDesc},'%')
			   			
			   		</if>
				    <if test="null!=systermCode and ''!=systermCode">
				    <!-- 	AND systermCode LIKE '%'||#{systermCode}||'%' oracle -->
			   			AND systermCode LIKE concat('%',#{systermCode},'%')
			   			
			   		</if>
				    <if test="null!=moduleCode and ''!=moduleCode">
				    <!-- 	AND moduleCode LIKE '%'||#{moduleCode}||'%' oracle -->
			   			AND moduleCode LIKE concat('%',#{moduleCode},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND createTime >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND createTime &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=updateTimeBegin and ''!=updateTimeBegin">
		   		AND updateTime >= #{updateTimeBegin}
		   	</if>
		   	<if test="null!=updateTimeEnd and ''!=updateTimeEnd">
		   		AND updateTime &lt; #{updateTimeEnd}
		   	</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM systerm_info <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="SystermInfo">
    	SELECT <include refid="columns"/> FROM systerm_info 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="SystermInfo">
	    SELECT <include refid="columns"/> FROM systerm_info 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>
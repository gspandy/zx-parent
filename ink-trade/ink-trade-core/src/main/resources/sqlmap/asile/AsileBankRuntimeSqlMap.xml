<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AsileBankRuntime">

	<resultMap id="AsileBankRuntime" type="com.ink.asile.core.po.AsileBankRuntime">
		<result property="id" column="id" />
		<result property="asileName" column="asile_name" />
		<result property="asileCode" column="asile_code" />
		<result property="bankName" column="bank_name" />
		<result property="bankCode" column="bank_code" />
		<result property="asileProductCode" column="asile_product_code" />
		<result property="asileProductName" column="asile_product_name" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="createrId" column="creater_id" />
		<result property="createrName" column="creater_name" />
		<result property="updateTime" column="update_time" />
		<result property="updaterId" column="updater_id" />
		<result property="updaterName" column="updater_name" />
		<result property="isDelete" column="is_delete" />
		<result property="version" column="version" />
		<result property="isActive" column="is_active" />
		<result property="inactivaStartTime" column="Inactiva_start_time" />
		<result property="inactivaEndTime" column="Inactiva_end_time" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,asile_name ,asile_code ,bank_name ,bank_code ,asile_product_code ,asile_product_name ,remark ,create_time ,creater_id ,creater_name ,update_time ,updater_id ,updater_name ,is_delete ,version ,is_active ,Inactiva_start_time ,Inactiva_end_time 
	    ]]>
	</sql>
	<!-- 查询服务不可用通道 -->
	<select id="getNotAvailableChannel" resultMap="AsileBankRuntime">
		SELECT
		<include refid="columns" />
		<![CDATA[
	        FROM asile_bank_runtime
	        WHERE
		         bank_code = #{bankCode}
		    AND  Inactiva_start_time <= #{createTime}
		    AND  Inactiva_end_time >= #{createTime}
	    ]]>
	</select>

	<!-- 查询所有 -->
	<select id="getAll" resultMap="AsileBankRuntime">
		SELECT
		<include refid="columns" />
		<![CDATA[
	        FROM asile_bank_runtime
	    ]]>
	</select>

	<insert id="insert" keyProperty="id" useGeneratedKeys="true">
    <![CDATA[
        INSERT INTO asile_bank_runtime (
	        id  ,
	        asile_name  ,
	        asile_code  ,
	        bank_name  ,
	        bank_code  ,
	        asile_product_code  ,
	        asile_product_name  ,
	        remark  ,
	        create_time  ,
	        creater_id  ,
	        creater_name  ,
	        update_time  ,
	        updater_id  ,
	        updater_name  ,
	        is_delete  ,
	        version  ,
	        is_active  ,
	        Inactiva_start_time  ,
	        Inactiva_end_time  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{asileName, jdbcType=VARCHAR} ,
        	#{asileCode, jdbcType=BIGINT} ,
        	#{bankName, jdbcType=VARCHAR} ,
        	#{bankCode, jdbcType=VARCHAR} ,
        	#{asileProductCode, jdbcType=VARCHAR} ,
        	#{asileProductName, jdbcType=VARCHAR} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{createrId, jdbcType=BIGINT} ,
        	#{createrName, jdbcType=VARCHAR} ,
        	#{updateTime, jdbcType=TIMESTAMP} ,
        	#{updaterId, jdbcType=BIGINT} ,
        	#{updaterName, jdbcType=VARCHAR} ,
        	#{isDelete, jdbcType=CHAR} ,
        	#{version, jdbcType=INTEGER} ,
        	#{isActive, jdbcType=TINYINT} ,
        	#{inactivaStartTime, jdbcType=TIMESTAMP} ,
        	#{inactivaEndTime, jdbcType=TIMESTAMP} 
        )
    ]]>
	</insert>
	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO asile_bank_runtime (
		<include refid="columns" />
		) values
		<foreach collection="list" item="item" separator=",">
			(
			#{item.id,
			jdbcType=BIGINT} ,
			#{item.asileName, jdbcType=VARCHAR} ,
			#{item.asileCode, jdbcType=BIGINT} ,
			#{item.bankName,
			jdbcType=VARCHAR} ,
			#{item.bankCode, jdbcType=BIGINT} ,
			#{item.asileProductCode, jdbcType=VARCHAR} ,
			#{item.asileProductName,
			jdbcType=VARCHAR} ,
			#{item.remark, jdbcType=VARCHAR} ,
			#{item.createTime, jdbcType=TIMESTAMP} ,
			#{item.createrId,
			jdbcType=BIGINT} ,
			#{item.createrName, jdbcType=VARCHAR} ,
			#{item.updateTime, jdbcType=TIMESTAMP} ,
			#{item.updaterId,
			jdbcType=BIGINT} ,
			#{item.updaterName, jdbcType=VARCHAR} ,
			#{item.isDelete, jdbcType=CHAR} ,
			#{item.version, jdbcType=INTEGER} ,
			#{item.isActive, jdbcType=TINYINT} ,
			#{item.inactivaStartTime,
			jdbcType=TIMESTAMP} ,
			#{item.inactivaEndTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>

	<update id="update">
    <![CDATA[
        UPDATE asile_bank_runtime SET
	        asile_name = #{asileName, jdbcType=VARCHAR} ,
	        asile_code = #{asileCode, jdbcType=BIGINT} ,
	        bank_name = #{bankName, jdbcType=VARCHAR} ,
	        bank_code = #{bankCode, jdbcType=VARCHAR} ,
	        asile_product_code = #{asileProductCode, jdbcType=VARCHAR} ,
	        asile_product_name = #{asileProductName, jdbcType=VARCHAR} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        creater_id = #{createrId, jdbcType=BIGINT} ,
	        creater_name = #{createrName, jdbcType=VARCHAR} ,
	        update_time = #{updateTime, jdbcType=TIMESTAMP} ,
	        updater_id = #{updaterId, jdbcType=BIGINT} ,
	        updater_name = #{updaterName, jdbcType=VARCHAR} ,
	        is_delete = #{isDelete, jdbcType=CHAR} ,
	        version = #{version, jdbcType=INTEGER} ,
	        is_active = #{isActive, jdbcType=TINYINT} ,
	        Inactiva_start_time = #{inactivaStartTime, jdbcType=TIMESTAMP} ,
	        Inactiva_end_time = #{inactivaEndTime, jdbcType=TIMESTAMP} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>
<update id="updateNotNull" >
			UPDATE asile_bank_runtime
				<set>
			       	<if test="null!=asileName and ''!=asileName ">
	   			 		asile_name = #{asileName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileCode and ''!=asileCode ">
	   			 		asile_code = #{asileCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankName and ''!=bankName ">
	   			 		bank_name = #{bankName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankCode and ''!=bankCode ">
	   			 		bank_code = #{bankCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileProductCode and ''!=asileProductCode ">
	   			 		asile_product_code = #{asileProductCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileProductName and ''!=asileProductName ">
	   			 		asile_product_name = #{asileProductName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		remark = #{remark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=createrId and ''!=createrId ">
	   			 		creater_id = #{createrId, jdbcType=BIGINT} ,
	   			   	</if>
			       	<if test="null!=createrName and ''!=createrName ">
	   			 		creater_name = #{createrName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=updateTime and ''!=updateTime ">
	   			 		update_time = #{updateTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=updaterId and ''!=updaterId ">
	   			 		updater_id = #{updaterId, jdbcType=BIGINT} ,
	   			   	</if>
			       	<if test="null!=updaterName and ''!=updaterName ">
	   			 		updater_name = #{updaterName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=isDelete and ''!=isDelete ">
	   			 		is_delete = #{isDelete, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=version and ''!=version ">
	   			 		version = #{version, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=isActive and ''!=isActive ">
	   			 		is_active = #{isActive, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=inactivaStartTime and ''!=inactivaStartTime ">
	   			 		Inactiva_start_time = #{inactivaStartTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=inactivaEndTime and ''!=inactivaEndTime ">
	   			 		Inactiva_end_time = #{inactivaEndTime, jdbcType=TIMESTAMP} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
	<delete id="delete">
    <![CDATA[
        DELETE FROM asile_bank_runtime WHERE
        id = #{id} 
    ]]>
	</delete>

	<select id="getById" resultMap="AsileBankRuntime">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM asile_bank_runtime 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

	<sql id="findWhere">
		<where>
			<choose>
				<when test="queryType==0">
					<if test="null!=asileName and ''!=asileName ">
						AND asile_name = #{asileName}
					</if>
					<if test="null!=bankName and ''!=bankName ">
						AND bank_name = #{bankName}
					</if>
					<if test="null!=asileProductCode and ''!=asileProductCode ">
						AND asile_product_code = #{asileProductCode}
					</if>
					<if test="null!=asileProductName and ''!=asileProductName ">
						AND asile_product_name = #{asileProductName}
					</if>
					<if test="null!=remark and ''!=remark ">
						AND remark = #{remark}
					</if>
					<if test="null!=createrName and ''!=createrName ">
						AND creater_name = #{createrName}
					</if>
					<if test="null!=updaterName and ''!=updaterName ">
						AND updater_name = #{updaterName}
					</if>
					<if test="null!=isDelete and ''!=isDelete ">
						AND is_delete = #{isDelete}
					</if>
				</when>
				<otherwise>
					<if test="null!=asileName and ''!=asileName">
						<!-- AND asile_name LIKE '%'||#{asileName}||'%' oracle -->
						AND asile_name LIKE concat('%',#{asileName},'%')

					</if>
					<if test="null!=bankName and ''!=bankName">
						<!-- AND bank_name LIKE '%'||#{bankName}||'%' oracle -->
						AND bank_name LIKE concat('%',#{bankName},'%')

					</if>
					<if test="null!=asileProductCode and ''!=asileProductCode">
						<!-- AND asile_product_code LIKE '%'||#{asileProductCode}||'%' oracle -->
						AND asile_product_code LIKE concat('%',#{asileProductCode},'%')

					</if>
					<if test="null!=asileProductName and ''!=asileProductName">
						<!-- AND asile_product_name LIKE '%'||#{asileProductName}||'%' oracle -->
						AND asile_product_name LIKE concat('%',#{asileProductName},'%')

					</if>
					<if test="null!=remark and ''!=remark">
						<!-- AND remark LIKE '%'||#{remark}||'%' oracle -->
						AND remark LIKE concat('%',#{remark},'%')

					</if>
					<if test="null!=createrName and ''!=createrName">
						<!-- AND creater_name LIKE '%'||#{createrName}||'%' oracle -->
						AND creater_name LIKE concat('%',#{createrName},'%')

					</if>
					<if test="null!=updaterName and ''!=updaterName">
						<!-- AND updater_name LIKE '%'||#{updaterName}||'%' oracle -->
						AND updater_name LIKE concat('%',#{updaterName},'%')

					</if>
					<if test="null!=isDelete and ''!=isDelete">
						<!-- AND is_delete LIKE '%'||#{isDelete}||'%' oracle -->
						AND is_delete LIKE concat('%',#{isDelete},'%')

					</if>
				</otherwise>
			</choose>
			<if test="null!=id and ''!=id">
				AND id = #{id}
			</if>
			<if test="null!=asileCode and ''!=asileCode">
				AND asile_code = #{asileCode}
			</if>
			<if test="null!=bankCode and ''!=bankCode">
				AND bank_code = #{bankCode}
			</if>
			<if test="null!=createTime and ''!=createTime">
				AND create_time >= #{createTime}
			</if>
			<if test="null!=createTimeEnd and ''!=createTimeEnd">
				AND create_time &lt; #{createTimeEnd}
			</if>
			<if test="null!=createrId and ''!=createrId">
				AND creater_id = #{createrId}
			</if>
			<if test="null!=updateTimeBegin and ''!=updateTimeBegin">
				AND update_time >= #{updateTimeBegin}
			</if>
			<if test="null!=updateTimeEnd and ''!=updateTimeEnd">
				AND update_time &lt; #{updateTimeEnd}
			</if>
			<if test="null!=updaterId and ''!=updaterId">
				AND updater_id = #{updaterId}
			</if>
			<if test="null!=version and ''!=version">
				AND version = #{version}
			</if>
			<if test="null!=isActive and ''!=isActive">
				AND is_active = #{isActive}
			</if>
			
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(*) FROM asile_bank_runtime
		<include refid="findWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 #offset#,#pageSize#,#lastRows# 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findPage" resultMap="AsileBankRuntime">
		SELECT
		<include refid="columns" />
		FROM asile_bank_runtime
		<include refid="findWhere" />
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
			limit #{offset} , #{limit}
		</if>


	</select>


	<select id="find" resultMap="AsileBankRuntime">
		SELECT
		<include refid="columns" />
		FROM asile_bank_runtime
		<include refid="findWhere" />
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findAsileBankRuntimes" resultMap="AsileBankRuntime">
		SELECT
		<include refid="columns" />
		FROM asile_bank_runtime
		WHERE 1=1
		<if test="null!=id and ''!=id">
			AND id = #{id}
		</if>
		<if test="null!=asileCode and ''!=asileCode">
			AND asile_code = #{asileCode}
		</if>
		<if test="null!=bankCode and ''!=bankCode">
			AND bank_code = #{bankCode}
		</if>
		<if test="null!=createTime and ''!=createTime">
			AND create_time >= #{createTime}
		</if>
		<if test="null!=createrId and ''!=createrId">
			AND creater_id = #{createrId}
		</if>
		<if test="null!=version and ''!=version">
			AND version = #{version}
		</if>
		<if test="null!=isActive and ''!=isActive">
			AND is_active = #{isActive}
		</if>
	</select>


</mapper>


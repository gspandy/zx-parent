<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AsileSign">

    <resultMap id="AsileSign" type="com.ink.asile.core.po.AsileSign">
        <result property="id" column="id"/>
        <result property="chanelNo" column="chanel_no"/>
        <result property="chanelName" column="chanel_name"/>
        <result property="signId" column="sign_id"/>
        <result property="cid" column="cid"/>
        <result property="status" column="status"/>
        <result property="version" column="version"/>
        <result property="isDelete" column="is_delete"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="lastupdateTime" column="lastupdate_time"/>
        <result property="cardNo" column="card_no"/>
        <result property="userName" column="user_name"/>
        <result property="idNo" column="id_no"/>
        <result property="idType" column="id_type"/>
        <result property="phone" column="phone"/>
        <result property="cvv2" column="cvv2"/>
        <result property="expireDate" column="expire_date"/>
        <result property="bankShort" column="bank_short"/>
        <result property="userId" column="user_id"/>
        <result property="mchId" column="mch_id"/>
        <result property="cardType" column="card_type"/>
        <result property="reqId" column="req_id"/>
        <result property="authOrderId" column="auth_order_id"/>
        <result property="payType" column="pay_type"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,chanel_no ,chanel_name ,sign_id ,cid ,status ,version ,is_delete ,remark ,create_time ,lastupdate_time ,card_no ,user_name ,id_no ,id_type ,phone ,cvv2 ,expire_date ,bank_short ,user_id,mch_id,card_type,req_id,auth_order_id,pay_type 
	    ]]>
	</sql>
    <!-- 根据渠道号查询用户的签约信息 -->
    <select id="selectSignIdByChannel" resultMap="AsileSign">
        SELECT <include refid="columns"/>
        <![CDATA[
	        FROM asile_sign
	        WHERE
	            cid = #{cid}
	        AND
	            pay_type=#{payType}
		    AND chanel_no = #{chanelNo}
	    ]]>
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    <![CDATA[
        INSERT INTO asile_sign (
	        id  ,
	        chanel_no  ,
	        chanel_name  ,
	        sign_id  ,
	        cid  ,
	        status  ,
	        version  ,
	        is_delete  ,
	        remark  ,
	        create_time  ,
	        lastupdate_time  ,
	        card_no  ,
	        user_name  ,
	        id_no  ,
	        id_type  ,
	        phone  ,
	        cvv2  ,
	        expire_date  ,
	        bank_short  ,
	        user_id,
	        mch_id,
	        card_type,
	        req_id,
	        auth_order_id,
	        pay_type
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{chanelNo, jdbcType=VARCHAR} ,
        	#{chanelName, jdbcType=VARCHAR} ,
        	#{signId, jdbcType=VARCHAR} ,
        	#{cid, jdbcType=BIGINT} ,
        	#{status, jdbcType=INTEGER} ,
        	#{version, jdbcType=TINYINT} ,
        	#{isDelete, jdbcType=INTEGER} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{cardNo, jdbcType=VARCHAR} ,
        	#{userName, jdbcType=VARCHAR} ,
        	#{idNo, jdbcType=VARCHAR} ,
        	#{idType, jdbcType=CHAR} ,
        	#{phone, jdbcType=VARCHAR} ,
        	#{cvv2, jdbcType=VARCHAR} ,
        	#{expireDate, jdbcType=VARCHAR} ,
        	#{bankShort, jdbcType=VARCHAR} ,
        	#{userId, jdbcType=VARCHAR},
        	#{mchId, jdbcType=VARCHAR},
        	#{cardType, jdbcType=CHAR},
        	#{reqId, jdbcType=VARCHAR},
        	#{authOrderId, jdbcType=VARCHAR},
        	#{payType, jdbcType=VARCHAR}
        	
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO asile_sign ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.chanelNo, jdbcType=VARCHAR} ,
        	#{item.chanelName, jdbcType=VARCHAR} ,
        	#{item.signId, jdbcType=VARCHAR} ,
        	#{item.cid, jdbcType=BIGINT} ,
        	#{item.status, jdbcType=INTEGER} ,
        	#{item.version, jdbcType=TINYINT} ,
        	#{item.isDelete, jdbcType=INTEGER} ,
        	#{item.remark, jdbcType=VARCHAR} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{item.cardNo, jdbcType=VARCHAR} ,
        	#{item.userName, jdbcType=VARCHAR} ,
        	#{item.idNo, jdbcType=VARCHAR} ,
        	#{item.idType, jdbcType=CHAR} ,
        	#{item.phone, jdbcType=VARCHAR} ,
        	#{item.cvv2, jdbcType=VARCHAR} ,
        	#{item.expireDate, jdbcType=VARCHAR} ,
        	#{item.bankShort, jdbcType=VARCHAR} ,
        	#{item.userId, jdbcType=VARCHAR},
        	#{item.mchId, jdbcType=VARCHAR},
        	#{item.cardType, jdbcType=CHAR},
        	#{item.reqId, jdbcType=VARCHAR},
        	#{item.authOrderId, jdbcType=VARCHAR},
        	#{item.payType, jdbcType=VARCHAR}
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE asile_sign SET
	        chanel_no = #{chanelNo, jdbcType=VARCHAR} ,
	        chanel_name = #{chanelName, jdbcType=VARCHAR} ,
	        sign_id = #{signId, jdbcType=VARCHAR} ,
	        cid = #{cid, jdbcType=BIGINT} ,
	        status = #{status, jdbcType=INTEGER} ,
	        version = #{version, jdbcType=TINYINT} ,
	        is_delete = #{isDelete, jdbcType=INTEGER} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	        card_no = #{cardNo, jdbcType=VARCHAR} ,
	        user_name = #{userName, jdbcType=VARCHAR} ,
	        id_no = #{idNo, jdbcType=VARCHAR} ,
	        id_type = #{idType, jdbcType=CHAR} ,
	        phone = #{phone, jdbcType=VARCHAR} ,
	        cvv2 = #{cvv2, jdbcType=VARCHAR} ,
	        expire_date = #{expireDate, jdbcType=VARCHAR} ,
	        bank_short = #{bankShort, jdbcType=VARCHAR} ,
	        user_id = #{userId, jdbcType=VARCHAR},
	        mch_id=#{item.mchId, jdbcType=VARCHAR},
	        card_type=#{item.cardType, jdbcType=CHAR},
	        req_id=#{item.reqId, jdbcType=VARCHAR},
	        auth_order_id=#{item.authOrderId, jdbcType=VARCHAR},
	        pay_type=#{item.payType, jdbcType=VARCHAR}
        WHERE 
	        id = #{id} 
    ]]>
    </update>
<update id="updateNotNull" >
			UPDATE asile_sign
				<set>
			       	<if test="null!=chanelNo and ''!=chanelNo ">
	   			 		chanel_no = #{chanelNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=chanelName and ''!=chanelName ">
	   			 		chanel_name = #{chanelName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=signId and ''!=signId ">
	   			 		sign_id = #{signId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=cid and ''!=cid ">
	   			 		cid = #{cid, jdbcType=BIGINT} ,
	   			   	</if>
			       	<if test="null!=status and ''!=status ">
	   			 		status = #{status, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=version and ''!=version ">
	   			 		version = #{version, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=isDelete and ''!=isDelete ">
	   			 		is_delete = #{isDelete, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		remark = #{remark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=lastupdateTime and ''!=lastupdateTime ">
	   			 		lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=cardNo and ''!=cardNo ">
	   			 		card_no = #{cardNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=userName and ''!=userName ">
	   			 		user_name = #{userName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=idNo and ''!=idNo ">
	   			 		id_no = #{idNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=idType and ''!=idType ">
	   			 		id_type = #{idType, jdbcType=CHAR} ,
	   			   	</if>
			       	<if test="null!=phone and ''!=phone ">
	   			 		phone = #{phone, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=cvv2 and ''!=cvv2 ">
	   			 		cvv2 = #{cvv2, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=expireDate and ''!=expireDate ">
	   			 		expire_date = #{expireDate, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankShort and ''!=bankShort ">
	   			 		bank_short = #{bankShort, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=userId and ''!=userId ">
	   			 		user_id = #{userId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=mchId and ''!=mchId ">
	   			 		mch_id = #{mchId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=cardType and ''!=cardType ">
	   			 		card_type = #{cardType, jdbcType=CHAR} ,
	   			   	</if>
			       	<if test="null!=reqId and ''!=reqId ">
	   			 		req_id = #{reqId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=authOrderId and ''!=authOrderId ">
	   			 		auth_order_id = #{authOrderId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=payType and ''!=payType ">
	   			 		pay_type = #{payType, jdbcType=CHAR} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
    <delete id="delete">
    <![CDATA[
        DELETE FROM asile_sign WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="AsileSign">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM asile_sign 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=chanelNo and ''!=chanelNo ">
	   			 		AND chanel_no = #{chanelNo}
	   			   	</if>
			       	<if test="null!=chanelName and ''!=chanelName ">
	   			 		AND chanel_name = #{chanelName}
	   			   	</if>
			       	<if test="null!=signId and ''!=signId ">
	   			 		AND sign_id = #{signId}
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		AND remark = #{remark}
	   			   	</if>
			       	<if test="null!=cardNo and ''!=cardNo ">
	   			 		AND card_no = #{cardNo}
	   			   	</if>
			       	<if test="null!=userName and ''!=userName ">
	   			 		AND user_name = #{userName}
	   			   	</if>
			       	<if test="null!=idNo and ''!=idNo ">
	   			 		AND id_no = #{idNo}
	   			   	</if>
			       	<if test="null!=phone and ''!=phone ">
	   			 		AND phone = #{phone}
	   			   	</if>
			       	<if test="null!=cvv2 and ''!=cvv2 ">
	   			 		AND cvv2 = #{cvv2}
	   			   	</if>
			       	<if test="null!=bankShort and ''!=bankShort ">
	   			 		AND bank_short = #{bankShort}
	   			   	</if>
			       	<if test="null!=userId and ''!=userId ">
	   			 		AND user_id = #{userId}
	   			   	</if>
	   			   	<if test="null!=mchId and ''!=mchId ">
	   			 		AND mch_id = #{mchId}
	   			   	</if>
	   			   	<if test="null!=payType and ''!=payType ">
	   			 		AND pay_type = #{payType}
	   			   	</if>
	   			   	<!-- 
	   			   	<if test="null!=cardType and ''!=cardType ">
	   			 		AND card_type = #{cardType}
	   			   	</if>
	   			   	<if test="null!=reqId and ''!=reqId ">
	   			 		AND req	_id = #{reqId}
	   			   	</if>
	   			   	<if test="null!=authOrderId and ''!=authOrderId ">
	   			 		AND auth_order_id = #{authOrderId}
	   			   	</if>
	   			   	-->
	       		</when>
	       		<otherwise>
				    <if test="null!=chanelNo and ''!=chanelNo">
				    <!-- 	AND chanel_no LIKE '%'||#{chanelNo}||'%' oracle -->
			   			AND chanel_no LIKE concat('%',#{chanelNo},'%')
			   			
			   		</if>
				    <if test="null!=chanelName and ''!=chanelName">
				    <!-- 	AND chanel_name LIKE '%'||#{chanelName}||'%' oracle -->
			   			AND chanel_name LIKE concat('%',#{chanelName},'%')
			   			
			   		</if>
				    <if test="null!=signId and ''!=signId">
				    <!-- 	AND sign_id LIKE '%'||#{signId}||'%' oracle -->
			   			AND sign_id LIKE concat('%',#{signId},'%')
			   			
			   		</if>
				    <if test="null!=remark and ''!=remark">
				    <!-- 	AND remark LIKE '%'||#{remark}||'%' oracle -->
			   			AND remark LIKE concat('%',#{remark},'%')
			   			
			   		</if>
				    <if test="null!=cardNo and ''!=cardNo">
				    <!-- 	AND card_no LIKE '%'||#{cardNo}||'%' oracle -->
			   			AND card_no LIKE concat('%',#{cardNo},'%')
			   			
			   		</if>
				    <if test="null!=userName and ''!=userName">
				    <!-- 	AND user_name LIKE '%'||#{userName}||'%' oracle -->
			   			AND user_name LIKE concat('%',#{userName},'%')
			   			
			   		</if>
				    <if test="null!=idNo and ''!=idNo">
				    <!-- 	AND id_no LIKE '%'||#{idNo}||'%' oracle -->
			   			AND id_no LIKE concat('%',#{idNo},'%')
			   			
			   		</if>
				    <if test="null!=phone and ''!=phone">
				    <!-- 	AND phone LIKE '%'||#{phone}||'%' oracle -->
			   			AND phone LIKE concat('%',#{phone},'%')
			   			
			   		</if>
				    <if test="null!=cvv2 and ''!=cvv2">
				    <!-- 	AND cvv2 LIKE '%'||#{cvv2}||'%' oracle -->
			   			AND cvv2 LIKE concat('%',#{cvv2},'%')
			   			
			   		</if>
				    <if test="null!=bankShort and ''!=bankShort">
				    <!-- 	AND bank_short LIKE '%'||#{bankShort}||'%' oracle -->
			   			AND bank_short LIKE concat('%',#{bankShort},'%')
			   			
			   		</if>
				    <if test="null!=userId and ''!=userId">
				    <!-- 	AND user_id LIKE '%'||#{userId}||'%' oracle -->
			   			AND user_id LIKE concat('%',#{userId},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=cid and ''!=cid">
			    AND cid = #{cid}
			</if>
		   	<if test="null!=status and ''!=status">
			    AND status = #{status}
			</if>
		   	<if test="null!=version and ''!=version">
			    AND version = #{version}
			</if>
		   	<if test="null!=isDelete and ''!=isDelete">
			    AND is_delete = #{isDelete}
			</if>
<!-- 		   	<if test="null!=createTimeBegin and ''!=createTimeBegin"> -->
<!-- 		   		AND create_time >= #{createTimeBegin} -->
<!-- 		   	</if> -->
<!-- 		   	<if test="null!=createTimeEnd and ''!=createTimeEnd"> -->
<!-- 		   		AND create_time &lt; #{createTimeEnd} -->
<!-- 		   	</if> -->
<!-- 		   	<if test="null!=lastupdateTimeBegin and ''!=lastupdateTimeBegin"> -->
<!-- 		   		AND lastupdate_time >= #{lastupdateTimeBegin} -->
<!-- 		   	</if> -->
<!-- 		   	<if test="null!=lastupdateTimeEnd and ''!=lastupdateTimeEnd"> -->
<!-- 		   		AND lastupdate_time &lt; #{lastupdateTimeEnd} -->
<!-- 		   	</if> -->
<!-- 		   	<if test="null!=idType and ''!=idType"> -->
<!-- 			    AND id_type = #{idType} -->
<!-- 			</if> -->
<!-- 		   	<if test="null!=expireStartDateBegin and ''!=expireStartDateBegin"> -->
<!-- 		   		AND expire_start_date >= #{expireStartDateBegin} -->
<!-- 		   	</if> -->
<!-- 		   	<if test="null!=expireStartDateEnd and ''!=expireStartDateEnd"> -->
<!-- 		   		AND expire_start_date &lt; #{expireStartDateEnd} -->
<!-- 		   	</if> -->
<!-- 		   	<if test="null!=expireEndDateBegin and ''!=expireEndDateBegin"> -->
<!-- 		   		AND expire_end_date >= #{expireEndDateBegin} -->
<!-- 		   	</if> -->
<!-- 		   	<if test="null!=expireEndDateEnd and ''!=expireEndDateEnd"> -->
<!-- 		   		AND expire_end_date &lt; #{expireEndDateEnd} -->
<!-- 		   	</if> -->
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM asile_sign <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="AsileSign">
    	SELECT <include refid="columns"/> FROM asile_sign 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
	          limit #{offset} , #{limit} 
		</if>
		
		
    </select>

	
	<select id="find" resultMap="AsileSign">
	    SELECT <include refid="columns"/> FROM asile_sign 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>


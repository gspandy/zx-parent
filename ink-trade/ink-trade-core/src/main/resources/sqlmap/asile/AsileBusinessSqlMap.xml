<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AsileBusiness">

    <resultMap id="AsileBusiness" type="com.ink.asile.core.po.AsileBusiness">
        <result property="id" column="id"/>
        <result property="businessCode" column="business_code"/>
        <result property="businessName" column="business_name"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="isSyn" column="is_syn"/>
        <result property="asileCode" column="asile_code"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,business_code ,business_name ,remark ,create_time ,is_syn ,asile_code 
	    ]]>
	</sql>
	
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" >
    <![CDATA[
        INSERT INTO asile_business (
	        id  ,
	        business_code  ,
	        business_name  ,
	        remark  ,
	        create_time  ,
	        is_syn  ,
	        asile_code  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{businessCode, jdbcType=VARCHAR} ,
        	#{businessName, jdbcType=VARCHAR} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{isSyn, jdbcType=INTEGER} ,
        	#{asileCode, jdbcType=VARCHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO asile_business ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.businessCode, jdbcType=VARCHAR} ,
        	#{item.businessName, jdbcType=VARCHAR} ,
        	#{item.remark, jdbcType=VARCHAR} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.isSyn, jdbcType=INTEGER} ,
        	#{item.asileCode, jdbcType=VARCHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE asile_business SET
	        business_code = #{businessCode, jdbcType=VARCHAR} ,
	        business_name = #{businessName, jdbcType=VARCHAR} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        is_syn = #{isSyn, jdbcType=INTEGER} ,
	        asile_code = #{asileCode, jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>
	<update id="updateNotNull" >
			UPDATE asile_business
				<set>
			       	<if test="null!=businessCode and ''!=businessCode ">
	   			 		business_code = #{businessCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=businessName and ''!=businessName ">
	   			 		business_name = #{businessName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		remark = #{remark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=isSyn and ''!=isSyn ">
	   			 		is_syn = #{isSyn, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=asileCode and ''!=asileCode ">
	   			 		asile_code = #{asileCode, jdbcType=VARCHAR} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
    <delete id="delete">
    <![CDATA[
        DELETE FROM asile_business WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="AsileBusiness">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM asile_business 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>
    <select id="findByAsileCodeBusinessCode" resultMap="AsileBusiness">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM asile_business 
	        WHERE 
		        asile_code = #{asileCode} 
		        and business_code=#{businessCode}
		        and is_syn=0
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=businessCode and ''!=businessCode ">
	   			 		AND business_code = #{businessCode}
	   			   	</if>
			       	<if test="null!=businessName and ''!=businessName ">
	   			 		AND business_name = #{businessName}
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		AND remark = #{remark}
	   			   	</if>
			       	<if test="null!=asileCode and ''!=asileCode ">
	   			 		AND asile_code = #{asileCode}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=businessCode and ''!=businessCode">
				    <!-- 	AND business_code LIKE '%'||#{businessCode}||'%' oracle -->
			   			AND business_code LIKE concat('%',#{businessCode},'%')
			   			
			   		</if>
				    <if test="null!=businessName and ''!=businessName">
				    <!-- 	AND business_name LIKE '%'||#{businessName}||'%' oracle -->
			   			AND business_name LIKE concat('%',#{businessName},'%')
			   			
			   		</if>
				    <if test="null!=remark and ''!=remark">
				    <!-- 	AND remark LIKE '%'||#{remark}||'%' oracle -->
			   			AND remark LIKE concat('%',#{remark},'%')
			   			
			   		</if>
				    <if test="null!=asileCode and ''!=asileCode">
				    <!-- 	AND asile_code LIKE '%'||#{asileCode}||'%' oracle -->
			   			AND asile_code LIKE concat('%',#{asileCode},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND create_time &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=isSyn and ''!=isSyn">
			    AND is_syn = #{isSyn}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM asile_business <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="AsileBusiness">
    	SELECT <include refid="columns"/> FROM asile_business 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="AsileBusiness">
	    SELECT <include refid="columns"/> FROM asile_business 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>
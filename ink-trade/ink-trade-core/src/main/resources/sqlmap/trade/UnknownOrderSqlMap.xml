<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UnknownOrder">

    <resultMap id="UnknownOrder" type="com.ink.trade.core.po.UnknownOrder">
        <result property="id" column="id"/>
        <result property="payId" column="pay_id"/>
        <result property="payOrderNo" column="pay_order_no"/>
        <result property="orderStatus" column="order_status"/>
        <result property="finalStatus" column="final_status"/>
        <result property="channelNo" column="channel_no"/>
        <result property="executeRemark" column="execute_remark"/>
        <result property="executeCount" column="execute_count"/>
        <result property="orderTime" column="order_time"/>
        <result property="lastUpdateTime" column="last_update_time"/>
        <result property="transType" column="trans_type"/>
        <result property="tradeOrderId" column="trade_order_id"/>
        <result property="mchId" column="mch_id"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
        id ,pay_id ,pay_order_no ,order_status ,final_status ,channel_no ,execute_remark ,execute_count ,order_time ,last_update_time ,trans_type ,trade_order_id ,mch_id
	    ]]>
    </sql>
    <!-- 查询待处理任务 -->
    <select id="queryTask" resultMap="UnknownOrder">
        SELECT
        <include refid="columns"/>
        FROM unknown_order
        <![CDATA[
        where final_status = #{finalStatus} AND execute_remark = #{executeRemark}
        AND execute_count < #{executeCount}
        limit #{perQueryRecords}
        ]]>
    </select>
    <!--
         标记任务
         可标记任务需具备以下条件中一项
         1、未被标记的任务
         2、不是自己的任务，但是任务最后更新时间在半小时之前，并且未到达终态，并且任务执行次数小于5次
    -->
    <update id="remarkOrder">
        <![CDATA[

        UPDATE unknown_order SET
	        execute_remark = #{executeRemark, jdbcType=VARCHAR} ,
	        last_update_time = #{lastUpdateTime, jdbcType=TIMESTAMP}
        WHERE
            order_time <= #{orderTime} AND
	        (
            execute_remark = #{noneRemarkStatus} OR
	        (execute_remark != #{executeRemark} AND last_update_time <= #{orderTime} + #{timeOut} and final_status = #{finalStatus} and execute_count < #{maxExecCounts})
	        )
	        limit #{perRemarkRecords}

        ]]>
    </update>

    <insert id="insert" >
        <![CDATA[
        INSERT INTO unknown_order (
	        id  ,
	        pay_id  ,
	        pay_order_no  ,
	        order_status  ,
	        final_status  ,
	        channel_no  ,
	        execute_remark  ,
	        execute_count  ,
	        order_time  ,
	        last_update_time  ,
	        trans_type  ,
	        trade_order_id  ,
	        mch_id
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{payId, jdbcType=BIGINT} ,
        	#{payOrderNo, jdbcType=VARCHAR} ,
        	#{orderStatus, jdbcType=INTEGER} ,
        	#{finalStatus, jdbcType=CHAR} ,
        	#{channelNo, jdbcType=VARCHAR} ,
        	#{executeRemark, jdbcType=VARCHAR} ,
        	#{executeCount, jdbcType=INTEGER} ,
        	#{orderTime, jdbcType=TIMESTAMP} ,
        	#{lastUpdateTime, jdbcType=TIMESTAMP} ,
        	#{transType, jdbcType=VARCHAR} ,
        	#{tradeOrderId, jdbcType=BIGINT} ,
        	#{mchId, jdbcType=VARCHAR}
        )
    ]]>
    </insert>
    <insert id="insertBatch"   parameterType="java.util.List">
        INSERT INTO unknown_order ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
            (
            #{item.id, jdbcType=BIGINT} ,
            #{item.payId, jdbcType=BIGINT} ,
            #{item.payOrderNo, jdbcType=VARCHAR} ,
            #{item.orderStatus, jdbcType=INTEGER} ,
            #{item.finalStatus, jdbcType=CHAR} ,
            #{item.channelNo, jdbcType=VARCHAR} ,
            #{item.executeRemark, jdbcType=VARCHAR} ,
            #{item.executeCount, jdbcType=INTEGER} ,
            #{item.orderTime, jdbcType=TIMESTAMP} ,
            #{item.lastUpdateTime, jdbcType=TIMESTAMP} ,
            #{item.transType, jdbcType=VARCHAR} ,
            #{item.tradeOrderId, jdbcType=BIGINT} ,
            #{item.mchId, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <update id="update" >
        <![CDATA[
        UPDATE unknown_order SET
	        pay_id = #{payId, jdbcType=BIGINT} ,
	        pay_order_no = #{payOrderNo, jdbcType=VARCHAR} ,
	        order_status = #{orderStatus, jdbcType=INTEGER} ,
	        final_status = #{finalStatus, jdbcType=CHAR} ,
	        channel_no = #{channelNo, jdbcType=VARCHAR} ,
	        execute_remark = #{executeRemark, jdbcType=VARCHAR} ,
	        execute_count = #{executeCount, jdbcType=INTEGER} ,
	        order_time = #{orderTime, jdbcType=TIMESTAMP} ,
	        last_update_time = #{lastUpdateTime, jdbcType=TIMESTAMP} ,
	        trans_type = #{transType, jdbcType=VARCHAR} ,
	        trade_order_id = #{tradeOrderId, jdbcType=BIGINT} ,
	        mch_id = #{mchId, jdbcType=VARCHAR}
        WHERE
	        id = #{id}
    ]]>
    </update>
<update id="updateNotNull" >
			UPDATE unknown_order
				<set>
			       	<if test="null!=payId and ''!=payId ">
	   			 		pay_id = #{payId, jdbcType=BIGINT} ,
	   			   	</if>
			       	<if test="null!=payOrderNo and ''!=payOrderNo ">
	   			 		pay_order_no = #{payOrderNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=orderStatus and ''!=orderStatus ">
	   			 		order_status = #{orderStatus, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=finalStatus and ''!=finalStatus ">
	   			 		final_status = #{finalStatus, jdbcType=CHAR} ,
	   			   	</if>
			       	<if test="null!=channelNo and ''!=channelNo ">
	   			 		channel_no = #{channelNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=executeRemark and ''!=executeRemark ">
	   			 		execute_remark = #{executeRemark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=executeCount and ''!=executeCount ">
	   			 		execute_count = #{executeCount, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=orderTime and ''!=orderTime ">
	   			 		order_time = #{orderTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=lastUpdateTime and ''!=lastUpdateTime ">
	   			 		last_update_time = #{lastUpdateTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=transType and ''!=transType ">
	   			 		trans_type = #{transType, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=tradeOrderId and ''!=tradeOrderId ">
	   			 		trade_order_id = #{tradeOrderId, jdbcType=BIGINT} ,
	   			   	</if>
			       	<if test="null!=mchId and ''!=mchId ">
	   			 		mch_id = #{mchId, jdbcType=VARCHAR} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
    <delete id="delete">
        <![CDATA[
        DELETE FROM unknown_order WHERE
        id = #{id}
    ]]>
    </delete>

    <select id="getById" resultMap="UnknownOrder">
        SELECT <include refid="columns"/>
        <![CDATA[
	        FROM unknown_order
	        WHERE
		        id = #{id}
	    ]]>
    </select>

    <sql id="findWhere">
        <where>
            <choose>
                <when test="queryType==0">
                    <if test="null!=payOrderNo and ''!=payOrderNo ">
                        AND pay_order_no = #{payOrderNo}
                    </if>
                    <if test="null!=finalStatus and ''!=finalStatus ">
                        AND final_status = #{finalStatus}
                    </if>
                    <if test="null!=channelNo and ''!=channelNo ">
                        AND channel_no = #{channelNo}
                    </if>
                    <if test="null!=executeRemark and ''!=executeRemark ">
                        AND execute_remark = #{executeRemark}
                    </if>
                    <if test="null!=transType and ''!=transType ">
                        AND trans_type = #{transType}
                    </if>
                    <if test="null!=mchId and ''!=mchId ">
                        AND mch_id = #{mchId}
                    </if>
                </when>
                <otherwise>
                    <if test="null!=payOrderNo and ''!=payOrderNo">
                        <!-- 	AND pay_order_no LIKE '%'||#{payOrderNo}||'%' oracle -->
                        AND pay_order_no LIKE concat('%',#{payOrderNo},'%')

                    </if>
                    <if test="null!=finalStatus and ''!=finalStatus">
                        <!-- 	AND final_status LIKE '%'||#{finalStatus}||'%' oracle -->
                        AND final_status LIKE concat('%',#{finalStatus},'%')

                    </if>
                    <if test="null!=channelNo and ''!=channelNo">
                        <!-- 	AND channel_no LIKE '%'||#{channelNo}||'%' oracle -->
                        AND channel_no LIKE concat('%',#{channelNo},'%')

                    </if>
                    <if test="null!=executeRemark and ''!=executeRemark">
                        <!-- 	AND execute_remark LIKE '%'||#{executeRemark}||'%' oracle -->
                        AND execute_remark LIKE concat('%',#{executeRemark},'%')

                    </if>
                    <if test="null!=transType and ''!=transType">
                        <!-- 	AND trans_type LIKE '%'||#{transType}||'%' oracle -->
                        AND trans_type LIKE concat('%',#{transType},'%')

                    </if>
                    <if test="null!=mchId and ''!=mchId">
                        <!-- 	AND mch_id LIKE '%'||#{mchId}||'%' oracle -->
                        AND mch_id LIKE concat('%',#{mchId},'%')

                    </if>
                </otherwise>
            </choose>
            <if test="null!=id and ''!=id">
                AND id = #{id}
            </if>
            <if test="null!=payId and ''!=payId">
                AND pay_id = #{payId}
            </if>
            <if test="null!=orderStatus and ''!=orderStatus">
                AND order_status = #{orderStatus}
            </if>
            <if test="null!=executeCount and ''!=executeCount">
                AND execute_count = #{executeCount}
            </if>
            <if test="null!=orderTimeBegin and ''!=orderTimeBegin">
                AND order_time >= #{orderTimeBegin}
            </if>
            <if test="null!=orderTimeEnd and ''!=orderTimeEnd">
                AND order_time &lt; #{orderTimeEnd}
            </if>
            <if test="null!=lastUpdateTimeBegin and ''!=lastUpdateTimeBegin">
                AND last_update_time >= #{lastUpdateTimeBegin}
            </if>
            <if test="null!=lastUpdateTimeEnd and ''!=lastUpdateTimeEnd">
                AND last_update_time &lt; #{lastUpdateTimeEnd}
            </if>
            <if test="null!=tradeOrderId and ''!=tradeOrderId">
                AND trade_order_id = #{tradeOrderId}
            </if>
        </where>
    </sql>

    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM unknown_order <include refid="findWhere"/>
    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="UnknownOrder">
        SELECT <include refid="columns"/> FROM unknown_order
        <include refid="findWhere"/>
        <if test="null!=sortColumns and ''!=sortColumns">
            ORDER BY ${sortColumns}
        </if>
    </select>


    <select id="find" resultMap="UnknownOrder">
        SELECT <include refid="columns"/> FROM unknown_order
        <include refid="findWhere"/>
        <if test="null!=sortColumns">
            ORDER BY ${sortColumns}
        </if>
    </select>

</mapper>
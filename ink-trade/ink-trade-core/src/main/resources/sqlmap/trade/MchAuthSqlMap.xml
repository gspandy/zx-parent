<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MchAuth">

	<resultMap id="MchAuth" type="com.ink.trade.core.po.MchAuth">
		<result property="id" column="id" />
		<result property="mchId" column="mch_id" />
		<result property="payType" column="pay_type" />
		<result property="status" column="status" />
		<result property="remark" column="remark" />
		<result property="ext1" column="ext1" />
		<result property="ext2" column="ext2" />
		<result property="createTime" column="create_time" />
		<result property="operator" column="operator" />
		<result property="lastupdateTime" column="lastupdate_time" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,mch_id ,pay_type ,status ,remark ,ext1 ,ext2 ,create_time ,operator ,lastupdate_time 
	    ]]>
	</sql>

	<insert id="insert">
    <![CDATA[
        INSERT INTO mch_auth (
	        id  ,
	        mch_id  ,
	        pay_type  ,
	        status  ,
	        remark  ,
	        ext1  ,
	        ext2  ,
	        create_time  ,
	        operator  ,
	        lastupdate_time  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{mchId, jdbcType=VARCHAR} ,
        	#{payType, jdbcType=VARCHAR} ,
        	#{status, jdbcType=INTEGER} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{ext1, jdbcType=VARCHAR} ,
        	#{ext2, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{operator, jdbcType=VARCHAR} ,
        	#{lastupdateTime, jdbcType=TIMESTAMP} 
        )
    ]]>
	</insert>
	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO mch_auth (
		<include refid="columns" />
		) values
		<foreach collection="list" item="item" separator=",">
			(
			#{item.id, jdbcType=BIGINT} ,
			#{item.mchId, jdbcType=VARCHAR} ,
			#{item.payType, jdbcType=VARCHAR} ,
			#{item.status, jdbcType=INTEGER} ,
			#{item.remark, jdbcType=VARCHAR} ,
			#{item.ext1, jdbcType=VARCHAR} ,
			#{item.ext2, jdbcType=VARCHAR} ,
			#{item.createTime, jdbcType=TIMESTAMP} ,
			#{item.operator, jdbcType=VARCHAR} ,
			#{item.lastupdateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>

	<update id="update">
    <![CDATA[
        UPDATE mch_auth SET
	        mch_id = #{mchId, jdbcType=VARCHAR} ,
	        pay_type = #{payType, jdbcType=VARCHAR} ,
	        status = #{status, jdbcType=INTEGER} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        ext1 = #{ext1, jdbcType=VARCHAR} ,
	        ext2 = #{ext2, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        operator = #{operator, jdbcType=VARCHAR} ,
	        lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>
<update id="updateNotNull" >
			UPDATE mch_auth
				<set>
			       	<if test="null!=mchId and ''!=mchId ">
	   			 		mch_id = #{mchId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=payType and ''!=payType ">
	   			 		pay_type = #{payType, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=status and ''!=status ">
	   			 		status = #{status, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		remark = #{remark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=ext1 and ''!=ext1 ">
	   			 		ext1 = #{ext1, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=ext2 and ''!=ext2 ">
	   			 		ext2 = #{ext2, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=operator and ''!=operator ">
	   			 		operator = #{operator, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=lastupdateTime and ''!=lastupdateTime ">
	   			 		lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
	<delete id="delete">
    <![CDATA[
        DELETE FROM mch_auth WHERE
        id = #{id} 
    ]]>
	</delete>

	<select id="getById" resultMap="MchAuth">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM mch_auth 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	<select id="getByMchIdPayType" resultMap="MchAuth">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM mch_auth 
	        WHERE 
		        mch_id = #{mchId} 
		        and
		        pay_type=#{payType}
		        and
		        status=1
	    ]]>
	</select>
	<sql id="findWhere">
		<where>
			<choose>
				<when test="queryType==0">
					<if test="null!=mchId and ''!=mchId ">
						AND mch_id = #{mchId}
					</if>
					<if test="null!=payType and ''!=payType ">
						AND pay_type = #{payType}
					</if>
					<if test="null!=remark and ''!=remark ">
						AND remark = #{remark}
					</if>
					<if test="null!=ext1 and ''!=ext1 ">
						AND ext1 = #{ext1}
					</if>
					<if test="null!=ext2 and ''!=ext2 ">
						AND ext2 = #{ext2}
					</if>
					<if test="null!=operator and ''!=operator ">
						AND operator = #{operator}
					</if>
				</when>
				<otherwise>
					<if test="null!=mchId and ''!=mchId">
						<!-- AND mch_id LIKE '%'||#{mchId}||'%' oracle -->
						AND mch_id LIKE concat('%',#{mchId},'%')

					</if>
					<if test="null!=payType and ''!=payType">
						<!-- AND pay_type LIKE '%'||#{payType}||'%' oracle -->
						AND pay_type LIKE concat('%',#{payType},'%')

					</if>
					<if test="null!=remark and ''!=remark">
						<!-- AND remark LIKE '%'||#{remark}||'%' oracle -->
						AND remark LIKE concat('%',#{remark},'%')

					</if>
					<if test="null!=ext1 and ''!=ext1">
						<!-- AND ext1 LIKE '%'||#{ext1}||'%' oracle -->
						AND ext1 LIKE concat('%',#{ext1},'%')

					</if>
					<if test="null!=ext2 and ''!=ext2">
						<!-- AND ext2 LIKE '%'||#{ext2}||'%' oracle -->
						AND ext2 LIKE concat('%',#{ext2},'%')

					</if>
					<if test="null!=operator and ''!=operator">
						<!-- AND operator LIKE '%'||#{operator}||'%' oracle -->
						AND operator LIKE concat('%',#{operator},'%')

					</if>
				</otherwise>
			</choose>
			<if test="null!=id and ''!=id">
				AND id = #{id}
			</if>
			<if test="null!=status and ''!=status">
				AND status = #{status}
			</if>
			<if test="null!=createTimeBegin and ''!=createTimeBegin">
				AND create_time >= #{createTimeBegin}
			</if>
			<if test="null!=createTimeEnd and ''!=createTimeEnd">
				AND create_time &lt; #{createTimeEnd}
			</if>
			<if test="null!=lastupdateTimeBegin and ''!=lastupdateTimeBegin">
				AND lastupdate_time >= #{lastupdateTimeBegin}
			</if>
			<if test="null!=lastupdateTimeEnd and ''!=lastupdateTimeEnd">
				AND lastupdate_time &lt; #{lastupdateTimeEnd}
			</if>
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(*) FROM mch_auth
		<include refid="findWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 #offset#,#pageSize#,#lastRows# 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findPage" resultMap="MchAuth">
		SELECT
		<include refid="columns" />
		FROM mch_auth
		<include refid="findWhere" />
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
			limit #{offset} , #{limit}
		</if>


	</select>


	<select id="find" resultMap="MchAuth">
		SELECT
		<include refid="columns" />
		FROM mch_auth
		<include refid="findWhere" />
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>

</mapper>
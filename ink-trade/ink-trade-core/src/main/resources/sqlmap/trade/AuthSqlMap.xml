<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Auth">

    <resultMap id="Auth" type="com.ink.trade.core.po.Auth">
        <result property="id" column="id"/>
        <result property="cardNo" column="card_no"/>
        <result property="cardType" column="card_type"/>
        <result property="phoneNo" column="phone_no"/>
        <result property="idType" column="id_type"/>
        <result property="idNo" column="id_no"/>
        <result property="userName" column="user_name"/>
        <result property="bankShort" column="bank_short"/>
        <result property="bankName" column="bank_name"/>
        <result property="status" column="status"/>
        <result property="version" column="version"/>
        <result property="isDelete" column="is_delete"/>
        <result property="remark" column="remark"/>
        <result property="mchId" column="mch_id"/>
        <result property="lastupdateTime" column="lastupdate_time"/>
        <result property="reqId" column="req_id"/>
        <result property="userId" column="user_id"/>
         <result property="createTime" column="create_time"/>
         <result property="payType" column="pay_type"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,card_no ,card_type ,phone_no ,id_type ,id_no ,user_name ,bank_short ,bank_name ,status ,version ,is_delete ,remark ,mch_id ,lastupdate_time ,req_id ,user_id,create_time,pay_type 
	    ]]>
	</sql>
    <!-- 根据用户编号和卡号查询用户绑卡关系-->
    <select id="getByUserIdAndCardNo" resultMap="Auth">
        SELECT <include refid="columns"/>
        <![CDATA[
	        FROM auth
	        WHERE
		        mch_id = #{mchId}
		    AND user_id = #{userId}
		    AND card_no = #{cardNo}
	    ]]>
    </select>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    <![CDATA[
        INSERT INTO auth (
	        id  ,
	        card_no  ,
	        card_type  ,
	        phone_no  ,
	        id_type  ,
	        id_no  ,
	        user_name  ,
	        bank_short  ,
	        bank_name  ,
	        status  ,
	        version  ,
	        is_delete  ,
	        remark  ,
	        mch_id  ,
	        lastupdate_time  ,
	        req_id  ,
	        user_id ,
	        create_time,
	        pay_type
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{cardNo, jdbcType=VARCHAR} ,
        	#{cardType, jdbcType=CHAR} ,
        	#{phoneNo, jdbcType=VARCHAR} ,
        	#{idType, jdbcType=CHAR} ,
        	#{idNo, jdbcType=VARCHAR} ,
        	#{userName, jdbcType=VARCHAR} ,
        	#{bankShort, jdbcType=VARCHAR} ,
        	#{bankName, jdbcType=VARCHAR} ,
        	#{status, jdbcType=BIT} ,
        	#{version, jdbcType=BIT} ,
        	#{isDelete, jdbcType=BIT} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{mchId, jdbcType=VARCHAR} ,
        	#{lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{reqId, jdbcType=VARCHAR} ,
        	#{userId, jdbcType=VARCHAR},
        	#{createTime, jdbcType=TIMESTAMP},
        	#{payType, jdbcType=VARCHAR}
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO auth ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.cardNo, jdbcType=VARCHAR} ,
        	#{item.cardType, jdbcType=CHAR} ,
        	#{item.phoneNo, jdbcType=VARCHAR} ,
        	#{item.idType, jdbcType=CHAR} ,
        	#{item.idNo, jdbcType=VARCHAR} ,
        	#{item.userName, jdbcType=VARCHAR} ,
        	#{item.bankShort, jdbcType=VARCHAR} ,
        	#{item.bankName, jdbcType=VARCHAR} ,
        	#{item.status, jdbcType=BIT} ,
        	#{item.version, jdbcType=BIT} ,
        	#{item.isDelete, jdbcType=BIT} ,
        	#{item.remark, jdbcType=VARCHAR} ,
        	#{item.mchId, jdbcType=VARCHAR} ,
        	#{item.lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{item.reqId, jdbcType=VARCHAR} ,
        	#{item.userId, jdbcType=VARCHAR},
        	#{item.createTime, jdbcType=TIMESTAMP},
        	#{item.payType,jdbcType=VARCHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE auth SET
	        card_no = #{cardNo, jdbcType=VARCHAR} ,
	        card_type = #{cardType, jdbcType=CHAR} ,
	        phone_no = #{phoneNo, jdbcType=VARCHAR} ,
	        id_type = #{idType, jdbcType=CHAR} ,
	        id_no = #{idNo, jdbcType=VARCHAR} ,
	        user_name = #{userName, jdbcType=VARCHAR} ,
	        bank_short = #{bankShort, jdbcType=VARCHAR} ,
	        bank_name = #{bankName, jdbcType=VARCHAR} ,
	        status = #{status, jdbcType=BIT} ,
	        version = #{version, jdbcType=BIT} ,
	        is_delete = #{isDelete, jdbcType=BIT} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        mch_id = #{mchId, jdbcType=VARCHAR} ,
	        lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	        req_id = #{reqId, jdbcType=VARCHAR} ,
	        user_id = #{userId, jdbcType=VARCHAR},
	        pay_type=#{payType,jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>
<update id="updateNotNull" >
			UPDATE auth
				<set>
			       	<if test="null!=cardNo and ''!=cardNo ">
	   			 		card_no = #{cardNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=cardType and ''!=cardType ">
	   			 		card_type = #{cardType, jdbcType=CHAR} ,
	   			   	</if>
			       	<if test="null!=phoneNo and ''!=phoneNo ">
	   			 		phone_no = #{phoneNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=idType and ''!=idType ">
	   			 		id_type = #{idType, jdbcType=CHAR} ,
	   			   	</if>
			       	<if test="null!=idNo and ''!=idNo ">
	   			 		id_no = #{idNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=userName and ''!=userName ">
	   			 		user_name = #{userName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankShort and ''!=bankShort ">
	   			 		bank_short = #{bankShort, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankName and ''!=bankName ">
	   			 		bank_name = #{bankName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=status and ''!=status ">
	   			 		status = #{status, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=version and ''!=version ">
	   			 		version = #{version, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=isDelete and ''!=isDelete ">
	   			 		is_delete = #{isDelete, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		remark = #{remark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=mchId and ''!=mchId ">
	   			 		mch_id = #{mchId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=lastupdateTime and ''!=lastupdateTime ">
	   			 		lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=reqId and ''!=reqId ">
	   			 		req_id = #{reqId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=userId and ''!=userId ">
	   			 		user_id = #{userId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=payType and ''!=payType ">
	   			 		pay_type = #{payType, jdbcType=CHAR} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
    <delete id="delete">
    <![CDATA[
        DELETE FROM auth WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="Auth">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM auth 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=cardNo and ''!=cardNo ">
	   			 		AND card_no = #{cardNo}
	   			   	</if>
			       	<if test="null!=cardType and ''!=cardType ">
	   			 		AND card_type = #{cardType}
	   			   	</if>
			       	<if test="null!=phoneNo and ''!=phoneNo ">
	   			 		AND phone_no = #{phoneNo}
	   			   	</if>
			       	<if test="null!=idNo and ''!=idNo ">
	   			 		AND id_no = #{idNo}
	   			   	</if>
			       	<if test="null!=userName and ''!=userName ">
	   			 		AND user_name = #{userName}
	   			   	</if>
			       	<if test="null!=bankShort and ''!=bankShort ">
	   			 		AND bank_short = #{bankShort}
	   			   	</if>
			       	<if test="null!=bankName and ''!=bankName ">
	   			 		AND bank_name = #{bankName}
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		AND remark = #{remark}
	   			   	</if>
	   			   	<if test="null!=payType and ''!=payType ">
	   			 		AND pay_type = #{payType}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=cardNo and ''!=cardNo">
				    <!-- 	AND card_no LIKE '%'||#{cardNo}||'%' oracle -->
			   			AND card_no LIKE concat('%',#{cardNo},'%')
			   			
			   		</if>
				    <if test="null!=cardType and ''!=cardType">
				    <!-- 	AND card_type LIKE '%'||#{cardType}||'%' oracle -->
			   			AND card_type LIKE concat('%',#{cardType},'%')
			   			
			   		</if>
				    <if test="null!=phoneNo and ''!=phoneNo">
				    <!-- 	AND phone_no LIKE '%'||#{phoneNo}||'%' oracle -->
			   			AND phone_no LIKE concat('%',#{phoneNo},'%')
			   			
			   		</if>
				    <if test="null!=idNo and ''!=idNo">
				    <!-- 	AND id_no LIKE '%'||#{idNo}||'%' oracle -->
			   			AND id_no LIKE concat('%',#{idNo},'%')
			   			
			   		</if>
				    <if test="null!=userName and ''!=userName">
				    <!-- 	AND user_name LIKE '%'||#{userName}||'%' oracle -->
			   			AND user_name LIKE concat('%',#{userName},'%')
			   			
			   		</if>
				    <if test="null!=bankShort and ''!=bankShort">
				    <!-- 	AND bank_short LIKE '%'||#{bankShort}||'%' oracle -->
			   			AND bank_short LIKE concat('%',#{bankShort},'%')
			   			
			   		</if>
				    <if test="null!=bankName and ''!=bankName">
				    <!-- 	AND bank_name LIKE '%'||#{bankName}||'%' oracle -->
			   			AND bank_name LIKE concat('%',#{bankName},'%')
			   			
			   		</if>
				    <if test="null!=remark and ''!=remark">
				    <!-- 	AND remark LIKE '%'||#{remark}||'%' oracle -->
			   			AND remark LIKE concat('%',#{remark},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=idType and ''!=idType">
			    AND id_type = #{idType}
			</if>
		   	<if test="null!=status and ''!=status">
			    AND status = #{status}
			</if>
		   	<if test="null!=version and ''!=version">
			    AND version = #{version}
			</if>
		   	<if test="null!=isDelete and ''!=isDelete or 0==isDelete">
			    AND is_delete = #{isDelete}
			</if>
		   	<if test="null!=mchId and ''!=mchId">
			    AND mch_id = #{mchId}
			</if>
		   	<if test="null!=lastupdateTimeBegin and ''!=lastupdateTimeBegin">
		   		AND lastupdate_time >= #{lastupdateTimeBegin}
		   	</if>
		   	<if test="null!=lastupdateTimeEnd and ''!=lastupdateTimeEnd">
		   		AND lastupdate_time &lt; #{lastupdateTimeEnd}
		   	</if>
		   	<if test="null!=reqId and ''!=reqId">
			    AND req_id = #{reqId}
			</if>
		   	<if test="null!=userId and ''!=userId">
			    AND user_id = #{userId}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM auth <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="Auth">
    	SELECT <include refid="columns"/> FROM auth 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
	          limit #{offset} , #{limit} 
		</if>
		
		
    </select>

	
	<select id="find" resultMap="Auth">
	    SELECT <include refid="columns"/> FROM auth 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	
	<insert id="saveOrUpdate" keyProperty="id" useGeneratedKeys="true">
    <![CDATA[
        INSERT INTO auth (
	        id  ,
	        card_no  ,
	        card_type  ,
	        phone_no  ,
	        id_type  ,
	        id_no  ,
	        user_name  ,
	        bank_short  ,
	        bank_name  ,
	        status  ,
	        version  ,
	        is_delete  ,
	        remark  ,
	        mch_id  ,
	        lastupdate_time  ,
	        req_id  ,
	        user_id ,
	        create_time,
	        pay_type
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{cardNo, jdbcType=VARCHAR} ,
        	#{cardType, jdbcType=CHAR} ,
        	#{phoneNo, jdbcType=VARCHAR} ,
        	#{idType, jdbcType=CHAR} ,
        	#{idNo, jdbcType=VARCHAR} ,
        	#{userName, jdbcType=VARCHAR} ,
        	#{bankShort, jdbcType=VARCHAR} ,
        	#{bankName, jdbcType=VARCHAR} ,
        	#{status, jdbcType=BIT} ,
        	#{version, jdbcType=BIT} ,
        	#{isDelete, jdbcType=BIT} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{mchId, jdbcType=VARCHAR} ,
        	#{lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{reqId, jdbcType=VARCHAR} ,
        	#{userId, jdbcType=VARCHAR},
        	#{createTime, jdbcType=TIMESTAMP},
        	#{payType, jdbcType=VARCHAR}
        ) ON DUPLICATE KEY 
        UPDATE 
	        card_no = #{cardNo, jdbcType=VARCHAR} ,
	        phone_no = #{phoneNo, jdbcType=VARCHAR} ,
	        version = #{version, jdbcType=BIT} ,
	        is_delete = #{isDelete, jdbcType=BIT} ,
	        mch_id = #{mchId, jdbcType=VARCHAR} ,
	        lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	        user_id = #{userId, jdbcType=VARCHAR}
    ]]>
    </insert>
</mapper>


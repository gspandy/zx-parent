<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MchBank">

	<resultMap id="MchBank" type="com.ink.trade.core.po.MchBank">
		<result property="id" column="id" />
		<result property="mchId" column="mch_id" />
		<result property="bankName" column="bank_name" />
		<result property="bankShort" column="bank_short" />
		<result property="isDelete" column="is_delete" />
		<result property="createTime" column="create_time" />
		<result property="lastupdateTime" column="lastupdate_time" />
		<result property="operator" column="operator" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,mch_id ,bank_name ,bank_short ,is_delete ,create_time ,lastupdate_time ,operator 
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO mch_bank (
	        id  ,
	        mch_id  ,
	        bank_name  ,
	        bank_short  ,
	        is_delete  ,
	        create_time  ,
	        lastupdate_time  ,
	        operator  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{mchId, jdbcType=VARCHAR} ,
        	#{bankName, jdbcType=VARCHAR} ,
        	#{bankShort, jdbcType=VARCHAR} ,
        	#{isDelete, jdbcType=CHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{operator, jdbcType=VARCHAR} 
        )
    ]]>
	</insert>
	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO mch_bank (
		<include refid="columns" />
		) values
		<foreach collection="list" item="item" separator=",">
			(
			#{item.id,
			jdbcType=BIGINT} ,
			#{item.mchId, jdbcType=VARCHAR} ,
			#{item.bankName,
			jdbcType=VARCHAR} ,
			#{item.bankShort, jdbcType=VARCHAR} ,
			#{item.isDelete, jdbcType=CHAR} ,
			#{item.createTime,
			jdbcType=TIMESTAMP} ,
			#{item.lastupdateTime, jdbcType=TIMESTAMP} ,
			#{item.operator, jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<update id="update">
     UPDATE mch_bank SET
	        mch_id = #{mchId, jdbcType=VARCHAR} ,
	        bank_name = #{bankName, jdbcType=VARCHAR} ,
	        bank_short = #{bankShort, jdbcType=VARCHAR} ,
	        is_delete = #{isDelete, jdbcType=CHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	        operator = #{operator, jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
	</update>
<update id="updateNotNull" >
			UPDATE mch_bank
				<set>
			       	<if test="null!=mchId and ''!=mchId ">
	   			 		mch_id = #{mchId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankName and ''!=bankName ">
	   			 		bank_name = #{bankName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankShort and ''!=bankShort ">
	   			 		bank_short = #{bankShort, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=isDelete and ''!=isDelete ">
	   			 		is_delete = #{isDelete, jdbcType=CHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=lastupdateTime and ''!=lastupdateTime ">
	   			 		lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=operator and ''!=operator ">
	   			 		operator = #{operator, jdbcType=VARCHAR} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
	<delete id="delete">
    <![CDATA[
        DELETE FROM mch_bank WHERE
        id = #{id} 
    ]]>
	</delete>

	<select id="getById" resultMap="MchBank">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM mch_bank 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	<select id="getByMchIdBankShort" resultMap="MchBank">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM mch_bank 
	        WHERE 
		         mch_id = #{mchId} AND bank_short = #{bankShort}
	    ]]>
	</select>
	<sql id="findWhere">
		<where>
			<choose>
				<when test="queryType==0">
					<if test="null!=mchId and ''!=mchId ">
						AND mch_id = #{mchId}
					</if>
					<if test="null!=bankName and ''!=bankName ">
						AND bank_name = #{bankName}
					</if>
					<if test="null!=bankShort and ''!=bankShort ">
						AND bank_short = #{bankShort}
					</if>
					<if test="null!=isDelete and ''!=isDelete ">
						AND is_delete = #{isDelete}
					</if>
					<if test="null!=operator and ''!=operator ">
						AND operator = #{operator}
					</if>
				</when>
				<otherwise>
					<if test="null!=mchId and ''!=mchId">
						<!-- AND mch_id LIKE '%'||#{mchId}||'%' oracle -->
						AND mch_id LIKE concat('%',#{mchId},'%')

					</if>
					<if test="null!=bankName and ''!=bankName">
						<!-- AND bank_name LIKE '%'||#{bankName}||'%' oracle -->
						AND bank_name LIKE concat('%',#{bankName},'%')

					</if>
					<if test="null!=bankShort and ''!=bankShort">
						<!-- AND bank_short LIKE '%'||#{bankShort}||'%' oracle -->
						AND bank_short LIKE concat('%',#{bankShort},'%')

					</if>
					<if test="null!=isDelete and ''!=isDelete">
						<!-- AND is_delete LIKE '%'||#{isDelete}||'%' oracle -->
						AND is_delete LIKE concat('%',#{isDelete},'%')

					</if>
					<if test="null!=operator and ''!=operator">
						<!-- AND operator LIKE '%'||#{operator}||'%' oracle -->
						AND operator LIKE concat('%',#{operator},'%')

					</if>
				</otherwise>
			</choose>
			<if test="null!=id and ''!=id">
				AND id = #{id}
			</if>
			<if test="null!=createTimeBegin and ''!=createTimeBegin">
				AND create_time >= #{createTimeBegin}
			</if>
			<if test="null!=createTimeEnd and ''!=createTimeEnd">
				AND create_time &lt; #{createTimeEnd}
			</if>
			<if test="null!=lastupdateTimeBegin and ''!=lastupdateTimeBegin">
				AND lastupdate_time >= #{lastupdateTimeBegin}
			</if>
			<if test="null!=lastupdateTimeEnd and ''!=lastupdateTimeEnd">
				AND lastupdate_time &lt; #{lastupdateTimeEnd}
			</if>
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(*) FROM mch_bank
		<include refid="findWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 #offset#,#pageSize#,#lastRows# 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findPage" resultMap="MchBank">
		SELECT
		<include refid="columns" />
		FROM mch_bank
		<include refid="findWhere" />
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>


	<select id="find" resultMap="MchBank">
		SELECT
		<include refid="columns" />
		FROM mch_bank
		<include refid="findWhere" />
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>

</mapper>
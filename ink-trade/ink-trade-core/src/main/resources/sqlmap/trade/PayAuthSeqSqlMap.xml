<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PayAuthSeq">

    <resultMap id="PayAuthSeq" type="com.ink.trade.core.po.PayAuthSeq">
        <result property="id" column="id"/>
        <result property="accountId" column="account_id"/>
        <result property="accountName" column="account_name"/>
        <result property="accountId2" column="account_id2"/>
        <result property="accountName2" column="account_name2"/>
        <result property="cardName" column="card_name"/>
        <result property="cardNum" column="card_num"/>
        <result property="priority" column="priority"/>
        <result property="cardCreateAddress" column="card_create_address"/>
        <result property="cardType" column="card_type"/>
        <result property="cardHolder" column="card_holder"/>
        <result property="credentialType" column="credential_type"/>
        <result property="payAuthId" column="pay_auth_id"/>
        <result property="asileAuthStartDate" column="asile_auth_start_date"/>
        <result property="asileAuthEndDate" column="asile_auth_end_date"/>
        <result property="credentialNum" column="credential_num"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="createrId" column="creater_id"/>
        <result property="createrName" column="creater_name"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,account_id ,account_name ,account_id2 ,account_name2 ,card_name ,card_num ,priority ,card_create_address ,card_type ,card_holder ,credential_type ,pay_auth_id ,asile_auth_start_date ,asile_auth_end_date ,credential_num ,remark ,create_time ,creater_id ,creater_name ,is_delete 
	    ]]>
	</sql>
	
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    <![CDATA[
        INSERT INTO pay_auth_seq (
	        id  ,
	        account_id  ,
	        account_name  ,
	        account_id2  ,
	        account_name2  ,
	        card_name  ,
	        card_num  ,
	        priority  ,
	        card_create_address  ,
	        card_type  ,
	        card_holder  ,
	        credential_type  ,
	        pay_auth_id  ,
	        asile_auth_start_date  ,
	        asile_auth_end_date  ,
	        credential_num  ,
	        remark  ,
	        create_time  ,
	        creater_id  ,
	        creater_name  ,
	        is_delete  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{accountId, jdbcType=BIGINT} ,
        	#{accountName, jdbcType=VARCHAR} ,
        	#{accountId2, jdbcType=VARCHAR} ,
        	#{accountName2, jdbcType=VARCHAR} ,
        	#{cardName, jdbcType=VARCHAR} ,
        	#{cardNum, jdbcType=VARCHAR} ,
        	#{priority, jdbcType=TINYINT} ,
        	#{cardCreateAddress, jdbcType=VARCHAR} ,
        	#{cardType, jdbcType=CHAR} ,
        	#{cardHolder, jdbcType=VARCHAR} ,
        	#{credentialType, jdbcType=TINYINT} ,
        	#{payAuthId, jdbcType=BIGINT} ,
        	#{asileAuthStartDate, jdbcType=TIMESTAMP} ,
        	#{asileAuthEndDate, jdbcType=TIMESTAMP} ,
        	#{credentialNum, jdbcType=VARCHAR} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{createrId, jdbcType=BIGINT} ,
        	#{createrName, jdbcType=VARCHAR} ,
        	#{isDelete, jdbcType=CHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO pay_auth_seq ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.accountId, jdbcType=BIGINT} ,
        	#{item.accountName, jdbcType=VARCHAR} ,
        	#{item.accountId2, jdbcType=VARCHAR} ,
        	#{item.accountName2, jdbcType=VARCHAR} ,
        	#{item.cardName, jdbcType=VARCHAR} ,
        	#{item.cardNum, jdbcType=VARCHAR} ,
        	#{item.priority, jdbcType=TINYINT} ,
        	#{item.cardCreateAddress, jdbcType=VARCHAR} ,
        	#{item.cardType, jdbcType=CHAR} ,
        	#{item.cardHolder, jdbcType=VARCHAR} ,
        	#{item.credentialType, jdbcType=TINYINT} ,
        	#{item.payAuthId, jdbcType=BIGINT} ,
        	#{item.asileAuthStartDate, jdbcType=TIMESTAMP} ,
        	#{item.asileAuthEndDate, jdbcType=TIMESTAMP} ,
        	#{item.credentialNum, jdbcType=VARCHAR} ,
        	#{item.remark, jdbcType=VARCHAR} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.createrId, jdbcType=BIGINT} ,
        	#{item.createrName, jdbcType=VARCHAR} ,
        	#{item.isDelete, jdbcType=CHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE pay_auth_seq SET
	        account_id = #{accountId, jdbcType=BIGINT} ,
	        account_name = #{accountName, jdbcType=VARCHAR} ,
	        account_id2 = #{accountId2, jdbcType=VARCHAR} ,
	        account_name2 = #{accountName2, jdbcType=VARCHAR} ,
	        card_name = #{cardName, jdbcType=VARCHAR} ,
	        card_num = #{cardNum, jdbcType=VARCHAR} ,
	        priority = #{priority, jdbcType=TINYINT} ,
	        card_create_address = #{cardCreateAddress, jdbcType=VARCHAR} ,
	        card_type = #{cardType, jdbcType=CHAR} ,
	        card_holder = #{cardHolder, jdbcType=VARCHAR} ,
	        credential_type = #{credentialType, jdbcType=TINYINT} ,
	        pay_auth_id = #{payAuthId, jdbcType=BIGINT} ,
	        asile_auth_start_date = #{asileAuthStartDate, jdbcType=TIMESTAMP} ,
	        asile_auth_end_date = #{asileAuthEndDate, jdbcType=TIMESTAMP} ,
	        credential_num = #{credentialNum, jdbcType=VARCHAR} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        creater_id = #{createrId, jdbcType=BIGINT} ,
	        creater_name = #{createrName, jdbcType=VARCHAR} ,
	        is_delete = #{isDelete, jdbcType=CHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM pay_auth_seq WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="PayAuthSeq">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM pay_auth_seq 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=accountName and ''!=accountName ">
	   			 		AND account_name = #{accountName}
	   			   	</if>
			       	<if test="null!=accountId2 and ''!=accountId2 ">
	   			 		AND account_id2 = #{accountId2}
	   			   	</if>
			       	<if test="null!=accountName2 and ''!=accountName2 ">
	   			 		AND account_name2 = #{accountName2}
	   			   	</if>
			       	<if test="null!=cardName and ''!=cardName ">
	   			 		AND card_name = #{cardName}
	   			   	</if>
			       	<if test="null!=cardNum and ''!=cardNum ">
	   			 		AND card_num = #{cardNum}
	   			   	</if>
			       	<if test="null!=cardCreateAddress and ''!=cardCreateAddress ">
	   			 		AND card_create_address = #{cardCreateAddress}
	   			   	</if>
			       	<if test="null!=cardType and ''!=cardType ">
	   			 		AND card_type = #{cardType}
	   			   	</if>
			       	<if test="null!=cardHolder and ''!=cardHolder ">
	   			 		AND card_holder = #{cardHolder}
	   			   	</if>
			       	<if test="null!=credentialNum and ''!=credentialNum ">
	   			 		AND credential_num = #{credentialNum}
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		AND remark = #{remark}
	   			   	</if>
			       	<if test="null!=createrName and ''!=createrName ">
	   			 		AND creater_name = #{createrName}
	   			   	</if>
			       	<if test="null!=isDelete and ''!=isDelete ">
	   			 		AND is_delete = #{isDelete}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=accountName and ''!=accountName">
				    <!-- 	AND account_name LIKE '%'||#{accountName}||'%' oracle -->
			   			AND account_name LIKE concat('%',#{accountName},'%')
			   			
			   		</if>
				    <if test="null!=accountId2 and ''!=accountId2">
				    <!-- 	AND account_id2 LIKE '%'||#{accountId2}||'%' oracle -->
			   			AND account_id2 LIKE concat('%',#{accountId2},'%')
			   			
			   		</if>
				    <if test="null!=accountName2 and ''!=accountName2">
				    <!-- 	AND account_name2 LIKE '%'||#{accountName2}||'%' oracle -->
			   			AND account_name2 LIKE concat('%',#{accountName2},'%')
			   			
			   		</if>
				    <if test="null!=cardName and ''!=cardName">
				    <!-- 	AND card_name LIKE '%'||#{cardName}||'%' oracle -->
			   			AND card_name LIKE concat('%',#{cardName},'%')
			   			
			   		</if>
				    <if test="null!=cardNum and ''!=cardNum">
				    <!-- 	AND card_num LIKE '%'||#{cardNum}||'%' oracle -->
			   			AND card_num LIKE concat('%',#{cardNum},'%')
			   			
			   		</if>
				    <if test="null!=cardCreateAddress and ''!=cardCreateAddress">
				    <!-- 	AND card_create_address LIKE '%'||#{cardCreateAddress}||'%' oracle -->
			   			AND card_create_address LIKE concat('%',#{cardCreateAddress},'%')
			   			
			   		</if>
				    <if test="null!=cardType and ''!=cardType">
				    <!-- 	AND card_type LIKE '%'||#{cardType}||'%' oracle -->
			   			AND card_type LIKE concat('%',#{cardType},'%')
			   			
			   		</if>
				    <if test="null!=cardHolder and ''!=cardHolder">
				    <!-- 	AND card_holder LIKE '%'||#{cardHolder}||'%' oracle -->
			   			AND card_holder LIKE concat('%',#{cardHolder},'%')
			   			
			   		</if>
				    <if test="null!=credentialNum and ''!=credentialNum">
				    <!-- 	AND credential_num LIKE '%'||#{credentialNum}||'%' oracle -->
			   			AND credential_num LIKE concat('%',#{credentialNum},'%')
			   			
			   		</if>
				    <if test="null!=remark and ''!=remark">
				    <!-- 	AND remark LIKE '%'||#{remark}||'%' oracle -->
			   			AND remark LIKE concat('%',#{remark},'%')
			   			
			   		</if>
				    <if test="null!=createrName and ''!=createrName">
				    <!-- 	AND creater_name LIKE '%'||#{createrName}||'%' oracle -->
			   			AND creater_name LIKE concat('%',#{createrName},'%')
			   			
			   		</if>
				    <if test="null!=isDelete and ''!=isDelete">
				    <!-- 	AND is_delete LIKE '%'||#{isDelete}||'%' oracle -->
			   			AND is_delete LIKE concat('%',#{isDelete},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=accountId and ''!=accountId">
			    AND account_id = #{accountId}
			</if>
		   	<if test="null!=priority and ''!=priority">
			    AND priority = #{priority}
			</if>
		   	<if test="null!=credentialType and ''!=credentialType">
			    AND credential_type = #{credentialType}
			</if>
		   	<if test="null!=payAuthId and ''!=payAuthId">
			    AND pay_auth_id = #{payAuthId}
			</if>
		   	<if test="null!=asileAuthStartDateBegin and ''!=asileAuthStartDateBegin">
		   		AND asile_auth_start_date >= #{asileAuthStartDateBegin}
		   	</if>
		   	<if test="null!=asileAuthStartDateEnd and ''!=asileAuthStartDateEnd">
		   		AND asile_auth_start_date &lt; #{asileAuthStartDateEnd}
		   	</if>
		   	<if test="null!=asileAuthEndDateBegin and ''!=asileAuthEndDateBegin">
		   		AND asile_auth_end_date >= #{asileAuthEndDateBegin}
		   	</if>
		   	<if test="null!=asileAuthEndDateEnd and ''!=asileAuthEndDateEnd">
		   		AND asile_auth_end_date &lt; #{asileAuthEndDateEnd}
		   	</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND create_time &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=createrId and ''!=createrId">
			    AND creater_id = #{createrId}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM pay_auth_seq <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="PayAuthSeq">
    	SELECT <include refid="columns"/> FROM pay_auth_seq 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
	          limit #{offset} , #{limit} 
		</if>
		
		
    </select>

	
	<select id="find" resultMap="PayAuthSeq">
	    SELECT <include refid="columns"/> FROM pay_auth_seq 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>


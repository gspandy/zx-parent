<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RouteSwitchLog">

    <resultMap id="RouteSwitchLog" type="com.ink.route.core.po.RouteSwitchLog">
        <result property="id" column="id"/>
        <result property="routeName" column="route_name"/>
        <result property="routeCode" column="route_code"/>
        <result property="beforeSwithStatus" column="before_swith_status"/>
        <result property="afterSwithStatus" column="after_swith_status"/>
        <result property="remark" column="remark"/>
        <result property="payType" column="pay_type"/>
        <result property="createTime" column="create_time"/>
        <result property="createrId" column="creater_id"/>
        <result property="createrName" column="creater_name"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,route_name ,route_code ,before_swith_status ,after_swith_status ,remark ,pay_type ,create_time ,creater_id ,creater_name ,is_delete 
	    ]]>
	</sql>
	
    <insert id="insert" >
    <![CDATA[
        INSERT INTO route_switch_log (
	        id  ,
	        route_name  ,
	        route_code  ,
	        before_swith_status  ,
	        after_swith_status  ,
	        remark  ,
	        pay_type  ,
	        create_time  ,
	        creater_id  ,
	        creater_name  ,
	        is_delete  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{routeName, jdbcType=VARCHAR} ,
        	#{routeCode, jdbcType=CHAR} ,
        	#{beforeSwithStatus, jdbcType=CHAR} ,
        	#{afterSwithStatus, jdbcType=CHAR} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{payType, jdbcType=CHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{createrId, jdbcType=BIGINT} ,
        	#{createrName, jdbcType=VARCHAR} ,
        	#{isDelete, jdbcType=CHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO route_switch_log ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.routeName, jdbcType=VARCHAR} ,
        	#{item.routeCode, jdbcType=CHAR} ,
        	#{item.beforeSwithStatus, jdbcType=CHAR} ,
        	#{item.afterSwithStatus, jdbcType=CHAR} ,
        	#{item.remark, jdbcType=VARCHAR} ,
        	#{item.payType, jdbcType=CHAR} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.createrId, jdbcType=BIGINT} ,
        	#{item.createrName, jdbcType=VARCHAR} ,
        	#{item.isDelete, jdbcType=CHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE route_switch_log SET
	        route_name = #{routeName, jdbcType=VARCHAR} ,
	        route_code = #{routeCode, jdbcType=CHAR} ,
	        before_swith_status = #{beforeSwithStatus, jdbcType=CHAR} ,
	        after_swith_status = #{afterSwithStatus, jdbcType=CHAR} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        pay_type = #{payType, jdbcType=CHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        creater_id = #{createrId, jdbcType=BIGINT} ,
	        creater_name = #{createrName, jdbcType=VARCHAR} ,
	        is_delete = #{isDelete, jdbcType=CHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM route_switch_log WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="RouteSwitchLog">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM route_switch_log 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=routeName and ''!=routeName ">
	   			 		AND route_name = #{routeName}
	   			   	</if>
			       	<if test="null!=routeCode and ''!=routeCode ">
	   			 		AND route_code = #{routeCode}
	   			   	</if>
			       	<if test="null!=beforeSwithStatus and ''!=beforeSwithStatus ">
	   			 		AND before_swith_status = #{beforeSwithStatus}
	   			   	</if>
			       	<if test="null!=afterSwithStatus and ''!=afterSwithStatus ">
	   			 		AND after_swith_status = #{afterSwithStatus}
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		AND remark = #{remark}
	   			   	</if>
			       	<if test="null!=payType and ''!=payType ">
	   			 		AND pay_type = #{payType}
	   			   	</if>
			       	<if test="null!=createrName and ''!=createrName ">
	   			 		AND creater_name = #{createrName}
	   			   	</if>
			       	<if test="null!=isDelete and ''!=isDelete ">
	   			 		AND is_delete = #{isDelete}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=routeName and ''!=routeName">
				    <!-- 	AND route_name LIKE '%'||#{routeName}||'%' oracle -->
			   			AND route_name LIKE concat('%',#{routeName},'%')
			   			
			   		</if>
				    <if test="null!=routeCode and ''!=routeCode">
				    <!-- 	AND route_code LIKE '%'||#{routeCode}||'%' oracle -->
			   			AND route_code LIKE concat('%',#{routeCode},'%')
			   			
			   		</if>
				    <if test="null!=beforeSwithStatus and ''!=beforeSwithStatus">
				    <!-- 	AND before_swith_status LIKE '%'||#{beforeSwithStatus}||'%' oracle -->
			   			AND before_swith_status LIKE concat('%',#{beforeSwithStatus},'%')
			   			
			   		</if>
				    <if test="null!=afterSwithStatus and ''!=afterSwithStatus">
				    <!-- 	AND after_swith_status LIKE '%'||#{afterSwithStatus}||'%' oracle -->
			   			AND after_swith_status LIKE concat('%',#{afterSwithStatus},'%')
			   			
			   		</if>
				    <if test="null!=remark and ''!=remark">
				    <!-- 	AND remark LIKE '%'||#{remark}||'%' oracle -->
			   			AND remark LIKE concat('%',#{remark},'%')
			   			
			   		</if>
				    <if test="null!=payType and ''!=payType">
				    <!-- 	AND pay_type LIKE '%'||#{payType}||'%' oracle -->
			   			AND pay_type LIKE concat('%',#{payType},'%')
			   			
			   		</if>
				    <if test="null!=createrName and ''!=createrName">
				    <!-- 	AND creater_name LIKE '%'||#{createrName}||'%' oracle -->
			   			AND creater_name LIKE concat('%',#{createrName},'%')
			   			
			   		</if>
				    <if test="null!=isDelete and ''!=isDelete">
				    <!-- 	AND is_delete LIKE '%'||#{isDelete}||'%' oracle -->
			   			AND is_delete LIKE concat('%',#{isDelete},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND create_time &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=createrId and ''!=createrId">
			    AND creater_id = #{createrId}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM route_switch_log <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RouteSwitchLog">
    	SELECT <include refid="columns"/> FROM route_switch_log 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
	          limit #{offset} , #{limit} 
		</if>
		
		
    </select>

	
	<select id="find" resultMap="RouteSwitchLog">
	    SELECT <include refid="columns"/> FROM route_switch_log 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>


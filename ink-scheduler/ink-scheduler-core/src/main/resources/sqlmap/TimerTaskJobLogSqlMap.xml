<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TimerTaskJobLog">

    <resultMap id="TimerTaskJobLog" type="com.ink.scheduler.core.po.TimerTaskJobLog">
        <result property="id" column="id"/>
        <result property="jobId" column="jobId"/>
        <result property="startTime" column="startTime"/>
        <result property="endTime" column="endTime"/>
        <result property="status" column="status"/>
        <result property="reqId" column="reqId"/>
        <result property="errorMsg" column="errorMsg"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,jobId ,startTime ,endTime ,status ,reqId ,errorMsg
	    ]]>
	</sql>

	<sql id="columnsJob">
		<![CDATA[
        log.id ,log.jobId ,log.startTime ,log.endTime ,log.status ,log.reqId ,log.errorMsg,job.jobName,job.description
	    ]]>
	</sql>
	
    <insert id="insert"  useGeneratedKeys="true" keyProperty="id"  >
    <![CDATA[
        INSERT INTO timer_task_job_log (
	        id  ,
	        jobId  ,
	        startTime  ,
	        endTime  ,
	        status  ,
	        reqId  ,
	        errorMsg  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{jobId, jdbcType=INTEGER} ,
        	#{startTime, jdbcType=TIMESTAMP} ,
        	#{endTime, jdbcType=TIMESTAMP} ,
        	#{status, jdbcType=VARCHAR} ,
        	#{reqId, jdbcType=VARCHAR} ,
        	#{errorMsg, jdbcType=VARCHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO timer_task_job_log ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=INTEGER} ,
        	#{item.jobId, jdbcType=INTEGER} ,
        	#{item.startTime, jdbcType=TIMESTAMP} ,
        	#{item.endTime, jdbcType=TIMESTAMP} ,
        	#{item.status, jdbcType=VARCHAR} ,
        	#{item.reqId, jdbcType=VARCHAR} ,
        	#{item.errorMsg, jdbcType=VARCHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE timer_task_job_log SET
	        jobId = #{jobId, jdbcType=INTEGER} ,
	        startTime = #{startTime, jdbcType=TIMESTAMP} ,
	        endTime = #{endTime, jdbcType=TIMESTAMP} ,
	        status = #{status, jdbcType=VARCHAR} ,
	        reqId = #{reqId, jdbcType=VARCHAR} ,
	        errorMsg = #{errorMsg, jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM timer_task_job_log WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="TimerTaskJobLog">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM timer_task_job_log 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
		   	<if test="null!=id and ''!=id">
			    AND log.id = #{id}
			</if>
		   	<if test="null!=jobId and ''!=jobId">
			    AND log.jobId = #{jobId}
			</if>
			<if test="null!=status and ''!=status ">
				AND log.status = #{status}
			</if>
		   	<if test="null!=startTimeBegin and ''!=startTimeBegin">
		   		AND log.startTime >= #{startTimeBegin}
		   	</if>
		   	<if test="null!=startTimeEnd and ''!=startTimeEnd">
		   		AND log.startTime &lt; #{startTimeEnd}
		   	</if>
		   	<if test="null!=endTimeBegin and ''!=endTimeBegin">
		   		AND log.endTime >= #{endTimeBegin}
		   	</if>
		   	<if test="null!=endTimeEnd and ''!=endTimeEnd">
		   		AND log.endTime &lt; #{endTimeEnd}
		   	</if>
			<if test="null!=errorMsg and ''!=errorMsg">
				AND log.errorMsg LIKE concat('%',#{errorMsg},'%')
			</if>
			<if test="null!=reqId and ''!=reqId ">
				AND log.reqId = #{reqId}
			</if>
		</where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM timer_task_job_log log <include refid="findWhere"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="TimerTaskJobLog">
		SELECT <include refid="columnsJob"/> FROM timer_task_job_log log LEFT JOIN timer_task_job job ON job.jobId = log.jobId
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="TimerTaskJobLog">
	    SELECT <include refid="columnsJob"/> FROM timer_task_job_log log LEFT JOIN timer_task_job job ON job.jobId = log.jobId
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>


</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TimerUser">

    <resultMap id="TimerUser" type="com.ink.scheduler.core.po.TimerUser">
        <result property="id" column="id"/>
        <result property="userName" column="userName"/>
        <result property="password" column="password"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,userName ,password 
	    ]]>
	</sql>
	
    <insert id="insert" >
    <![CDATA[
        INSERT INTO timer_user (
	        id  ,
	        userName  ,
	        password  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{userName, jdbcType=VARCHAR} ,
        	#{password, jdbcType=VARCHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO timer_user ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=INTEGER} ,
        	#{item.userName, jdbcType=VARCHAR} ,
        	#{item.password, jdbcType=VARCHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE timer_user SET
	        userName = #{userName, jdbcType=VARCHAR} ,
	        password = #{password, jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM timer_user WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="TimerUser">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM timer_user 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<select id="getByUserName" resultMap="TimerUser">
		SELECT <include refid="columns"/>
		<![CDATA[
	        FROM timer_user
	        WHERE
		        userName = #{userName}
	    ]]>
	</select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=userName and ''!=userName ">
	   			 		AND userName = #{userName}
	   			   	</if>
			       	<if test="null!=password and ''!=password ">
	   			 		AND password = #{password}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=userName and ''!=userName">
				    <!-- 	AND userName LIKE '%'||#{userName}||'%' oracle -->
			   			AND userName LIKE concat('%',#{userName},'%')
			   			
			   		</if>
				    <if test="null!=password and ''!=password">
				    <!-- 	AND password LIKE '%'||#{password}||'%' oracle -->
			   			AND password LIKE concat('%',#{password},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM timer_user <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="TimerUser">
    	SELECT <include refid="columns"/> FROM timer_user 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="TimerUser">
	    SELECT <include refid="columns"/> FROM timer_user 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>
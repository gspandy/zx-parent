<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TimerTaskJob">

    <resultMap id="TimerTaskJob" type="com.ink.scheduler.core.po.TimerTaskJob">
        <result property="jobId" column="jobId"/>
        <result property="jobName" column="jobName"/>
        <result property="jobGroup" column="jobGroup"/>
        <result property="status" column="status"/>
        <result property="jobStatus" column="jobStatus"/>
        <result property="isConcurrent" column="isConcurrent"/>
        <result property="description" column="description"/>
        <result property="jobClass" column="jobClass"/>
        <result property="methodName" column="methodName"/>
        <result property="firstTime" column="firstTime"/>
        <result property="previousTime" column="previousTime"/>
        <result property="validityPeriod" column="validityPeriod"/>
        <result property="jobUrl" column="jobUrl"/>
        <result property="runCount" column="runCount"/>
        <result property="cronExpression" column="cronExpression"/>
		<result property="jobExecuteTime" column="jobExecuteTime"/>
		<result property="version" column="version"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        jobId ,jobName ,jobGroup ,status ,jobStatus ,isConcurrent ,description ,jobClass ,methodName ,firstTime ,previousTime ,validityPeriod ,jobUrl ,runCount ,cronExpression,jobExecuteTime,version
	    ]]>
	</sql>
	
    <insert id="insert" >
    <![CDATA[
        INSERT INTO timer_task_job (
	        jobId  ,
	        jobName  ,
	        jobGroup  ,
	        status  ,
	        jobStatus  ,
	        isConcurrent  ,
	        description  ,
	        jobClass  ,
	        methodName  ,
	        firstTime  ,
	        previousTime  ,
	        validityPeriod  ,
	        jobUrl  ,
	        runCount  ,
	        cronExpression  ,
	        jobExecuteTime,
	        version
        ) VALUES (
        	#{jobId, jdbcType=INTEGER} ,
        	#{jobName, jdbcType=VARCHAR} ,
        	#{jobGroup, jdbcType=VARCHAR} ,
        	#{status, jdbcType=VARCHAR} ,
        	#{jobStatus, jdbcType=VARCHAR} ,
        	#{isConcurrent, jdbcType=VARCHAR} ,
        	#{description, jdbcType=VARCHAR} ,
        	#{jobClass, jdbcType=VARCHAR} ,
        	#{methodName, jdbcType=VARCHAR} ,
        	#{firstTime, jdbcType=TIMESTAMP} ,
        	#{previousTime, jdbcType=TIMESTAMP} ,
        	#{validityPeriod, jdbcType=TIMESTAMP} ,
        	#{jobUrl, jdbcType=VARCHAR} ,
        	#{runCount, jdbcType=INTEGER} ,
        	#{cronExpression, jdbcType=VARCHAR} ,
        	#{jobExecuteTime, jdbcType=VARCHAR},
        	#{version, jdbcType=VARCHAR}
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO timer_task_job ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.jobId, jdbcType=INTEGER} ,
        	#{item.jobName, jdbcType=VARCHAR} ,
        	#{item.jobGroup, jdbcType=VARCHAR} ,
        	#{item.status, jdbcType=VARCHAR} ,
        	#{item.jobStatus, jdbcType=VARCHAR} ,
        	#{item.isConcurrent, jdbcType=VARCHAR} ,
        	#{item.description, jdbcType=VARCHAR} ,
        	#{item.jobClass, jdbcType=VARCHAR} ,
        	#{item.methodName, jdbcType=VARCHAR} ,
        	#{item.firstTime, jdbcType=TIMESTAMP} ,
        	#{item.previousTime, jdbcType=TIMESTAMP} ,
        	#{item.validityPeriod, jdbcType=TIMESTAMP} ,
        	#{item.jobUrl, jdbcType=VARCHAR} ,
        	#{item.runCount, jdbcType=INTEGER} ,
        	#{item.cronExpression, jdbcType=VARCHAR} ,
            #{item.jobExecuteTime, jdbcType=VARCHAR},
			#{item.version, jdbcType=VARCHAR}
    )
        </foreach>
    </insert>

    <update id="updateByCondition" parameterType="com.ink.scheduler.core.po.TimerTaskJob" >
          update timer_task_job
          <set>
            <if test="null != jobName and ''!=jobName">
                jobName = #{jobName, jdbcType=VARCHAR}
            </if>
            <if test="null != jobGroup and ''!=jobGroup">
                jobGroup = #{jobGroup, jdbcType=VARCHAR}
            </if>
              <if test="null != status and ''!=status">
                  status = #{status, jdbcType=VARCHAR}
              </if>
              <if test="null != jobStatus and ''!=jobStatus">
                  jobStatus = #{jobStatus, jdbcType=VARCHAR}
              </if>
              <if test="null != isConcurrent and ''!=isConcurrent">
                  isConcurrent = #{isConcurrent, jdbcType=VARCHAR}
              </if>
              <if test="null != description and ''!=description">
                  description = #{description, jdbcType=VARCHAR}
              </if>
              <if test="null != jobClass and ''!=jobClass">
                  jobClass = #{jobClass, jdbcType=VARCHAR}
              </if>
              <if test="null != methodName and ''!=methodName">
                  methodName = #{methodName, jdbcType=VARCHAR}
              </if>
              <if test="null != firstTime and ''!=firstTime">
                  firstTime = #{firstTime, jdbcType=TIMESTAMP}
              </if>
              <if test="null != previousTime and ''!=previousTime">
                  previousTime = #{previousTime, jdbcType=TIMESTAMP}
              </if>
              <if test="null != validityPeriod and ''!=validityPeriod">
                  validityPeriod = #{validityPeriod, jdbcType=TIMESTAMP}
              </if>
              <if test="null != jobUrl and ''!=jobUrl">
                  jobUrl = #{jobUrl, jdbcType=VARCHAR}
              </if>
              <if test="null != runCount and ''!=runCount">
                  runCount = #{runCount, jdbcType=INTEGER}
              </if>
              <if test="null != cronExpression and ''!=cronExpression">
                  cronExpression = #{cronExpression, jdbcType=VARCHAR}
              </if>
              <if test="null != jobExecuteTime and ''!=jobExecuteTime">
                  jobExecuteTime = #{jobExecuteTime, jdbcType=VARCHAR}
              </if>
              <if test="null != version and ''!=version">
                  version = #{version, jdbcType=VARCHAR}
              </if>
          </set>
        WHERE jobId = #{jobId}
    </update>
    <update id="update" >
    <![CDATA[
        UPDATE timer_task_job SET
	        jobName = #{jobName, jdbcType=VARCHAR} ,
	        jobGroup = #{jobGroup, jdbcType=VARCHAR} ,
	        status = #{status, jdbcType=VARCHAR} ,
	        jobStatus = #{jobStatus, jdbcType=VARCHAR} ,
	        isConcurrent = #{isConcurrent, jdbcType=VARCHAR} ,
	        description = #{description, jdbcType=VARCHAR} ,
	        jobClass = #{jobClass, jdbcType=VARCHAR} ,
	        methodName = #{methodName, jdbcType=VARCHAR} ,
	        firstTime = #{firstTime, jdbcType=TIMESTAMP} ,
	        previousTime = #{previousTime, jdbcType=TIMESTAMP} ,
	        validityPeriod = #{validityPeriod, jdbcType=TIMESTAMP} ,
	        jobUrl = #{jobUrl, jdbcType=VARCHAR} ,
	        runCount = #{runCount, jdbcType=INTEGER} ,
	        cronExpression = #{cronExpression, jdbcType=VARCHAR} ,
			jobExecuteTime = #{jobExecuteTime, jdbcType=VARCHAR},
			version = #{version, jdbcType=VARCHAR}
        WHERE
	        jobId = #{jobId} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM timer_task_job WHERE
        jobId = #{jobId} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="TimerTaskJob">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM timer_task_job 
	        WHERE 
		        jobId = #{jobId} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
			<if test="null!=jobId and ''!=jobId">
				AND jobId = #{jobId}
			</if>
			<if test="null!=jobName and ''!=jobName">
				<!-- 	AND jobName LIKE '%'||#{jobName}||'%' oracle -->
				AND jobName LIKE concat('%',#{jobName},'%')
			</if>
			<if test="null!=jobGroup and ''!=jobGroup">
				<!-- 	AND jobGroup LIKE '%'||#{jobGroup}||'%' oracle -->
				AND jobGroup LIKE concat('%',#{jobGroup},'%')
			</if>
			<if test="null!=status and ''!=status ">
				AND status = #{status}
			</if>
			<if test="null!=jobStatus and ''!=jobStatus ">
				AND jobStatus = #{jobStatus}
			</if>
			<if test="null!=isConcurrent and ''!=isConcurrent ">
				AND isConcurrent = #{isConcurrent}
			</if>
			<if test="null!=description and ''!=description">
				<!-- 	AND description LIKE '%'||#{description}||'%' oracle -->
				AND description LIKE concat('%',#{description},'%')
			</if>
			<if test="null!=jobClass and ''!=jobClass">
				<!-- 	AND jobClass LIKE '%'||#{jobClass}||'%' oracle -->
				AND jobClass LIKE concat('%',#{jobClass},'%')
			</if>
			<if test="null!=methodName and ''!=methodName">
				<!-- 	AND methodName LIKE '%'||#{methodName}||'%' oracle -->
				AND methodName LIKE concat('%',#{methodName},'%')
			</if>
			<if test="null!=jobUrl and ''!=jobUrl">
				<!-- 	AND jobUrl LIKE '%'||#{jobUrl}||'%' oracle -->
				AND jobUrl LIKE concat('%',#{jobUrl},'%')
			</if>
			<if test="null!=cronExpression and ''!=cronExpression ">
				AND cronExpression = #{cronExpression}
			</if>
			<if test="null!=jobExecuteTime and ''!=jobExecuteTime ">
				AND jobExecuteTime = #{jobExecuteTime}
			</if>
		   	<if test="null!=firstTimeBegin and ''!=firstTimeBegin">
		   		AND firstTime >= #{firstTimeBegin}
		   	</if>
		   	<if test="null!=firstTimeEnd and ''!=firstTimeEnd">
		   		AND firstTime &lt; #{firstTimeEnd}
		   	</if>
		   	<if test="null!=previousTimeBegin and ''!=previousTimeBegin">
		   		AND previousTime >= #{previousTimeBegin}
		   	</if>
		   	<if test="null!=previousTimeEnd and ''!=previousTimeEnd">
		   		AND previousTime &lt; #{previousTimeEnd}
		   	</if>
		   	<if test="null!=validityPeriodBegin and ''!=validityPeriodBegin">
		   		AND validityPeriod >= #{validityPeriodBegin}
		   	</if>
		   	<if test="null!=validityPeriodEnd and ''!=validityPeriodEnd">
		   		AND validityPeriod &lt; #{validityPeriodEnd}
		   	</if>
		   	<if test="null!=runCount and ''!=runCount">
			    AND runCount = #{runCount}
			</if>
			<if test="null != version and '' != version">
				AND version = #{runCount}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM timer_task_job <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="TimerTaskJob">
    	SELECT <include refid="columns"/> FROM timer_task_job 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="TimerTaskJob">
	    SELECT <include refid="columns"/> FROM timer_task_job 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<select id="getByJobName" resultMap="TimerTaskJob">
		SELECT <include refid="columns"/>
		<![CDATA[
	        FROM timer_task_job
	        WHERE
		        jobName = #{jobName}
	    ]]>
	</select>

	<select id="getByJobUrlAndGroup" resultMap="TimerTaskJob" parameterType="java.util.Map">
		SELECT <include refid="columns"/>
		<![CDATA[
	        FROM timer_task_job
	        WHERE
		        jobUrl = #{jobUrl} AND jobGroup = #{jobGroup}
	    ]]>
	</select>
</mapper>
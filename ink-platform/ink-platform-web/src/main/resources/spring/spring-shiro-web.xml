<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Realm实现 -->
	<bean id="customRealm" class="com.ink.platform.realm.MyRealm">
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
			<!-- cacheManager -->
		 <!-- 	<property name="cacheManager" ref="redisCacheManager" /> -->
		 <!-- sessionManager -->
     	<!-- 	<property name="sessionManager" ref="sessionManager" />  -->
      
		
	</bean>
   
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager),到时候方法中可以通过SecurityUtils直接获取需要的，方便使用 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 身份认证失败，则跳转到登录页面的配置 -->
		<property name="loginUrl" value="/login" />
	<!-- 	 <property name="successUrl" value="/doLogin" />   -->
		<!-- 权限认证失败，则跳转到指定页面 -->
		<property name="unauthorizedUrl" value="/login" />
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<property name="filterChainDefinitions">
			<value>
				/**=anon
			</value>
		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 开启Shiro注解 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!--  缓存-->
<!-- 	<bean id="redisCache" class="com.yinker.platform.cache.RedisCache">自定义cacheManager
        <constructor-arg ref="redisManager"></constructor-arg>
    </bean> -->
 <!-- JedisPool manager -->
    <!--redisCacheManager要实现org.apache.shiro.cache.CacheManager接口，让shiro使用redis的缓存-->
   <!--  <bean id="redisCacheManager" class="com.yinker.platform.cache.RedisCacheManager">
        <property name="redisManager" ref="redisManager"></property>
    </bean> -->
    <!-- Redis session dao -->
<!--redisSessionDAO继承实现了org.apache.shiro.session.mgt.eis.SessionDAO的AbstractSessionDAO-->
   <!--  <bean id="redisSessionDAO" class="com.yinker.platform.cache.RedisSessionDAO">
        <property name="redisManager" ref="redisManager"></property>
    </bean>
    -->
   <!--  <bean id="redisManager" class="com.yinker.platform.cache.RedisManager"></bean> -->
    
  <!--   <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
   			 session存储的实现
        <property name="sessionDAO" ref="redisSessionDAO" />
        会话过期时间，在配置文件里面配置
        <property name="globalSessionTimeout" value="20000" />
        会话验证器调度时间  
        <property name="sessionValidationInterval" value="100000" />
         定时检查失效的session
        <property name="sessionValidationSchedulerEnabled" value="true" />
        删除失效的session  
    <property name="deleteInvalidSessions" value="true"/>  
    </bean>  -->
   
    </beans>
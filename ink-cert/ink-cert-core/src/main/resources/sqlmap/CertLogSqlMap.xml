<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CertLog">

	<resultMap id="CertLog" type="com.ink.cert.core.po.CertLog">
		<result property="id" column="id"/>
		<result property="merchantCode" column="merchant_code"/>
		<result property="certCode" column="cert_code"/>
		<result property="certType" column="cert_type"/>
		<result property="certName" column="cert_name"/>
		<result property="certId" column="cert_id"/>
		<result property="arithmeticType" column="arithmetic_type"/>
		<result property="operateType" column="operate_type"/>
		<result property="secretKey" column="secret_key"/>
		<result property="oldMsg" column="old_msg"/>
		<result property="newMsg" column="new_msg"/>
		<result property="resultCode" column="result_code"/>
		<result property="resultMsg" column="result_msg"/>
		<result property="requestId" column="request_id"/>
		<result property="operateTime" column="operate_time"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
        id ,merchant_code ,cert_code ,cert_type  ,cert_name,cert_id ,arithmetic_type ,operate_type ,secret_key ,old_msg ,new_msg ,result_code ,result_msg ,request_id ,operate_time
	    ]]>
	</sql>

	<insert id="insert" >
		<![CDATA[
        INSERT INTO cert_log (
	        id  ,
	        merchant_code  ,
	        cert_code  ,
	        cert_type  ,
	        cert_name  ,
	         cert_id ,
	        arithmetic_type  ,
	        operate_type  ,
	        secret_key  ,
	        old_msg  ,
	        new_msg  ,
	        result_code  ,
	        result_msg  ,
	        request_id  ,
	        operate_time  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{merchantCode, jdbcType=VARCHAR} ,
        	#{certCode, jdbcType=VARCHAR} ,
        	#{certType, jdbcType=CHAR} ,
        	#{certName, jdbcType=VARCHAR} ,
        	#{certId, jdbcType=VARCHAR} ,
        	#{arithmeticType, jdbcType=VARCHAR} ,
        	#{operateType, jdbcType=CHAR} ,
        	#{secretKey, jdbcType=VARBINARY} ,
        	#{oldMsg, jdbcType=VARCHAR} ,
        	#{newMsg, jdbcType=VARCHAR} ,
        	#{resultCode, jdbcType=VARCHAR} ,
        	#{resultMsg, jdbcType=VARCHAR} ,
        	#{requestId, jdbcType=VARCHAR} ,
        	#{operateTime, jdbcType=TIMESTAMP} 
        )
    ]]>
	</insert>
	<insert id="insertBatch"   parameterType="java.util.List">
		INSERT INTO cert_log ( <include refid="columns"/>) values
		<foreach collection="list" item="item" separator="," >
			(
			#{item.id, jdbcType=INTEGER} ,
			#{item.merchantCode, jdbcType=VARCHAR} ,
			#{item.certCode, jdbcType=VARCHAR} ,
			#{item.certType, jdbcType=CHAR} ,
			#{item.certName, jdbcType=VARCHAR} ,
			#{item.certId, jdbcType=VARCHAR} ,
			#{item.arithmeticType, jdbcType=VARCHAR} ,
			#{item.operateType, jdbcType=CHAR} ,
			#{item.secretKey, jdbcType=VARBINARY} ,
			#{item.oldMsg, jdbcType=VARCHAR} ,
			#{item.newMsg, jdbcType=VARCHAR} ,
			#{item.resultCode, jdbcType=VARCHAR} ,
			#{item.resultMsg, jdbcType=VARCHAR} ,
			#{item.requestId, jdbcType=VARCHAR} ,
			#{item.operateTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>

	<update id="update" >
		<![CDATA[
        UPDATE cert_log SET
	        merchant_code = #{merchantCode, jdbcType=VARCHAR} ,
	        cert_code = #{certCode, jdbcType=VARCHAR} ,
	        cert_type = #{certType, jdbcType=CHAR} ,
	         cert_id = #{certId, jdbcType=VARCHAR} ,
	        cert_name = #{certName, jdbcType=VARCHAR} ,
	        arithmetic_type = #{arithmeticType, jdbcType=VARCHAR} ,
	        operate_type = #{operateType, jdbcType=CHAR} ,
	        secret_key = #{secretKey, jdbcType=VARBINARY} ,
	        old_msg = #{oldMsg, jdbcType=VARCHAR} ,
	        new_msg = #{newMsg, jdbcType=VARCHAR} ,
	        result_code = #{resultCode, jdbcType=VARCHAR} ,
	        result_msg = #{resultMsg, jdbcType=VARCHAR} ,
	        request_id = #{requestId, jdbcType=VARCHAR} ,
	        operate_time = #{operateTime, jdbcType=TIMESTAMP} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

	<delete id="delete">
		<![CDATA[
        DELETE FROM cert_log WHERE
        id = #{id} 
    ]]>
	</delete>

	<select id="getById" resultMap="CertLog">
		SELECT <include refid="columns"/>
		<![CDATA[
	        FROM cert_log 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

	<sql id="findWhere">
		<where>
			<choose>
				<when test="queryType==0">
					<if test="null!=merchantCode and ''!=merchantCode ">
						AND merchant_code = #{merchantCode}
					</if>
					<if test="null!=certCode and ''!=certCode ">
						AND cert_code = #{certCode}
					</if>
					<if test="null!=certType and ''!=certType ">
						AND cert_type = #{certType}
					</if>

					<if test="null!=certName and ''!=certName ">
						AND cert_name = #{certName}
					</if>
					<if test="null!=operateType and ''!=operateType ">
						AND operate_type = #{operateType}
					</if>
					<if test="null!=oldMsg and ''!=oldMsg ">
						AND old_msg = #{oldMsg}
					</if>
					<if test="null!=newMsg and ''!=newMsg ">
						AND new_msg = #{newMsg}
					</if>
					<if test="null!=resultCode and ''!=resultCode ">
						AND result_code = #{resultCode}
					</if>
					<if test="null!=resultMsg and ''!=resultMsg ">
						AND result_msg = #{resultMsg}
					</if>
					<if test="null!=requestId and ''!=requestId ">
						AND request_id = #{requestId}
					</if>
				</when>
				<otherwise>
					<if test="null!=merchantCode and ''!=merchantCode">
						<!-- 	AND merchant_code LIKE '%'||#{merchantCode}||'%' oracle -->
						AND merchant_code LIKE concat('%',#{merchantCode},'%')

					</if>
					<if test="null!=certCode and ''!=certCode">
						<!-- 	AND cert_code LIKE '%'||#{certCode}||'%' oracle -->
						AND cert_code LIKE concat('%',#{certCode},'%')

					</if>
					<if test="null!=certType and ''!=certType">
						<!-- 	AND cert_type LIKE '%'||#{certType}||'%' oracle -->
						AND cert_type LIKE concat('%',#{certType},'%')

					</if>

					<if test="null!=operateType and ''!=operateType">
						<!-- 	AND operate_type LIKE '%'||#{operateType}||'%' oracle -->
						AND operate_type LIKE concat('%',#{operateType},'%')

					</if>
					<if test="null!=oldMsg and ''!=oldMsg">
						<!-- 	AND old_msg LIKE '%'||#{oldMsg}||'%' oracle -->
						AND old_msg LIKE concat('%',#{oldMsg},'%')

					</if>
					<if test="null!=newMsg and ''!=newMsg">
						<!-- 	AND new_msg LIKE '%'||#{newMsg}||'%' oracle -->
						AND new_msg LIKE concat('%',#{newMsg},'%')

					</if>
					<if test="null!=resultCode and ''!=resultCode">
						<!-- 	AND result_code LIKE '%'||#{resultCode}||'%' oracle -->
						AND result_code LIKE concat('%',#{resultCode},'%')

					</if>
					<if test="null!=resultMsg and ''!=resultMsg">
						<!-- 	AND result_msg LIKE '%'||#{resultMsg}||'%' oracle -->
						AND result_msg LIKE concat('%',#{resultMsg},'%')

					</if>
					<if test="null!=requestId and ''!=requestId">
						<!-- 	AND request_id LIKE '%'||#{requestId}||'%' oracle -->
						AND request_id LIKE concat('%',#{requestId},'%')

					</if>
				</otherwise>
			</choose>
			<if test="null!=id and ''!=id">
				AND id = #{id}
			</if>
			<if test="null!=arithmeticType and ''!=arithmeticType">
				AND arithmetic_type = #{arithmeticType}
			</if>
			<if test="null!=secretKey and ''!=secretKey">
				AND secret_key = #{secretKey}
			</if>
			<if test="null!=operateTimeBegin and ''!=operateTimeBegin">
				AND operate_time >= #{operateTimeBegin}
			</if>
			<if test="null!=operateTimeEnd and ''!=operateTimeEnd">
				AND operate_time &lt; #{operateTimeEnd}
			</if>
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(*) FROM cert_log <include refid="findWhere"/>
	</select>

	<!--
        分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
        因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
	<select id="findPage" resultMap="CertLog">
		SELECT <include refid="columns"/> FROM cert_log
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>


	<select id="find" resultMap="CertLog">
		SELECT <include refid="columns"/> FROM cert_log
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AsileBusinessSupport">

    <resultMap id="AsileBusinessSupport" type="com.ink.route.api.model.po.AsileBusinessSupport">
        <result property="id" column="id"/>
        <result property="mchId" column="mch_id"/>
        <result property="channelNo" column="channel_no"/>
        <result property="payType" column="pay_type"/>
        <result property="channelMchId" column="channel_mch_id"/>
        <result property="terminalId" column="terminal_id"/>
        <result property="certId" column="cert_id"/>
        <result property="remark" column="remark"/>
        <result property="ext1" column="ext1"/>
        <result property="status" column="status"/>
        <result property="ext2" column="ext2"/>
        <result property="createTime" column="create_time"/>
        <result property="lastupdateTime" column="lastupdate_time"/>
        <result property="operator" column="operator"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,mch_id ,channel_no ,pay_type ,channel_mch_id ,terminal_id ,cert_id ,remark ,ext1 ,status ,ext2 ,create_time ,lastupdate_time ,operator 
	    ]]>
	</sql>
	
	<!-- 根据商户号查询 -->
	<select id="getByMerNo" resultMap="AsileBusinessSupport">
		SELECT <include refid="columns"/>
		<![CDATA[
	        FROM asile_business_support
	        WHERE
		        mch_id = #{merNo}
	    ]]>
	</select>
	
    <insert id="insert"  useGeneratedKeys="true" keyProperty="id"  >
    <![CDATA[
        INSERT INTO asile_business_support (
	        id  ,
	        mch_id  ,
	        channel_no  ,
	        pay_type  ,
	        channel_mch_id  ,
	        terminal_id  ,
	        cert_id  ,
	        remark  ,
	        ext1  ,
	        status  ,
	        ext2  ,
	        create_time  ,
	        lastupdate_time  ,
	        operator  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{mchId, jdbcType=VARCHAR} ,
        	#{channelNo, jdbcType=VARCHAR} ,
        	#{payType, jdbcType=INTEGER} ,
        	#{channelMchId, jdbcType=VARCHAR} ,
        	#{terminalId, jdbcType=VARCHAR} ,
        	#{certId, jdbcType=VARCHAR} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{ext1, jdbcType=VARCHAR} ,
        	#{status, jdbcType=INTEGER} ,
        	#{ext2, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{operator, jdbcType=VARCHAR} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO asile_business_support ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.mchId, jdbcType=VARCHAR} ,
        	#{item.channelNo, jdbcType=VARCHAR} ,
        	#{item.payType, jdbcType=INTEGER} ,
        	#{item.channelMchId, jdbcType=VARCHAR} ,
        	#{item.terminalId, jdbcType=VARCHAR} ,
        	#{item.certId, jdbcType=VARCHAR} ,
        	#{item.remark, jdbcType=VARCHAR} ,
        	#{item.ext1, jdbcType=VARCHAR} ,
        	#{item.status, jdbcType=INTEGER} ,
        	#{item.ext2, jdbcType=VARCHAR} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.lastupdateTime, jdbcType=TIMESTAMP} ,
        	#{item.operator, jdbcType=VARCHAR} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE asile_business_support SET
	        mch_id = #{mchId, jdbcType=VARCHAR} ,
	        channel_no = #{channelNo, jdbcType=VARCHAR} ,
	        pay_type = #{payType, jdbcType=INTEGER} ,
	        channel_mch_id = #{channelMchId, jdbcType=VARCHAR} ,
	        terminal_id = #{terminalId, jdbcType=VARCHAR} ,
	        cert_id = #{certId, jdbcType=VARCHAR} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        ext1 = #{ext1, jdbcType=VARCHAR} ,
	        status = #{status, jdbcType=INTEGER} ,
	        ext2 = #{ext2, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	        operator = #{operator, jdbcType=VARCHAR} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>
<update id="updateNotNull" >
			UPDATE asile_business_support
				<set>
			       	<if test="null!=mchId and ''!=mchId ">
	   			 		mch_id = #{mchId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=channelNo and ''!=channelNo ">
	   			 		channel_no = #{channelNo, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=payType and ''!=payType ">
	   			 		pay_type = #{payType, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=channelMchId and ''!=channelMchId ">
	   			 		channel_mch_id = #{channelMchId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=terminalId and ''!=terminalId ">
	   			 		terminal_id = #{terminalId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=certId and ''!=certId ">
	   			 		cert_id = #{certId, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		remark = #{remark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=ext1 and ''!=ext1 ">
	   			 		ext1 = #{ext1, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=status and ''!=status ">
	   			 		status = #{status, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=ext2 and ''!=ext2 ">
	   			 		ext2 = #{ext2, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=lastupdateTime and ''!=lastupdateTime ">
	   			 		lastupdate_time = #{lastupdateTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=operator and ''!=operator ">
	   			 		operator = #{operator, jdbcType=VARCHAR} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
    <delete id="delete">
    <![CDATA[
        DELETE FROM asile_business_support WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="AsileBusinessSupport">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM asile_business_support 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=mchId and ''!=mchId ">
	   			 		AND mch_id = #{mchId}
	   			   	</if>
			       	<if test="null!=channelNo and ''!=channelNo ">
	   			 		AND channel_no = #{channelNo}
	   			   	</if>
			       	<if test="null!=channelMchId and ''!=channelMchId ">
	   			 		AND channel_mch_id = #{channelMchId}
	   			   	</if>
			       	<if test="null!=terminalId and ''!=terminalId ">
	   			 		AND terminal_id = #{terminalId}
	   			   	</if>
			       	<if test="null!=certId and ''!=certId ">
	   			 		AND cert_id = #{certId}
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		AND remark = #{remark}
	   			   	</if>
			       	<if test="null!=ext1 and ''!=ext1 ">
	   			 		AND ext1 = #{ext1}
	   			   	</if>
			       	<if test="null!=ext2 and ''!=ext2 ">
	   			 		AND ext2 = #{ext2}
	   			   	</if>
			       	<if test="null!=operator and ''!=operator ">
	   			 		AND operator = #{operator}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=mchId and ''!=mchId">
				    <!-- 	AND mch_id LIKE '%'||#{mchId}||'%' oracle -->
			   			AND mch_id LIKE concat('%',#{mchId},'%')
			   			
			   		</if>
				    <if test="null!=channelNo and ''!=channelNo">
				    <!-- 	AND channel_no LIKE '%'||#{channelNo}||'%' oracle -->
			   			AND channel_no LIKE concat('%',#{channelNo},'%')
			   			
			   		</if>
				    <if test="null!=channelMchId and ''!=channelMchId">
				    <!-- 	AND channel_mch_id LIKE '%'||#{channelMchId}||'%' oracle -->
			   			AND channel_mch_id LIKE concat('%',#{channelMchId},'%')
			   			
			   		</if>
				    <if test="null!=terminalId and ''!=terminalId">
				    <!-- 	AND terminal_id LIKE '%'||#{terminalId}||'%' oracle -->
			   			AND terminal_id LIKE concat('%',#{terminalId},'%')
			   			
			   		</if>
				    <if test="null!=certId and ''!=certId">
				    <!-- 	AND cert_id LIKE '%'||#{certId}||'%' oracle -->
			   			AND cert_id LIKE concat('%',#{certId},'%')
			   			
			   		</if>
				    <if test="null!=remark and ''!=remark">
				    <!-- 	AND remark LIKE '%'||#{remark}||'%' oracle -->
			   			AND remark LIKE concat('%',#{remark},'%')
			   			
			   		</if>
				    <if test="null!=ext1 and ''!=ext1">
				    <!-- 	AND ext1 LIKE '%'||#{ext1}||'%' oracle -->
			   			AND ext1 LIKE concat('%',#{ext1},'%')
			   			
			   		</if>
				    <if test="null!=ext2 and ''!=ext2">
				    <!-- 	AND ext2 LIKE '%'||#{ext2}||'%' oracle -->
			   			AND ext2 LIKE concat('%',#{ext2},'%')
			   			
			   		</if>
				    <if test="null!=operator and ''!=operator">
				    <!-- 	AND operator LIKE '%'||#{operator}||'%' oracle -->
			   			AND operator LIKE concat('%',#{operator},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=payType and ''!=payType">
			    AND pay_type = #{payType}
			</if>
		   	<if test="null!=status and ''!=status">
			    AND status = #{status}
			</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND create_time &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=lastupdateTimeBegin and ''!=lastupdateTimeBegin">
		   		AND lastupdate_time >= #{lastupdateTimeBegin}
		   	</if>
		   	<if test="null!=lastupdateTimeEnd and ''!=lastupdateTimeEnd">
		   		AND lastupdate_time &lt; #{lastupdateTimeEnd}
		   	</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM asile_business_support <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="AsileBusinessSupport">
    	SELECT <include refid="columns"/> FROM asile_business_support 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="AsileBusinessSupport">
	    SELECT <include refid="columns"/> FROM asile_business_support 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>
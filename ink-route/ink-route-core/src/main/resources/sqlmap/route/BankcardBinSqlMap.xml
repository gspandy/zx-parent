<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BankcardBin">

    <resultMap id="BankcardBin" type="com.ink.route.api.model.po.BankcardBin">
        <result property="id" column="id"/>
        <result property="bankName" column="bankName"/>
        <result property="bankSimpleCode" column="bankSimpleCode"/>
        <result property="bankOrg" column="bankOrg"/>
        <result property="cardBin" column="cardBin"/>
        <result property="cardBinLen" column="cardBinLen"/>
        <result property="cardCategory" column="cardCategory"/>
        <result property="modifyTime" column="modifyTime"/>
        <result property="createTime" column="createTime"/>
        <result property="cardName" column="cardName"/>
        <result property="cardNoLen" column="cardNoLen"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,bankName ,bankSimpleCode ,bankOrg ,cardBin ,cardBinLen ,cardCategory ,modifyTime ,createTime ,cardName ,cardNoLen 
	    ]]>
	</sql>
	
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" >
    <![CDATA[
        INSERT INTO bankcard_bin (
	        id  ,
	        bankName  ,
	        bankSimpleCode  ,
	        bankOrg  ,
	        cardBin  ,
	        cardBinLen  ,
	        cardCategory  ,
	        modifyTime  ,
	        createTime  ,
	        cardName  ,
	        cardNoLen  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{bankName, jdbcType=VARCHAR} ,
        	#{bankSimpleCode, jdbcType=VARCHAR} ,
        	#{bankOrg, jdbcType=VARCHAR} ,
        	#{cardBin, jdbcType=VARCHAR} ,
        	#{cardBinLen, jdbcType=TINYINT} ,
        	#{cardCategory, jdbcType=SMALLINT} ,
        	#{modifyTime, jdbcType=TIMESTAMP} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{cardName, jdbcType=VARCHAR} ,
        	#{cardNoLen, jdbcType=TINYINT} 
        )
    ]]>
    </insert>
   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO bankcard_bin ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=INTEGER} ,
        	#{item.bankName, jdbcType=VARCHAR} ,
        	#{item.bankSimpleCode, jdbcType=VARCHAR} ,
        	#{item.bankOrg, jdbcType=VARCHAR} ,
        	#{item.cardBin, jdbcType=VARCHAR} ,
        	#{item.cardBinLen, jdbcType=TINYINT} ,
        	#{item.cardCategory, jdbcType=SMALLINT} ,
        	#{item.modifyTime, jdbcType=TIMESTAMP} ,
        	#{item.createTime, jdbcType=TIMESTAMP} ,
        	#{item.cardName, jdbcType=VARCHAR} ,
        	#{item.cardNoLen, jdbcType=TINYINT} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE bankcard_bin SET
	        bankName = #{bankName, jdbcType=VARCHAR} ,
	        bankSimpleCode = #{bankSimpleCode, jdbcType=VARCHAR} ,
	        bankOrg = #{bankOrg, jdbcType=VARCHAR} ,
	        cardBin = #{cardBin, jdbcType=VARCHAR} ,
	        cardBinLen = #{cardBinLen, jdbcType=TINYINT} ,
	        cardCategory = #{cardCategory, jdbcType=SMALLINT} ,
	        modifyTime = #{modifyTime, jdbcType=TIMESTAMP} ,
	        createTime = #{createTime, jdbcType=TIMESTAMP} ,
	        cardName = #{cardName, jdbcType=VARCHAR} ,
	        cardNoLen = #{cardNoLen, jdbcType=TINYINT} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>
<update id="updateNotNull" >
			UPDATE bankcard_bin
				<set>
			       	<if test="null!=bankName and ''!=bankName ">
	   			 		bankName = #{bankName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankSimpleCode and ''!=bankSimpleCode ">
	   			 		bankSimpleCode = #{bankSimpleCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankOrg and ''!=bankOrg ">
	   			 		bankOrg = #{bankOrg, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=cardBin and ''!=cardBin ">
	   			 		cardBin = #{cardBin, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=cardBinLen and ''!=cardBinLen ">
	   			 		cardBinLen = #{cardBinLen, jdbcType=TINYINT} ,
	   			   	</if>
			       	<if test="null!=cardCategory and ''!=cardCategory ">
	   			 		cardCategory = #{cardCategory, jdbcType=SMALLINT} ,
	   			   	</if>
			       	<if test="null!=modifyTime and ''!=modifyTime ">
	   			 		modifyTime = #{modifyTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		createTime = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=cardName and ''!=cardName ">
	   			 		cardName = #{cardName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=cardNoLen and ''!=cardNoLen ">
	   			 		cardNoLen = #{cardNoLen, jdbcType=TINYINT} 
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
    <delete id="delete">
    <![CDATA[
        DELETE FROM bankcard_bin WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="BankcardBin">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM bankcard_bin 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
			       	<if test="null!=bankName and ''!=bankName ">
	   			 		AND bankName = #{bankName}
	   			   	</if>
			       	<if test="null!=bankSimpleCode and ''!=bankSimpleCode ">
	   			 		AND bankSimpleCode = #{bankSimpleCode}
	   			   	</if>
			       	<if test="null!=bankOrg and ''!=bankOrg ">
	   			 		AND bankOrg = #{bankOrg}
	   			   	</if>
			       	<if test="null!=cardBin and ''!=cardBin ">
	   			 		AND cardBin = #{cardBin}
	   			   	</if>
			       	<if test="null!=cardName and ''!=cardName ">
	   			 		AND cardName = #{cardName}
	   			   	</if>
	       		</when>
	       		<otherwise>
				    <if test="null!=bankName and ''!=bankName">
				    <!-- 	AND bankName LIKE '%'||#{bankName}||'%' oracle -->
			   			AND bankName LIKE concat('%',#{bankName},'%')
			   			
			   		</if>
				    <if test="null!=bankSimpleCode and ''!=bankSimpleCode">
				    <!-- 	AND bankSimpleCode LIKE '%'||#{bankSimpleCode}||'%' oracle -->
			   			AND bankSimpleCode LIKE concat('%',#{bankSimpleCode},'%')
			   			
			   		</if>
				    <if test="null!=bankOrg and ''!=bankOrg">
				    <!-- 	AND bankOrg LIKE '%'||#{bankOrg}||'%' oracle -->
			   			AND bankOrg LIKE concat('%',#{bankOrg},'%')
			   			
			   		</if>
				    <if test="null!=cardBin and ''!=cardBin">
				    <!-- 	AND cardBin LIKE '%'||#{cardBin}||'%' oracle -->
			   			AND cardBin LIKE concat('%',#{cardBin},'%')
			   			
			   		</if>
				    <if test="null!=cardName and ''!=cardName">
				    <!-- 	AND cardName LIKE '%'||#{cardName}||'%' oracle -->
			   			AND cardName LIKE concat('%',#{cardName},'%')
			   			
			   		</if>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
		   	<if test="null!=cardBinLen and ''!=cardBinLen">
			    AND cardBinLen = #{cardBinLen}
			</if>
		   	<if test="null!=cardCategory and ''!=cardCategory">
			    AND cardCategory = #{cardCategory}
			</if>
		   	<if test="null!=modifyTimeBegin and ''!=modifyTimeBegin">
		   		AND modifyTime >= #{modifyTimeBegin}
		   	</if>
		   	<if test="null!=modifyTimeEnd and ''!=modifyTimeEnd">
		   		AND modifyTime &lt; #{modifyTimeEnd}
		   	</if>
		   	<if test="null!=createTimeBegin and ''!=createTimeBegin">
		   		AND createTime >= #{createTimeBegin}
		   	</if>
		   	<if test="null!=createTimeEnd and ''!=createTimeEnd">
		   		AND createTime &lt; #{createTimeEnd}
		   	</if>
		   	<if test="null!=cardNoLen and ''!=cardNoLen">
			    AND cardNoLen = #{cardNoLen}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM bankcard_bin <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="BankcardBin">
    	SELECT <include refid="columns"/> FROM bankcard_bin 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
	          limit #{offset} , #{limit} 
		</if>
		
		
    </select>

    <select id="getByCardBin" resultMap="BankcardBin" >
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM bankcard_bin WHERE cardNoLen = length(#{bankNo}) and cardBin = left(#{bankNo},cardBinLen)
	    ]]>
    </select>
    <select id="getByCardBinByCardBinLen" resultMap="BankcardBin" >
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM bankcard_bin WHERE cardNoLen = #{cardNoLen} and cardBin = #{cardBin}
	    ]]>
    </select>
    
	
	<select id="find" resultMap="BankcardBin">
	    SELECT <include refid="columns"/> FROM bankcard_bin 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>
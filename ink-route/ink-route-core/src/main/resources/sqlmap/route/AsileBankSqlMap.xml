<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AsileBank">

	<resultMap id="AsileBank" type="com.ink.route.api.model.po.AsileBank">
		<result property="id" column="id" />
		<result property="asileName" column="asile_name" />
		<result property="asileCode" column="asile_code" />
		<result property="bankName" column="bank_name" />
		<result property="bankCode" column="bank_code" />
		<result property="asileProductCode" column="asile_product_code" />
		<result property="asileProductName" column="asile_product_name" />
		<result property="asileDirectBank" column="asile_direct_bank" />
		<result property="asilePublicPrivate" column="asile_public_private" />
		<result property="asileIntefaceType" column="asile_inteface_type" />
		<result property="asileAuthType" column="asile_auth_type" />
		<result property="asileAuthElements" column="asile_auth_elements" />
		<result property="asileAuthMode" column="asile_auth_mode" />
		<result property="asileBankType" column="asile_bank_type" />
		<result property="asilePayType" column="asile_pay_type" />
		<result property="asileCrashLimit" column="asile_crash_limit" />
		<result property="cardCrashDayLimit" column="card_crash_day_limit" />
		<result property="cardCrashMonthLimit" column="card_crash_month_limit" />
		<result property="cardDayLimits" column="card_day_limits" />
		<result property="batchCrashLimit" column="batch_crash_limit" />
		<result property="batchLimit" column="batch_limit" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="createrId" column="creater_id" />
		<result property="createrName" column="creater_name" />
		<result property="updateTime" column="update_time" />
		<result property="updaterId" column="updater_id" />
		<result property="updaterName" column="updater_name" />
		<result property="isDelete" column="is_delete" />
		<result property="asileOnlyTime" column="asile_only_time" />
		<result property="asileServiceBeginTime" column="asile_service_begin_time" />
		<result property="asileServiceEndTime" column="asile_service_end_time" />
		<result property="priority" column="priority" />
		<result property="borrowSplit" column="borrow_split" />
		<result property="smsSender" column="sms_sender" />
		<result property="bankShort" column="bank_short" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,asile_name ,asile_code ,bank_name ,bank_code ,asile_product_code ,asile_product_name ,asile_direct_bank ,asile_public_private ,asile_inteface_type ,asile_auth_type ,asile_auth_elements ,asile_auth_mode ,asile_bank_type ,asile_pay_type ,asile_crash_limit ,card_crash_day_limit ,card_crash_month_limit ,card_day_limits ,batch_crash_limit ,batch_limit ,remark ,create_time ,creater_id ,creater_name ,update_time ,updater_id ,updater_name ,is_delete ,asile_only_time ,asile_service_begin_time ,asile_service_end_time ,priority ,borrow_split ,sms_sender,bank_short 
	    ]]>
	</sql>

	<!-- 根据银行编码和金额查询支持此银行的通道列表 -->
	<select id="getAsileBankByBankShortAndAmtLimit" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
		<![CDATA[
	        FROM asile_bank
	        WHERE
		        bank_short = #{bankShort}
		    AND asile_crash_limit >= #{asileCrashLimit}
		    AND asile_service_begin_time <= #{createTime}
		    AND asile_service_end_time >= #{createTime}
	    ]]>
	</select>
	<!-- 查询所有数据 -->
	<select id="getAll" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
		<![CDATA[
	        FROM asile_bank
	    ]]>
	</select>
	<insert id="insert" keyProperty="id" useGeneratedKeys="true">
    <![CDATA[
        INSERT INTO asile_bank (
	        id  ,
	        asile_name  ,
	        asile_code  ,
	        bank_name  ,
	        bank_code  ,
	        asile_product_code  ,
	        asile_product_name  ,
	        asile_direct_bank  ,
	        asile_public_private  ,
	        asile_inteface_type  ,
	        asile_auth_type  ,
	        asile_auth_elements  ,
	        asile_auth_mode  ,
	        asile_bank_type  ,
	        asile_pay_type  ,
	        asile_crash_limit  ,
	        card_crash_day_limit  ,
	        card_crash_month_limit  ,
	        card_day_limits  ,
	        batch_crash_limit  ,
	        batch_limit  ,
	        remark  ,
	        create_time  ,
	        creater_id  ,
	        creater_name  ,
	        update_time  ,
	        updater_id  ,
	        updater_name  ,
	        is_delete  ,
	        asile_only_time  ,
	        asile_service_begin_time  ,
	        asile_service_end_time  ,
	        priority  ,
	        borrow_split  ,
	        sms_sender,
	        bank_short
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{asileName, jdbcType=VARCHAR} ,
        	#{asileCode, jdbcType=BIGINT} ,
        	#{bankName, jdbcType=VARCHAR} ,
        	#{bankCode, jdbcType=VARCHAR} ,
        	#{asileProductCode, jdbcType=VARCHAR} ,
        	#{asileProductName, jdbcType=VARCHAR} ,
        	#{asileDirectBank, jdbcType=CHAR} ,
        	#{asilePublicPrivate, jdbcType=CHAR} ,
        	#{asileIntefaceType, jdbcType=CHAR} ,
        	#{asileAuthType, jdbcType=CHAR} ,
        	#{asileAuthElements, jdbcType=INTEGER} ,
        	#{asileAuthMode, jdbcType=CHAR} ,
        	#{asileBankType, jdbcType=CHAR} ,
        	#{asilePayType, jdbcType=CHAR} ,
        	#{asileCrashLimit, jdbcType=DECIMAL} ,
        	#{cardCrashDayLimit, jdbcType=DECIMAL} ,
        	#{cardCrashMonthLimit, jdbcType=DECIMAL} ,
        	#{cardDayLimits, jdbcType=TINYINT} ,
        	#{batchCrashLimit, jdbcType=DECIMAL} ,
        	#{batchLimit, jdbcType=TINYINT} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{createrId, jdbcType=BIGINT} ,
        	#{createrName, jdbcType=VARCHAR} ,
        	#{updateTime, jdbcType=TIMESTAMP} ,
        	#{updaterId, jdbcType=BIGINT} ,
        	#{updaterName, jdbcType=VARCHAR} ,
        	#{isDelete, jdbcType=CHAR} ,
        	#{asileOnlyTime, jdbcType=TIMESTAMP} ,
        	#{asileServiceBeginTime, jdbcType=TIMESTAMP} ,
        	#{asileServiceEndTime, jdbcType=TIMESTAMP} ,
        	#{priority, jdbcType=TINYINT} ,
        	#{borrowSplit, jdbcType=CHAR} ,
        	#{smsSender, jdbcType=CHAR} ,
        	#{bankShort, jdbcType=VARCHAR} 
        )
    ]]>
	</insert>
	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO asile_bank (
		<include refid="columns" />
		) values
		<foreach collection="list" item="item" separator=",">
			(
			#{item.id,
			jdbcType=BIGINT} ,
			#{item.asileName, jdbcType=VARCHAR} ,
			#{item.asileCode, jdbcType=BIGINT} ,
			#{item.bankName,
			jdbcType=VARCHAR}
			,
			#{item.bankCode, jdbcType=BIGINT} ,
			#{item.asileProductCode,
			jdbcType=VARCHAR} ,
			#{item.asileProductName,
			jdbcType=VARCHAR} ,
			#{item.asileDirectBank, jdbcType=CHAR} ,
			#{item.asilePublicPrivate,
			jdbcType=CHAR} ,
			#{item.asileIntefaceType,
			jdbcType=CHAR} ,
			#{item.asileAuthType, jdbcType=CHAR} ,
			#{item.asileAuthElements,
			jdbcType=INTEGER} ,
			#{item.asileAuthMode,
			jdbcType=CHAR} ,
			#{item.asileBankType, jdbcType=CHAR} ,
			#{item.asilePayType,
			jdbcType=CHAR} ,
			#{item.asileCrashLimit,
			jdbcType=DECIMAL} ,
			#{item.cardCrashDayLimit, jdbcType=DECIMAL} ,
			#{item.cardCrashMonthLimit, jdbcType=DECIMAL} ,
			#{item.cardDayLimits,
			jdbcType=TINYINT} ,
			#{item.batchCrashLimit, jdbcType=DECIMAL} ,
			#{item.batchLimit, jdbcType=TINYINT} ,
			#{item.remark,
			jdbcType=VARCHAR} ,
			#{item.createTime, jdbcType=TIMESTAMP} ,
			#{item.createrId, jdbcType=BIGINT} ,
			#{item.createrName,
			jdbcType=VARCHAR} ,
			#{item.updateTime, jdbcType=TIMESTAMP} ,
			#{item.updaterId, jdbcType=BIGINT} ,
			#{item.updaterName,
			jdbcType=VARCHAR} ,
			#{item.isDelete, jdbcType=CHAR} ,
			#{item.asileOnlyTime, jdbcType=TIMESTAMP} ,
			#{item.asileServiceBeginTime, jdbcType=TIMESTAMP} ,
			#{item.asileServiceEndTime, jdbcType=TIMESTAMP} ,
			#{item.priority,
			jdbcType=TINYINT} ,
			#{item.borrowSplit, jdbcType=CHAR} ,
			#{item.smsSender, jdbcType=CHAR}
			)
		</foreach>
	</insert>

	<update id="update">
    <![CDATA[
        UPDATE asile_bank SET
	        asile_name = #{asileName, jdbcType=VARCHAR} ,
	        asile_code = #{asileCode, jdbcType=BIGINT} ,
	        bank_name = #{bankName, jdbcType=VARCHAR} ,
	        bank_code = #{bankCode, jdbcType=VARCHAR} ,
	        asile_product_code = #{asileProductCode, jdbcType=VARCHAR} ,
	        asile_product_name = #{asileProductName, jdbcType=VARCHAR} ,
	        asile_direct_bank = #{asileDirectBank, jdbcType=CHAR} ,
	        asile_public_private = #{asilePublicPrivate, jdbcType=CHAR} ,
	        asile_inteface_type = #{asileIntefaceType, jdbcType=CHAR} ,
	        asile_auth_type = #{asileAuthType, jdbcType=CHAR} ,
	        asile_auth_elements = #{asileAuthElements, jdbcType=INTEGER} ,
	        asile_auth_mode = #{asileAuthMode, jdbcType=CHAR} ,
	        asile_bank_type = #{asileBankType, jdbcType=CHAR} ,
	        asile_pay_type = #{asilePayType, jdbcType=CHAR} ,
	        asile_crash_limit = #{asileCrashLimit, jdbcType=DECIMAL} ,
	        card_crash_day_limit = #{cardCrashDayLimit, jdbcType=DECIMAL} ,
	        card_crash_month_limit = #{cardCrashMonthLimit, jdbcType=DECIMAL} ,
	        card_day_limits = #{cardDayLimits, jdbcType=TINYINT} ,
	        batch_crash_limit = #{batchCrashLimit, jdbcType=DECIMAL} ,
	        batch_limit = #{batchLimit, jdbcType=TINYINT} ,
	        remark = #{remark, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        creater_id = #{createrId, jdbcType=BIGINT} ,
	        creater_name = #{createrName, jdbcType=VARCHAR} ,
	        update_time = #{updateTime, jdbcType=TIMESTAMP} ,
	        updater_id = #{updaterId, jdbcType=BIGINT} ,
	        updater_name = #{updaterName, jdbcType=VARCHAR} ,
	        is_delete = #{isDelete, jdbcType=CHAR} ,
	        asile_only_time = #{asileOnlyTime, jdbcType=TIMESTAMP} ,
	        asile_service_begin_time = #{asileServiceBeginTime, jdbcType=TIMESTAMP} ,
	        asile_service_end_time = #{asileServiceEndTime, jdbcType=TIMESTAMP} ,
	        priority = #{priority, jdbcType=TINYINT} ,
	        borrow_split = #{borrowSplit, jdbcType=CHAR} ,
	        sms_sender = #{smsSender, jdbcType=CHAR} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>
	<update id="updateNotNull" >
			UPDATE asile_bank 
				<set>
			       	<if test="null!=asileName and ''!=asileName ">
	   			 		asile_name = #{asileName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileCode and ''!=asileCode ">
	   			 		asile_code = #{asileCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankName and ''!=bankName ">
	   			 		bank_name = #{bankName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankCode and ''!=bankCode ">
	   			 		bank_code = #{bankCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileProductCode and ''!=asileProductCode ">
	   			 		asile_product_code = #{asileProductCode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileProductName and ''!=asileProductName ">
	   			 		asile_product_name = #{asileProductName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileDirectBank and ''!=asileDirectBank ">
	   			 		asile_direct_bank = #{asileDirectBank, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asilePublicPrivate and ''!=asilePublicPrivate ">
	   			 		asile_public_private = #{asilePublicPrivate, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileIntefaceType and ''!=asileIntefaceType ">
	   			 		asile_inteface_type = #{asileIntefaceType, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileAuthType and ''!=asileAuthType ">
	   			 		asile_auth_type = #{asileAuthType, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileAuthElements and ''!=asileAuthElements ">
	   			 		asile_auth_elements = #{asileAuthElements, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=asileAuthMode and ''!=asileAuthMode ">
	   			 		asile_auth_mode = #{asileAuthMode, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileBankType and ''!=asileBankType ">
	   			 		asile_bank_type = #{asileBankType, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asilePayType and ''!=asilePayType ">
	   			 		asile_pay_type = #{asilePayType, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=asileCrashLimit and ''!=asileCrashLimit ">
	   			 		asile_crash_limit = #{asileCrashLimit, jdbcType=DECIMAL} ,
	   			   	</if>
			       	<if test="null!=cardCrashDayLimit and ''!=cardCrashDayLimit ">
	   			 		card_crash_day_limit = #{cardCrashDayLimit, jdbcType=DECIMAL} ,
	   			   	</if>
			       	<if test="null!=cardCrashMonthLimit and ''!=cardCrashMonthLimit ">
	   			 		card_crash_month_limit = #{cardCrashMonthLimit, jdbcType=DECIMAL} ,
	   			   	</if>
			       	<if test="null!=cardDayLimits and ''!=cardDayLimits ">
	   			 		card_day_limits = #{cardDayLimits, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=batchCrashLimit and ''!=batchCrashLimit ">
	   			 		batch_crash_limit = #{batchCrashLimit, jdbcType=DECIMAL} ,
	   			   	</if>
			       	<if test="null!=batchLimit and ''!=batchLimit ">
	   			 		batch_limit = #{batchLimit, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=remark and ''!=remark ">
	   			 		remark = #{remark, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=createTime and ''!=createTime ">
	   			 		create_time = #{createTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=createrId and ''!=createrId ">
	   			 		creater_id = #{createrId, jdbcType=BIGINT} ,
	   			   	</if>
			       	<if test="null!=createrName and ''!=createrName ">
	   			 		creater_name = #{createrName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=updateTime and ''!=updateTime ">
	   			 		update_time = #{updateTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=updaterId and ''!=updaterId ">
	   			 		updater_id = #{updaterId, jdbcType=BIGINT} ,
	   			   	</if>
			       	<if test="null!=updaterName and ''!=updaterName ">
	   			 		updater_name = #{updaterName, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=isDelete and ''!=isDelete ">
	   			 		is_delete = #{isDelete, jdbcType=CHAR} ,
	   			   	</if>
			       	<if test="null!=asileOnlyTime and ''!=asileOnlyTime ">
	   			 		asile_only_time = #{asileOnlyTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=asileServiceBeginTime and ''!=asileServiceBeginTime ">
	   			 		asile_service_begin_time = #{asileServiceBeginTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=asileServiceEndTime and ''!=asileServiceEndTime ">
	   			 		asile_service_end_time = #{asileServiceEndTime, jdbcType=TIMESTAMP} ,
	   			   	</if>
			       	<if test="null!=priority and ''!=priority ">
	   			 		priority = #{priority, jdbcType=INTEGER} ,
	   			   	</if>
			       	<if test="null!=borrowSplit and ''!=borrowSplit ">
	   			 		borrow_split = #{borrowSplit, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=smsSender and ''!=smsSender ">
	   			 		sms_sender = #{smsSender, jdbcType=VARCHAR} ,
	   			   	</if>
			       	<if test="null!=bankShort and ''!=bankShort ">
	   			 		bank_short = #{bankShort, jdbcType=VARCHAR} ,
	   			   	</if>
				</set>
			WHERE
				id = #{id} 
	</update>
	
	<delete id="delete">
    <![CDATA[
        DELETE FROM asile_bank WHERE
        id = #{id} 
    ]]>
	</delete>

	<select id="getById" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM asile_bank 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>

	<sql id="findWhere">
		<where>
			<choose>
				<when test="queryType==0">
					<if test="null!=asileName and ''!=asileName ">
						AND asile_name = #{asileName}
					</if>
					<if test="null!=bankName and ''!=bankName ">
						AND bank_name = #{bankName}
					</if>
					<if test="null!=bankShort and ''!=bankShort">
					 AND bank_short=#{bankShort}
					</if>
					<if test="null!=asileProductCode and ''!=asileProductCode ">
						AND asile_product_code = #{asileProductCode}
					</if>
					<if test="null!=asileProductName and ''!=asileProductName ">
						AND asile_product_name = #{asileProductName}
					</if>
					<if test="null!=asileDirectBank and ''!=asileDirectBank ">
						AND asile_direct_bank = #{asileDirectBank}
					</if>
					<if test="null!=asilePublicPrivate and ''!=asilePublicPrivate ">
						AND asile_public_private = #{asilePublicPrivate}
					</if>
					<if test="null!=asileIntefaceType and ''!=asileIntefaceType ">
						AND asile_inteface_type = #{asileIntefaceType}
					</if>
					<if test="null!=asileAuthType and ''!=asileAuthType ">
						AND asile_auth_type = #{asileAuthType}
					</if>
					<if test="null!=asileAuthMode and ''!=asileAuthMode ">
						AND asile_auth_mode = #{asileAuthMode}
					</if>
					<if test="null!=asileBankType and ''!=asileBankType ">
						AND asile_bank_type = #{asileBankType}
					</if>
					<if test="null!=asilePayType and ''!=asilePayType ">
						AND asile_pay_type = #{asilePayType}
					</if>
					<if test="null!=remark and ''!=remark ">
						AND remark = #{remark}
					</if>
					<if test="null!=createrName and ''!=createrName ">
						AND creater_name = #{createrName}
					</if>
					<if test="null!=updaterName and ''!=updaterName ">
						AND updater_name = #{updaterName}
					</if>
					<if test="null!=isDelete and ''!=isDelete ">
						AND is_delete = #{isDelete}
					</if>
					<if test="null!=borrowSplit and ''!=borrowSplit ">
						AND borrow_split = #{borrowSplit}
					</if>
					<if test="null!=smsSender and ''!=smsSender ">
						AND sms_sender = #{smsSender}
					</if>
				</when>
				<otherwise>
					<if test="null!=asileName and ''!=asileName">
						<!-- AND asile_name LIKE '%'||#{asileName}||'%' oracle -->
						AND asile_name LIKE concat('%',#{asileName},'%')

					</if>
					<if test="null!=bankName and ''!=bankName">
						<!-- AND bank_name LIKE '%'||#{bankName}||'%' oracle -->
						AND bank_name LIKE concat('%',#{bankName},'%')

					</if>
					<if test="null!=asileProductCode and ''!=asileProductCode">
						<!-- AND asile_product_code LIKE '%'||#{asileProductCode}||'%' oracle -->
						AND asile_product_code LIKE concat('%',#{asileProductCode},'%')

					</if>
					<if test="null!=asileProductName and ''!=asileProductName">
						<!-- AND asile_product_name LIKE '%'||#{asileProductName}||'%' oracle -->
						AND asile_product_name LIKE concat('%',#{asileProductName},'%')

					</if>
					<if test="null!=asileDirectBank and ''!=asileDirectBank">
						<!-- AND asile_direct_bank LIKE '%'||#{asileDirectBank}||'%' oracle -->
						AND asile_direct_bank LIKE concat('%',#{asileDirectBank},'%')

					</if>
					<if test="null!=asilePublicPrivate and ''!=asilePublicPrivate">
						<!-- AND asile_public_private LIKE '%'||#{asilePublicPrivate}||'%' 
							oracle -->
						AND asile_public_private LIKE
						concat('%',#{asilePublicPrivate},'%')

					</if>
					<if test="null!=asileIntefaceType and ''!=asileIntefaceType">
						<!-- AND asile_inteface_type LIKE '%'||#{asileIntefaceType}||'%' oracle -->
						AND asile_inteface_type LIKE concat('%',#{asileIntefaceType},'%')

					</if>
					<if test="null!=asileAuthType and ''!=asileAuthType">
						<!-- AND asile_auth_type LIKE '%'||#{asileAuthType}||'%' oracle -->
						AND asile_auth_type LIKE concat('%',#{asileAuthType},'%')

					</if>
					<if test="null!=asileAuthMode and ''!=asileAuthMode">
						<!-- AND asile_auth_mode LIKE '%'||#{asileAuthMode}||'%' oracle -->
						AND asile_auth_mode LIKE concat('%',#{asileAuthMode},'%')

					</if>
					<if test="null!=asileBankType and ''!=asileBankType">
						<!-- AND asile_bank_type LIKE '%'||#{asileBankType}||'%' oracle -->
						AND asile_bank_type LIKE concat('%',#{asileBankType},'%')

					</if>
					<if test="null!=asilePayType and ''!=asilePayType">
						<!-- AND asile_pay_type LIKE '%'||#{asilePayType}||'%' oracle -->
						AND asile_pay_type LIKE concat('%',#{asilePayType},'%')

					</if>
					<if test="null!=remark and ''!=remark">
						<!-- AND remark LIKE '%'||#{remark}||'%' oracle -->
						AND remark LIKE concat('%',#{remark},'%')

					</if>
					<if test="null!=createrName and ''!=createrName">
						<!-- AND creater_name LIKE '%'||#{createrName}||'%' oracle -->
						AND creater_name LIKE concat('%',#{createrName},'%')

					</if>
					<if test="null!=updaterName and ''!=updaterName">
						<!-- AND updater_name LIKE '%'||#{updaterName}||'%' oracle -->
						AND updater_name LIKE concat('%',#{updaterName},'%')

					</if>
					<if test="null!=isDelete and ''!=isDelete">
						<!-- AND is_delete LIKE '%'||#{isDelete}||'%' oracle -->
						AND is_delete LIKE concat('%',#{isDelete},'%')

					</if>
					<if test="null!=borrowSplit and ''!=borrowSplit">
						<!-- AND borrow_split LIKE '%'||#{borrowSplit}||'%' oracle -->
						AND borrow_split LIKE concat('%',#{borrowSplit},'%')

					</if>
					<if test="null!=smsSender and ''!=smsSender">
						<!-- AND sms_sender LIKE '%'||#{smsSender}||'%' oracle -->
						AND sms_sender LIKE concat('%',#{smsSender},'%')

					</if>
				</otherwise>
			</choose>
			<if test="null!=id and ''!=id">
				AND id = #{id}
			</if>
			<if test="null!=asileCode and ''!=asileCode">
				AND asile_code = #{asileCode}
			</if>
			<if test="null!=bankCode and ''!=bankCode">
				AND bank_code = #{bankCode}
			</if>
			<if test="null!=asileAuthElements and ''!=asileAuthElements">
				AND asile_auth_elements = #{asileAuthElements}
			</if>
			<if test="null!=asileCrashLimit and ''!=asileCrashLimit">
				AND asile_crash_limit = #{asileCrashLimit}
			</if>
			<if test="null!=cardCrashDayLimit and ''!=cardCrashDayLimit">
				AND card_crash_day_limit = #{cardCrashDayLimit}
			</if>
			<if test="null!=cardCrashMonthLimit and ''!=cardCrashMonthLimit">
				AND card_crash_month_limit = #{cardCrashMonthLimit}
			</if>
			<if test="null!=cardDayLimits and ''!=cardDayLimits">
				AND card_day_limits = #{cardDayLimits}
			</if>
			<if test="null!=batchCrashLimit and ''!=batchCrashLimit">
				AND batch_crash_limit = #{batchCrashLimit}
			</if>
			<if test="null!=batchLimit and ''!=batchLimit">
				AND batch_limit = #{batchLimit}
			</if>
			<if test="null!=createTimeBegin and ''!=createTimeBegin">
				AND create_time >= #{createTimeBegin}
			</if>
			<if test="null!=createTimeEnd and ''!=createTimeEnd">
				AND create_time &lt; #{createTimeEnd}
			</if>
			<if test="null!=createrId and ''!=createrId">
				AND creater_id = #{createrId}
			</if>
			<if test="null!=updateTimeBegin and ''!=updateTimeBegin">
				AND update_time >= #{updateTimeBegin}
			</if>
			<if test="null!=updateTimeEnd and ''!=updateTimeEnd">
				AND update_time &lt; #{updateTimeEnd}
			</if>
			<if test="null!=updaterId and ''!=updaterId">
				AND updater_id = #{updaterId}
			</if>
			<if test="null!=asileOnlyTimeBegin and ''!=asileOnlyTimeBegin">
				AND asile_only_time >= #{asileOnlyTimeBegin}
			</if>
			<if test="null!=asileOnlyTimeEnd and ''!=asileOnlyTimeEnd">
				AND asile_only_time &lt; #{asileOnlyTimeEnd}
			</if>
			<if test="null!=priority and ''!=priority">
				AND priority = #{priority}
			</if>
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(*) FROM asile_bank
		<include refid="findWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 #offset#,#pageSize#,#lastRows# 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findPage" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
		FROM asile_bank
		<include refid="findWhere" />
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
		<if test="null!=offset and null!=limit">
			limit #{offset} , #{limit}
		</if>


	</select>


	<select id="find" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
		FROM asile_bank
		<include refid="findWhere" />
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findBankByLimitAndCodeAndTime" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
		FROM asile_bank
		WHERE asile_crash_limit >= #{asileCrashLimit,
		jdbcType=DECIMAL}
		<if test="null!=bankCode and null!=bankCode">
			AND bank_code = #{bankCode, jdbcType=BIGINT}
		</if>
		<![CDATA[
		AND
		TIMESTAMPDIFF(SECOND,asile_service_begin_time, #{tradeDate,
		jdbcType=TIMESTAMP}) > 0
		AND
		TIMESTAMPDIFF(SECOND,asile_service_end_time,#{tradeDate,
		jdbcType=TIMESTAMP}) < 0
		]]>
	</select>

	<select id="findAsileBankByAsileCode" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
		FROM asile_bank
		WHERE
		asile_code = #{asileCode, jdbcType=VARCHAR}
		AND
		bank_code = #{bankCode, jdbcType=VARCHAR}
		AND
		asile_pay_type=#{asilePayType,jdbcType=CHAR}
	</select>

	<select id="findAsileBankPriorityMaxSum" resultType="long">
		SELECT
		MAX(priority)
		FROM asile_bank
		WHERE
		bank_code = #{bankCode,
		jdbcType=VARCHAR}
	</select>
	
	<select id="getAsileBankBybankShort" resultMap="AsileBank">
		SELECT
		<include refid="columns" />
		FROM asile_bank
		WHERE
		bank_short = #{bankShort, jdbcType=VARCHAR}
	</select>
</mapper>

